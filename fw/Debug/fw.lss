
fw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000156  00800060  00000a58  00000aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  008001b6  008001b6  00000c42  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c42  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f34  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000863  00000000  00000000  00001c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009cc  00000000  00000000  000024ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  00002ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000072db  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000545  00000000  00000000  0000a337  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000a87c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000003a0  00000000  00000000  0000a914  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	a6 c0       	rjmp	.+332    	; 0x14e <__ctors_end>
   2:	00 00       	nop
   4:	bf c0       	rjmp	.+382    	; 0x184 <__bad_interrupt>
   6:	00 00       	nop
   8:	bd c0       	rjmp	.+378    	; 0x184 <__bad_interrupt>
   a:	00 00       	nop
   c:	bb c0       	rjmp	.+374    	; 0x184 <__bad_interrupt>
   e:	00 00       	nop
  10:	b9 c0       	rjmp	.+370    	; 0x184 <__bad_interrupt>
  12:	00 00       	nop
  14:	b7 c0       	rjmp	.+366    	; 0x184 <__bad_interrupt>
  16:	00 00       	nop
  18:	b5 c0       	rjmp	.+362    	; 0x184 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	b3 c0       	rjmp	.+358    	; 0x184 <__bad_interrupt>
  1e:	00 00       	nop
  20:	b1 c0       	rjmp	.+354    	; 0x184 <__bad_interrupt>
  22:	00 00       	nop
  24:	0b c1       	rjmp	.+534    	; 0x23c <__vector_9>
  26:	00 00       	nop
  28:	ad c0       	rjmp	.+346    	; 0x184 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	ab c0       	rjmp	.+342    	; 0x184 <__bad_interrupt>
  2e:	00 00       	nop
  30:	a9 c0       	rjmp	.+338    	; 0x184 <__bad_interrupt>
  32:	00 00       	nop
  34:	a7 c0       	rjmp	.+334    	; 0x184 <__bad_interrupt>
  36:	00 00       	nop
  38:	a5 c0       	rjmp	.+330    	; 0x184 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	a3 c0       	rjmp	.+326    	; 0x184 <__bad_interrupt>
  3e:	00 00       	nop
  40:	a1 c0       	rjmp	.+322    	; 0x184 <__bad_interrupt>
  42:	00 00       	nop
  44:	9f c0       	rjmp	.+318    	; 0x184 <__bad_interrupt>
  46:	00 00       	nop
  48:	9d c0       	rjmp	.+314    	; 0x184 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	9b c0       	rjmp	.+310    	; 0x184 <__bad_interrupt>
  4e:	00 00       	nop
  50:	99 c0       	rjmp	.+306    	; 0x184 <__bad_interrupt>
	...

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <dtoa_prf+0x112>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <__divsf3_pse+0x50>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Char+0x14>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	11 e0       	ldi	r17, 0x01	; 1
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e8 e5       	ldi	r30, 0x58	; 88
 162:	fa e0       	ldi	r31, 0x0A	; 10
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a6 3b       	cpi	r26, 0xB6	; 182
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	21 e0       	ldi	r18, 0x01	; 1
 172:	a6 eb       	ldi	r26, 0xB6	; 182
 174:	b1 e0       	ldi	r27, 0x01	; 1
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	a8 3b       	cpi	r26, 0xB8	; 184
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	74 d0       	rcall	.+232    	; 0x26a <main>
 182:	68 c4       	rjmp	.+2256   	; 0xa54 <_exit>

00000184 <__bad_interrupt>:
 184:	3d cf       	rjmp	.-390    	; 0x0 <__vectors>

00000186 <LCD_Command>:
#include "keypad.h"


void LCD_Command(unsigned char cmnd)
{
	LCD_Data_Port= cmnd;
 186:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port &= ~(1<<RS);	/* RS=0 command reg. */
 188:	90 98       	cbi	0x12, 0	; 18
	LCD_Command_Port &= ~(1<<RW);	/* RW=0 Write operation */
 18a:	91 98       	cbi	0x12, 1	; 18
	LCD_Command_Port |= (1<<EN);	/* Enable pulse */
 18c:	92 9a       	sbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	8a 95       	dec	r24
 192:	f1 f7       	brne	.-4      	; 0x190 <LCD_Command+0xa>
 194:	00 c0       	rjmp	.+0      	; 0x196 <LCD_Command+0x10>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 196:	92 98       	cbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 198:	8f e6       	ldi	r24, 0x6F	; 111
 19a:	97 e1       	ldi	r25, 0x17	; 23
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCD_Command+0x16>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCD_Command+0x1c>
 1a2:	00 00       	nop
 1a4:	08 95       	ret

000001a6 <LCD_Char>:
	_delay_ms(3);
}

void LCD_Char (unsigned char char_data)	/* LCD data write function */
{
	LCD_Data_Port= char_data;
 1a6:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port |= (1<<RS);	/* RS=1 Data reg. */
 1a8:	90 9a       	sbi	0x12, 0	; 18
	LCD_Command_Port &= ~(1<<RW);	/* RW=0 write operation */
 1aa:	91 98       	cbi	0x12, 1	; 18
	LCD_Command_Port |= (1<<EN);	/* Enable Pulse */
 1ac:	92 9a       	sbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ae:	82 e0       	ldi	r24, 0x02	; 2
 1b0:	8a 95       	dec	r24
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <LCD_Char+0xa>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <LCD_Char+0x10>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 1b6:	92 98       	cbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b8:	8f ec       	ldi	r24, 0xCF	; 207
 1ba:	97 e0       	ldi	r25, 0x07	; 7
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <LCD_Char+0x16>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <LCD_Char+0x1c>
 1c2:	00 00       	nop
 1c4:	08 95       	ret

000001c6 <LCD_Init>:
	_delay_ms(1);
}

void LCD_Init (void)			/* LCD Initialize function */
{
	LCD_Command_Dir = 0xFF;		/* Make LCD command port direction as o/p */
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	81 bb       	out	0x11, r24	; 17
	LCD_Data_Dir = 0xFF;		/* Make LCD data port direction as o/p */
 1ca:	84 bb       	out	0x14, r24	; 20
 1cc:	8f e3       	ldi	r24, 0x3F	; 63
 1ce:	9c e9       	ldi	r25, 0x9C	; 156
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_Init+0xa>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_Init+0x10>
 1d6:	00 00       	nop
	_delay_ms(20);			/* LCD Power ON delay always >15ms */
	
	LCD_Command (0x38);		/* Initialization of 16X2 LCD in 8bit mode */
 1d8:	88 e3       	ldi	r24, 0x38	; 56
	LCD_Command (0x0C);		/* Display ON Cursor OFF */
 1da:	d5 df       	rcall	.-86     	; 0x186 <LCD_Command>
	LCD_Command (0x06);		/* Auto Increment cursor */
 1dc:	8c e0       	ldi	r24, 0x0C	; 12
	LCD_Command (0x01);		/* Clear display */
 1de:	d3 df       	rcall	.-90     	; 0x186 <LCD_Command>
 1e0:	86 e0       	ldi	r24, 0x06	; 6
	LCD_Command (0x80);		/* Cursor at home position */
 1e2:	d1 df       	rcall	.-94     	; 0x186 <LCD_Command>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	cf df       	rcall	.-98     	; 0x186 <LCD_Command>
 1e8:	80 e8       	ldi	r24, 0x80	; 128
 1ea:	cd cf       	rjmp	.-102    	; 0x186 <LCD_Command>
 1ec:	08 95       	ret

000001ee <LCD_String>:
}

void LCD_String (char *str)		/* Send string to LCD function */
{
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1f4:	88 81       	ld	r24, Y
 1f6:	88 23       	and	r24, r24
 1f8:	29 f0       	breq	.+10     	; 0x204 <LCD_String+0x16>
	{
		LCD_Char (str[i]);
 1fa:	21 96       	adiw	r28, 0x01	; 1
}

void LCD_String (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
 1fc:	d4 df       	rcall	.-88     	; 0x1a6 <LCD_Char>
 1fe:	89 91       	ld	r24, Y+
 200:	81 11       	cpse	r24, r1
	{
		LCD_Char (str[i]);
	}
}
 202:	fc cf       	rjmp	.-8      	; 0x1fc <LCD_String+0xe>
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	08 95       	ret

0000020a <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)/* Send string to LCD with xy position */
{
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	ea 01       	movw	r28, r20
	if (row == 0 && pos<16)
 210:	81 11       	cpse	r24, r1
 212:	07 c0       	rjmp	.+14     	; 0x222 <LCD_String_xy+0x18>
 214:	60 31       	cpi	r22, 0x10	; 16
 216:	6c f4       	brge	.+26     	; 0x232 <LCD_String_xy+0x28>
	LCD_Command((pos & 0x0F)|0x80);	/* Command of first row and required position<16 */
 218:	86 2f       	mov	r24, r22
 21a:	8f 70       	andi	r24, 0x0F	; 15
 21c:	80 68       	ori	r24, 0x80	; 128
 21e:	b3 df       	rcall	.-154    	; 0x186 <LCD_Command>
 220:	08 c0       	rjmp	.+16     	; 0x232 <LCD_String_xy+0x28>
	else if (row == 1 && pos<16)
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	31 f4       	brne	.+12     	; 0x232 <LCD_String_xy+0x28>
 226:	60 31       	cpi	r22, 0x10	; 16
 228:	24 f4       	brge	.+8      	; 0x232 <LCD_String_xy+0x28>
	LCD_Command((pos & 0x0F)|0xC0);	/* Command of first row and required position<16 */
 22a:	86 2f       	mov	r24, r22
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	80 6c       	ori	r24, 0xC0	; 192
	LCD_String(str);		/* Call LCD string function */
 230:	aa df       	rcall	.-172    	; 0x186 <LCD_Command>
 232:	ce 01       	movw	r24, r28
 234:	dc df       	rcall	.-72     	; 0x1ee <LCD_String>
}
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	08 95       	ret

0000023c <__vector_9>:
#define  Trigger_pin	PA2	/* Trigger pin */

int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	8f 93       	push	r24
 248:	9f 93       	push	r25
	TimerOverflow++;
 24a:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <__data_end>
 24e:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <__data_end+0x1>
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <__data_end+0x1>
 258:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <__data_end>
}
 25c:	9f 91       	pop	r25
 25e:	8f 91       	pop	r24
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <main>:
//}
//


int main(void)
{
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	2a 97       	sbiw	r28, 0x0a	; 10
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
	char string[10];
	long count;
	double distance;
	
	DDRA = 0x01;		/* Make trigger pin as output */
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	8a bb       	out	0x1a, r24	; 26
	PORTD = 0xFF;		/* Turn on Pull-up */
 282:	8f ef       	ldi	r24, 0xFF	; 255
	
	LCD_Init();
 284:	82 bb       	out	0x12, r24	; 18
	LCD_String_xy(1, 0, "Ultrasonic");
 286:	9f df       	rcall	.-194    	; 0x1c6 <LCD_Init>
 288:	40 e6       	ldi	r20, 0x60	; 96
 28a:	50 e0       	ldi	r21, 0x00	; 0
 28c:	60 e0       	ldi	r22, 0x00	; 0
	LCD_String("Hello");
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	bc df       	rcall	.-136    	; 0x20a <LCD_String_xy>
 292:	8b e6       	ldi	r24, 0x6B	; 107
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	ab df       	rcall	.-170    	; 0x1ee <LCD_String>
 298:	2f ef       	ldi	r18, 0xFF	; 255
 29a:	83 ed       	ldi	r24, 0xD3	; 211
 29c:	90 e3       	ldi	r25, 0x30	; 48
 29e:	21 50       	subi	r18, 0x01	; 1
 2a0:	80 40       	sbci	r24, 0x00	; 0
 2a2:	90 40       	sbci	r25, 0x00	; 0
 2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0x34>
	_delay_ms(1000);
	
	sei();			/* Enable global interrupt */
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x3e>
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 2a8:	00 00       	nop
 2aa:	78 94       	sei
	TCCR1A = 0;		/* Set all bit to zero Normal operation */
 2ac:	84 e0       	ldi	r24, 0x04	; 4
		PORTA |= (1 << Trigger_pin);
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
		
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 2ae:	89 bf       	out	0x39, r24	; 57
 2b0:	1f bc       	out	0x2f, r1	; 47
 2b2:	0f 2e       	mov	r0, r31
 2b4:	f1 e4       	ldi	r31, 0x41	; 65
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2b6:	af 2e       	mov	r10, r31
 2b8:	f0 2d       	mov	r31, r0
 2ba:	68 94       	set
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2bc:	cc 24       	eor	r12, r12
 2be:	c5 f8       	bld	r12, 5
 2c0:	68 94       	set

		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
		TCNT1 = 0;	/* Clear Timer counter */
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 2c2:	dd 24       	eor	r13, r13
 2c4:	d2 f8       	bld	r13, 2
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 2c6:	bb 24       	eor	r11, r11
 2c8:	b3 94       	inc	r11
 2ca:	ce 01       	movw	r24, r28
	TCCR1A = 0;		/* Set all bit to zero Normal operation */

	while(1)
	{
		/* Give 10us trigger pulse on trig. pin to HC-SR04 */
		PORTA |= (1 << Trigger_pin);
 2cc:	01 96       	adiw	r24, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ce:	7c 01       	movw	r14, r24
 2d0:	da 9a       	sbi	0x1b, 2	; 27
 2d2:	95 e3       	ldi	r25, 0x35	; 53
 2d4:	9a 95       	dec	r25
		_delay_us(10);
		PORTA &= (~(1 << Trigger_pin));
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x6a>
		
		TCNT1 = 0;	/* Clear Timer counter */
 2d8:	00 00       	nop
 2da:	da 98       	cbi	0x1b, 2	; 27
		TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 2dc:	1d bc       	out	0x2d, r1	; 45
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2de:	1c bc       	out	0x2c, r1	; 44
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2e0:	ae bc       	out	0x2e, r10	; 46

		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 2e2:	c8 be       	out	0x38, r12	; 56
 2e4:	d8 be       	out	0x38, r13	; 56
 2e6:	08 b6       	in	r0, 0x38	; 56
		TCNT1 = 0;	/* Clear Timer counter */
 2e8:	05 fe       	sbrs	r0, 5
 2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <main+0x7c>
		TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 2ec:	1d bc       	out	0x2d, r1	; 45
		TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2ee:	1c bc       	out	0x2c, r1	; 44
		TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 2f0:	be bc       	out	0x2e, r11	; 46
		TimerOverflow = 0;/* Clear Timer overflow count */
 2f2:	c8 be       	out	0x38, r12	; 56
 2f4:	d8 be       	out	0x38, r13	; 56
 2f6:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <__data_end+0x1>

		while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 2fa:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <__data_end>
 2fe:	08 b6       	in	r0, 0x38	; 56
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
 300:	05 fe       	sbrs	r0, 5
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;

		dtostrf(distance, 2, 2, string);/* distance to string */
 302:	fd cf       	rjmp	.-6      	; 0x2fe <main+0x94>
 304:	66 b5       	in	r22, 0x26	; 38
 306:	77 b5       	in	r23, 0x27	; 39
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	92 d0       	rcall	.+292    	; 0x432 <__floatsisf>
 30e:	29 e2       	ldi	r18, 0x29	; 41
 310:	3c e3       	ldi	r19, 0x3C	; 60
 312:	49 ee       	ldi	r20, 0xE9	; 233
 314:	53 e4       	ldi	r21, 0x43	; 67
 316:	23 d0       	rcall	.+70     	; 0x35e <__divsf3>
 318:	87 01       	movw	r16, r14
 31a:	22 e0       	ldi	r18, 0x02	; 2
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 31c:	42 e0       	ldi	r20, 0x02	; 2
 31e:	15 d1       	rcall	.+554    	; 0x54a <dtostrf>
 320:	d7 01       	movw	r26, r14
 322:	0d 90       	ld	r0, X+
 324:	00 20       	and	r0, r0
 326:	e9 f7       	brne	.-6      	; 0x322 <main+0xb8>
 328:	11 97       	sbiw	r26, 0x01	; 1
 32a:	87 e0       	ldi	r24, 0x07	; 7
 32c:	e1 e7       	ldi	r30, 0x71	; 113
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	01 90       	ld	r0, Z+
		LCD_String_xy(2, 0, "Dist = ");
 332:	0d 92       	st	X+, r0
 334:	8a 95       	dec	r24
 336:	e1 f7       	brne	.-8      	; 0x330 <main+0xc6>
 338:	48 e7       	ldi	r20, 0x78	; 120
 33a:	50 e0       	ldi	r21, 0x00	; 0
		LCD_String_xy(2, 7, string);	/* Print distance */
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	64 df       	rcall	.-312    	; 0x20a <LCD_String_xy>
 342:	a7 01       	movw	r20, r14
 344:	67 e0       	ldi	r22, 0x07	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	60 df       	rcall	.-320    	; 0x20a <LCD_String_xy>
 34a:	2f ef       	ldi	r18, 0xFF	; 255
 34c:	83 ec       	ldi	r24, 0xC3	; 195
 34e:	99 e0       	ldi	r25, 0x09	; 9
 350:	21 50       	subi	r18, 0x01	; 1
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	90 40       	sbci	r25, 0x00	; 0
 356:	e1 f7       	brne	.-8      	; 0x350 <main+0xe6>
 358:	00 c0       	rjmp	.+0      	; 0x35a <main+0xf0>
 35a:	00 00       	nop
 35c:	b9 cf       	rjmp	.-142    	; 0x2d0 <main+0x66>

0000035e <__divsf3>:
 35e:	0c d0       	rcall	.+24     	; 0x378 <__divsf3x>
 360:	ba c0       	rjmp	.+372    	; 0x4d6 <__fp_round>
 362:	b2 d0       	rcall	.+356    	; 0x4c8 <__fp_pscB>
 364:	40 f0       	brcs	.+16     	; 0x376 <__divsf3+0x18>
 366:	a9 d0       	rcall	.+338    	; 0x4ba <__fp_pscA>
 368:	30 f0       	brcs	.+12     	; 0x376 <__divsf3+0x18>
 36a:	21 f4       	brne	.+8      	; 0x374 <__divsf3+0x16>
 36c:	5f 3f       	cpi	r21, 0xFF	; 255
 36e:	19 f0       	breq	.+6      	; 0x376 <__divsf3+0x18>
 370:	9b c0       	rjmp	.+310    	; 0x4a8 <__fp_inf>
 372:	51 11       	cpse	r21, r1
 374:	e4 c0       	rjmp	.+456    	; 0x53e <__fp_szero>
 376:	9e c0       	rjmp	.+316    	; 0x4b4 <__fp_nan>

00000378 <__divsf3x>:
 378:	bf d0       	rcall	.+382    	; 0x4f8 <__fp_split3>
 37a:	98 f3       	brcs	.-26     	; 0x362 <__divsf3+0x4>

0000037c <__divsf3_pse>:
 37c:	99 23       	and	r25, r25
 37e:	c9 f3       	breq	.-14     	; 0x372 <__divsf3+0x14>
 380:	55 23       	and	r21, r21
 382:	b1 f3       	breq	.-20     	; 0x370 <__divsf3+0x12>
 384:	95 1b       	sub	r25, r21
 386:	55 0b       	sbc	r21, r21
 388:	bb 27       	eor	r27, r27
 38a:	aa 27       	eor	r26, r26
 38c:	62 17       	cp	r22, r18
 38e:	73 07       	cpc	r23, r19
 390:	84 07       	cpc	r24, r20
 392:	38 f0       	brcs	.+14     	; 0x3a2 <__divsf3_pse+0x26>
 394:	9f 5f       	subi	r25, 0xFF	; 255
 396:	5f 4f       	sbci	r21, 0xFF	; 255
 398:	22 0f       	add	r18, r18
 39a:	33 1f       	adc	r19, r19
 39c:	44 1f       	adc	r20, r20
 39e:	aa 1f       	adc	r26, r26
 3a0:	a9 f3       	breq	.-22     	; 0x38c <__divsf3_pse+0x10>
 3a2:	33 d0       	rcall	.+102    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3a4:	0e 2e       	mov	r0, r30
 3a6:	3a f0       	brmi	.+14     	; 0x3b6 <__divsf3_pse+0x3a>
 3a8:	e0 e8       	ldi	r30, 0x80	; 128
 3aa:	30 d0       	rcall	.+96     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ac:	91 50       	subi	r25, 0x01	; 1
 3ae:	50 40       	sbci	r21, 0x00	; 0
 3b0:	e6 95       	lsr	r30
 3b2:	00 1c       	adc	r0, r0
 3b4:	ca f7       	brpl	.-14     	; 0x3a8 <__divsf3_pse+0x2c>
 3b6:	29 d0       	rcall	.+82     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b8:	fe 2f       	mov	r31, r30
 3ba:	27 d0       	rcall	.+78     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3bc:	66 0f       	add	r22, r22
 3be:	77 1f       	adc	r23, r23
 3c0:	88 1f       	adc	r24, r24
 3c2:	bb 1f       	adc	r27, r27
 3c4:	26 17       	cp	r18, r22
 3c6:	37 07       	cpc	r19, r23
 3c8:	48 07       	cpc	r20, r24
 3ca:	ab 07       	cpc	r26, r27
 3cc:	b0 e8       	ldi	r27, 0x80	; 128
 3ce:	09 f0       	breq	.+2      	; 0x3d2 <__divsf3_pse+0x56>
 3d0:	bb 0b       	sbc	r27, r27
 3d2:	80 2d       	mov	r24, r0
 3d4:	bf 01       	movw	r22, r30
 3d6:	ff 27       	eor	r31, r31
 3d8:	93 58       	subi	r25, 0x83	; 131
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	2a f0       	brmi	.+10     	; 0x3e8 <__divsf3_pse+0x6c>
 3de:	9e 3f       	cpi	r25, 0xFE	; 254
 3e0:	51 05       	cpc	r21, r1
 3e2:	68 f0       	brcs	.+26     	; 0x3fe <__divsf3_pse+0x82>
 3e4:	61 c0       	rjmp	.+194    	; 0x4a8 <__fp_inf>
 3e6:	ab c0       	rjmp	.+342    	; 0x53e <__fp_szero>
 3e8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ea:	ec f3       	brlt	.-6      	; 0x3e6 <__divsf3_pse+0x6a>
 3ec:	98 3e       	cpi	r25, 0xE8	; 232
 3ee:	dc f3       	brlt	.-10     	; 0x3e6 <__divsf3_pse+0x6a>
 3f0:	86 95       	lsr	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	9f 5f       	subi	r25, 0xFF	; 255
 3fc:	c9 f7       	brne	.-14     	; 0x3f0 <__divsf3_pse+0x74>
 3fe:	88 0f       	add	r24, r24
 400:	91 1d       	adc	r25, r1
 402:	96 95       	lsr	r25
 404:	87 95       	ror	r24
 406:	97 f9       	bld	r25, 7
 408:	08 95       	ret
 40a:	e1 e0       	ldi	r30, 0x01	; 1
 40c:	66 0f       	add	r22, r22
 40e:	77 1f       	adc	r23, r23
 410:	88 1f       	adc	r24, r24
 412:	bb 1f       	adc	r27, r27
 414:	62 17       	cp	r22, r18
 416:	73 07       	cpc	r23, r19
 418:	84 07       	cpc	r24, r20
 41a:	ba 07       	cpc	r27, r26
 41c:	20 f0       	brcs	.+8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41e:	62 1b       	sub	r22, r18
 420:	73 0b       	sbc	r23, r19
 422:	84 0b       	sbc	r24, r20
 424:	ba 0b       	sbc	r27, r26
 426:	ee 1f       	adc	r30, r30
 428:	88 f7       	brcc	.-30     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 42a:	e0 95       	com	r30
 42c:	08 95       	ret

0000042e <__floatunsisf>:
 42e:	e8 94       	clt
 430:	09 c0       	rjmp	.+18     	; 0x444 <__floatsisf+0x12>

00000432 <__floatsisf>:
 432:	97 fb       	bst	r25, 7
 434:	3e f4       	brtc	.+14     	; 0x444 <__floatsisf+0x12>
 436:	90 95       	com	r25
 438:	80 95       	com	r24
 43a:	70 95       	com	r23
 43c:	61 95       	neg	r22
 43e:	7f 4f       	sbci	r23, 0xFF	; 255
 440:	8f 4f       	sbci	r24, 0xFF	; 255
 442:	9f 4f       	sbci	r25, 0xFF	; 255
 444:	99 23       	and	r25, r25
 446:	a9 f0       	breq	.+42     	; 0x472 <__floatsisf+0x40>
 448:	f9 2f       	mov	r31, r25
 44a:	96 e9       	ldi	r25, 0x96	; 150
 44c:	bb 27       	eor	r27, r27
 44e:	93 95       	inc	r25
 450:	f6 95       	lsr	r31
 452:	87 95       	ror	r24
 454:	77 95       	ror	r23
 456:	67 95       	ror	r22
 458:	b7 95       	ror	r27
 45a:	f1 11       	cpse	r31, r1
 45c:	f8 cf       	rjmp	.-16     	; 0x44e <__floatsisf+0x1c>
 45e:	fa f4       	brpl	.+62     	; 0x49e <__floatsisf+0x6c>
 460:	bb 0f       	add	r27, r27
 462:	11 f4       	brne	.+4      	; 0x468 <__floatsisf+0x36>
 464:	60 ff       	sbrs	r22, 0
 466:	1b c0       	rjmp	.+54     	; 0x49e <__floatsisf+0x6c>
 468:	6f 5f       	subi	r22, 0xFF	; 255
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	9f 4f       	sbci	r25, 0xFF	; 255
 470:	16 c0       	rjmp	.+44     	; 0x49e <__floatsisf+0x6c>
 472:	88 23       	and	r24, r24
 474:	11 f0       	breq	.+4      	; 0x47a <__floatsisf+0x48>
 476:	96 e9       	ldi	r25, 0x96	; 150
 478:	11 c0       	rjmp	.+34     	; 0x49c <__floatsisf+0x6a>
 47a:	77 23       	and	r23, r23
 47c:	21 f0       	breq	.+8      	; 0x486 <__floatsisf+0x54>
 47e:	9e e8       	ldi	r25, 0x8E	; 142
 480:	87 2f       	mov	r24, r23
 482:	76 2f       	mov	r23, r22
 484:	05 c0       	rjmp	.+10     	; 0x490 <__floatsisf+0x5e>
 486:	66 23       	and	r22, r22
 488:	71 f0       	breq	.+28     	; 0x4a6 <__floatsisf+0x74>
 48a:	96 e8       	ldi	r25, 0x86	; 134
 48c:	86 2f       	mov	r24, r22
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	60 e0       	ldi	r22, 0x00	; 0
 492:	2a f0       	brmi	.+10     	; 0x49e <__floatsisf+0x6c>
 494:	9a 95       	dec	r25
 496:	66 0f       	add	r22, r22
 498:	77 1f       	adc	r23, r23
 49a:	88 1f       	adc	r24, r24
 49c:	da f7       	brpl	.-10     	; 0x494 <__floatsisf+0x62>
 49e:	88 0f       	add	r24, r24
 4a0:	96 95       	lsr	r25
 4a2:	87 95       	ror	r24
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <__fp_inf>:
 4a8:	97 f9       	bld	r25, 7
 4aa:	9f 67       	ori	r25, 0x7F	; 127
 4ac:	80 e8       	ldi	r24, 0x80	; 128
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	08 95       	ret

000004b4 <__fp_nan>:
 4b4:	9f ef       	ldi	r25, 0xFF	; 255
 4b6:	80 ec       	ldi	r24, 0xC0	; 192
 4b8:	08 95       	ret

000004ba <__fp_pscA>:
 4ba:	00 24       	eor	r0, r0
 4bc:	0a 94       	dec	r0
 4be:	16 16       	cp	r1, r22
 4c0:	17 06       	cpc	r1, r23
 4c2:	18 06       	cpc	r1, r24
 4c4:	09 06       	cpc	r0, r25
 4c6:	08 95       	ret

000004c8 <__fp_pscB>:
 4c8:	00 24       	eor	r0, r0
 4ca:	0a 94       	dec	r0
 4cc:	12 16       	cp	r1, r18
 4ce:	13 06       	cpc	r1, r19
 4d0:	14 06       	cpc	r1, r20
 4d2:	05 06       	cpc	r0, r21
 4d4:	08 95       	ret

000004d6 <__fp_round>:
 4d6:	09 2e       	mov	r0, r25
 4d8:	03 94       	inc	r0
 4da:	00 0c       	add	r0, r0
 4dc:	11 f4       	brne	.+4      	; 0x4e2 <__fp_round+0xc>
 4de:	88 23       	and	r24, r24
 4e0:	52 f0       	brmi	.+20     	; 0x4f6 <__fp_round+0x20>
 4e2:	bb 0f       	add	r27, r27
 4e4:	40 f4       	brcc	.+16     	; 0x4f6 <__fp_round+0x20>
 4e6:	bf 2b       	or	r27, r31
 4e8:	11 f4       	brne	.+4      	; 0x4ee <__fp_round+0x18>
 4ea:	60 ff       	sbrs	r22, 0
 4ec:	04 c0       	rjmp	.+8      	; 0x4f6 <__fp_round+0x20>
 4ee:	6f 5f       	subi	r22, 0xFF	; 255
 4f0:	7f 4f       	sbci	r23, 0xFF	; 255
 4f2:	8f 4f       	sbci	r24, 0xFF	; 255
 4f4:	9f 4f       	sbci	r25, 0xFF	; 255
 4f6:	08 95       	ret

000004f8 <__fp_split3>:
 4f8:	57 fd       	sbrc	r21, 7
 4fa:	90 58       	subi	r25, 0x80	; 128
 4fc:	44 0f       	add	r20, r20
 4fe:	55 1f       	adc	r21, r21
 500:	59 f0       	breq	.+22     	; 0x518 <__fp_splitA+0x10>
 502:	5f 3f       	cpi	r21, 0xFF	; 255
 504:	71 f0       	breq	.+28     	; 0x522 <__fp_splitA+0x1a>
 506:	47 95       	ror	r20

00000508 <__fp_splitA>:
 508:	88 0f       	add	r24, r24
 50a:	97 fb       	bst	r25, 7
 50c:	99 1f       	adc	r25, r25
 50e:	61 f0       	breq	.+24     	; 0x528 <__fp_splitA+0x20>
 510:	9f 3f       	cpi	r25, 0xFF	; 255
 512:	79 f0       	breq	.+30     	; 0x532 <__fp_splitA+0x2a>
 514:	87 95       	ror	r24
 516:	08 95       	ret
 518:	12 16       	cp	r1, r18
 51a:	13 06       	cpc	r1, r19
 51c:	14 06       	cpc	r1, r20
 51e:	55 1f       	adc	r21, r21
 520:	f2 cf       	rjmp	.-28     	; 0x506 <__fp_split3+0xe>
 522:	46 95       	lsr	r20
 524:	f1 df       	rcall	.-30     	; 0x508 <__fp_splitA>
 526:	08 c0       	rjmp	.+16     	; 0x538 <__fp_splitA+0x30>
 528:	16 16       	cp	r1, r22
 52a:	17 06       	cpc	r1, r23
 52c:	18 06       	cpc	r1, r24
 52e:	99 1f       	adc	r25, r25
 530:	f1 cf       	rjmp	.-30     	; 0x514 <__fp_splitA+0xc>
 532:	86 95       	lsr	r24
 534:	71 05       	cpc	r23, r1
 536:	61 05       	cpc	r22, r1
 538:	08 94       	sec
 53a:	08 95       	ret

0000053c <__fp_zero>:
 53c:	e8 94       	clt

0000053e <__fp_szero>:
 53e:	bb 27       	eor	r27, r27
 540:	66 27       	eor	r22, r22
 542:	77 27       	eor	r23, r23
 544:	cb 01       	movw	r24, r22
 546:	97 f9       	bld	r25, 7
 548:	08 95       	ret

0000054a <dtostrf>:
 54a:	ef 92       	push	r14
 54c:	0f 93       	push	r16
 54e:	1f 93       	push	r17
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	e8 01       	movw	r28, r16
 556:	47 fd       	sbrc	r20, 7
 558:	02 c0       	rjmp	.+4      	; 0x55e <dtostrf+0x14>
 55a:	34 e0       	ldi	r19, 0x04	; 4
 55c:	01 c0       	rjmp	.+2      	; 0x560 <dtostrf+0x16>
 55e:	34 e1       	ldi	r19, 0x14	; 20
 560:	04 2e       	mov	r0, r20
 562:	00 0c       	add	r0, r0
 564:	55 0b       	sbc	r21, r21
 566:	57 ff       	sbrs	r21, 7
 568:	03 c0       	rjmp	.+6      	; 0x570 <dtostrf+0x26>
 56a:	51 95       	neg	r21
 56c:	41 95       	neg	r20
 56e:	51 09       	sbc	r21, r1
 570:	e3 2e       	mov	r14, r19
 572:	02 2f       	mov	r16, r18
 574:	24 2f       	mov	r18, r20
 576:	ae 01       	movw	r20, r28
 578:	07 d0       	rcall	.+14     	; 0x588 <dtoa_prf>
 57a:	ce 01       	movw	r24, r28
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	1f 91       	pop	r17
 582:	0f 91       	pop	r16
 584:	ef 90       	pop	r14
 586:	08 95       	ret

00000588 <dtoa_prf>:
 588:	a9 e0       	ldi	r26, 0x09	; 9
 58a:	b0 e0       	ldi	r27, 0x00	; 0
 58c:	e9 ec       	ldi	r30, 0xC9	; 201
 58e:	f2 e0       	ldi	r31, 0x02	; 2
 590:	30 c2       	rjmp	.+1120   	; 0x9f2 <__prologue_saves__+0xc>
 592:	6a 01       	movw	r12, r20
 594:	12 2f       	mov	r17, r18
 596:	b0 2e       	mov	r11, r16
 598:	2b e3       	ldi	r18, 0x3B	; 59
 59a:	20 17       	cp	r18, r16
 59c:	20 f0       	brcs	.+8      	; 0x5a6 <dtoa_prf+0x1e>
 59e:	ff 24       	eor	r15, r15
 5a0:	f3 94       	inc	r15
 5a2:	f0 0e       	add	r15, r16
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <dtoa_prf+0x22>
 5a6:	2c e3       	ldi	r18, 0x3C	; 60
 5a8:	f2 2e       	mov	r15, r18
 5aa:	0f 2d       	mov	r16, r15
 5ac:	27 e0       	ldi	r18, 0x07	; 7
 5ae:	ae 01       	movw	r20, r28
 5b0:	4f 5f       	subi	r20, 0xFF	; 255
 5b2:	5f 4f       	sbci	r21, 0xFF	; 255
 5b4:	40 d1       	rcall	.+640    	; 0x836 <__ftoa_engine>
 5b6:	bc 01       	movw	r22, r24
 5b8:	49 81       	ldd	r20, Y+1	; 0x01
 5ba:	84 2f       	mov	r24, r20
 5bc:	89 70       	andi	r24, 0x09	; 9
 5be:	81 30       	cpi	r24, 0x01	; 1
 5c0:	31 f0       	breq	.+12     	; 0x5ce <dtoa_prf+0x46>
 5c2:	e1 fc       	sbrc	r14, 1
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <dtoa_prf+0x4a>
 5c6:	e0 fe       	sbrs	r14, 0
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <dtoa_prf+0x4e>
 5ca:	90 e2       	ldi	r25, 0x20	; 32
 5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <dtoa_prf+0x50>
 5ce:	9d e2       	ldi	r25, 0x2D	; 45
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <dtoa_prf+0x50>
 5d2:	9b e2       	ldi	r25, 0x2B	; 43
 5d4:	01 c0       	rjmp	.+2      	; 0x5d8 <dtoa_prf+0x50>
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	5e 2d       	mov	r21, r14
 5da:	50 71       	andi	r21, 0x10	; 16
 5dc:	43 ff       	sbrs	r20, 3
 5de:	3c c0       	rjmp	.+120    	; 0x658 <dtoa_prf+0xd0>
 5e0:	91 11       	cpse	r25, r1
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <dtoa_prf+0x60>
 5e4:	83 e0       	ldi	r24, 0x03	; 3
 5e6:	01 c0       	rjmp	.+2      	; 0x5ea <dtoa_prf+0x62>
 5e8:	84 e0       	ldi	r24, 0x04	; 4
 5ea:	81 17       	cp	r24, r17
 5ec:	18 f4       	brcc	.+6      	; 0x5f4 <dtoa_prf+0x6c>
 5ee:	21 2f       	mov	r18, r17
 5f0:	28 1b       	sub	r18, r24
 5f2:	01 c0       	rjmp	.+2      	; 0x5f6 <dtoa_prf+0x6e>
 5f4:	20 e0       	ldi	r18, 0x00	; 0
 5f6:	51 11       	cpse	r21, r1
 5f8:	0b c0       	rjmp	.+22     	; 0x610 <dtoa_prf+0x88>
 5fa:	f6 01       	movw	r30, r12
 5fc:	82 2f       	mov	r24, r18
 5fe:	30 e2       	ldi	r19, 0x20	; 32
 600:	88 23       	and	r24, r24
 602:	19 f0       	breq	.+6      	; 0x60a <dtoa_prf+0x82>
 604:	31 93       	st	Z+, r19
 606:	81 50       	subi	r24, 0x01	; 1
 608:	fb cf       	rjmp	.-10     	; 0x600 <dtoa_prf+0x78>
 60a:	c2 0e       	add	r12, r18
 60c:	d1 1c       	adc	r13, r1
 60e:	20 e0       	ldi	r18, 0x00	; 0
 610:	99 23       	and	r25, r25
 612:	29 f0       	breq	.+10     	; 0x61e <dtoa_prf+0x96>
 614:	d6 01       	movw	r26, r12
 616:	9c 93       	st	X, r25
 618:	f6 01       	movw	r30, r12
 61a:	31 96       	adiw	r30, 0x01	; 1
 61c:	6f 01       	movw	r12, r30
 61e:	c6 01       	movw	r24, r12
 620:	03 96       	adiw	r24, 0x03	; 3
 622:	e2 fe       	sbrs	r14, 2
 624:	0a c0       	rjmp	.+20     	; 0x63a <dtoa_prf+0xb2>
 626:	3e e4       	ldi	r19, 0x4E	; 78
 628:	d6 01       	movw	r26, r12
 62a:	3c 93       	st	X, r19
 62c:	41 e4       	ldi	r20, 0x41	; 65
 62e:	11 96       	adiw	r26, 0x01	; 1
 630:	4c 93       	st	X, r20
 632:	11 97       	sbiw	r26, 0x01	; 1
 634:	12 96       	adiw	r26, 0x02	; 2
 636:	3c 93       	st	X, r19
 638:	06 c0       	rjmp	.+12     	; 0x646 <dtoa_prf+0xbe>
 63a:	3e e6       	ldi	r19, 0x6E	; 110
 63c:	f6 01       	movw	r30, r12
 63e:	30 83       	st	Z, r19
 640:	41 e6       	ldi	r20, 0x61	; 97
 642:	41 83       	std	Z+1, r20	; 0x01
 644:	32 83       	std	Z+2, r19	; 0x02
 646:	fc 01       	movw	r30, r24
 648:	32 2f       	mov	r19, r18
 64a:	40 e2       	ldi	r20, 0x20	; 32
 64c:	33 23       	and	r19, r19
 64e:	09 f4       	brne	.+2      	; 0x652 <dtoa_prf+0xca>
 650:	42 c0       	rjmp	.+132    	; 0x6d6 <dtoa_prf+0x14e>
 652:	41 93       	st	Z+, r20
 654:	31 50       	subi	r19, 0x01	; 1
 656:	fa cf       	rjmp	.-12     	; 0x64c <dtoa_prf+0xc4>
 658:	42 ff       	sbrs	r20, 2
 65a:	44 c0       	rjmp	.+136    	; 0x6e4 <dtoa_prf+0x15c>
 65c:	91 11       	cpse	r25, r1
 65e:	02 c0       	rjmp	.+4      	; 0x664 <dtoa_prf+0xdc>
 660:	83 e0       	ldi	r24, 0x03	; 3
 662:	01 c0       	rjmp	.+2      	; 0x666 <dtoa_prf+0xde>
 664:	84 e0       	ldi	r24, 0x04	; 4
 666:	81 17       	cp	r24, r17
 668:	18 f4       	brcc	.+6      	; 0x670 <dtoa_prf+0xe8>
 66a:	21 2f       	mov	r18, r17
 66c:	28 1b       	sub	r18, r24
 66e:	01 c0       	rjmp	.+2      	; 0x672 <dtoa_prf+0xea>
 670:	20 e0       	ldi	r18, 0x00	; 0
 672:	51 11       	cpse	r21, r1
 674:	0b c0       	rjmp	.+22     	; 0x68c <dtoa_prf+0x104>
 676:	f6 01       	movw	r30, r12
 678:	82 2f       	mov	r24, r18
 67a:	30 e2       	ldi	r19, 0x20	; 32
 67c:	88 23       	and	r24, r24
 67e:	19 f0       	breq	.+6      	; 0x686 <dtoa_prf+0xfe>
 680:	31 93       	st	Z+, r19
 682:	81 50       	subi	r24, 0x01	; 1
 684:	fb cf       	rjmp	.-10     	; 0x67c <dtoa_prf+0xf4>
 686:	c2 0e       	add	r12, r18
 688:	d1 1c       	adc	r13, r1
 68a:	20 e0       	ldi	r18, 0x00	; 0
 68c:	99 23       	and	r25, r25
 68e:	29 f0       	breq	.+10     	; 0x69a <dtoa_prf+0x112>
 690:	d6 01       	movw	r26, r12
 692:	9c 93       	st	X, r25
 694:	f6 01       	movw	r30, r12
 696:	31 96       	adiw	r30, 0x01	; 1
 698:	6f 01       	movw	r12, r30
 69a:	c6 01       	movw	r24, r12
 69c:	03 96       	adiw	r24, 0x03	; 3
 69e:	e2 fe       	sbrs	r14, 2
 6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <dtoa_prf+0x130>
 6a2:	39 e4       	ldi	r19, 0x49	; 73
 6a4:	d6 01       	movw	r26, r12
 6a6:	3c 93       	st	X, r19
 6a8:	3e e4       	ldi	r19, 0x4E	; 78
 6aa:	11 96       	adiw	r26, 0x01	; 1
 6ac:	3c 93       	st	X, r19
 6ae:	11 97       	sbiw	r26, 0x01	; 1
 6b0:	36 e4       	ldi	r19, 0x46	; 70
 6b2:	12 96       	adiw	r26, 0x02	; 2
 6b4:	3c 93       	st	X, r19
 6b6:	07 c0       	rjmp	.+14     	; 0x6c6 <dtoa_prf+0x13e>
 6b8:	39 e6       	ldi	r19, 0x69	; 105
 6ba:	f6 01       	movw	r30, r12
 6bc:	30 83       	st	Z, r19
 6be:	3e e6       	ldi	r19, 0x6E	; 110
 6c0:	31 83       	std	Z+1, r19	; 0x01
 6c2:	36 e6       	ldi	r19, 0x66	; 102
 6c4:	32 83       	std	Z+2, r19	; 0x02
 6c6:	fc 01       	movw	r30, r24
 6c8:	32 2f       	mov	r19, r18
 6ca:	40 e2       	ldi	r20, 0x20	; 32
 6cc:	33 23       	and	r19, r19
 6ce:	19 f0       	breq	.+6      	; 0x6d6 <dtoa_prf+0x14e>
 6d0:	41 93       	st	Z+, r20
 6d2:	31 50       	subi	r19, 0x01	; 1
 6d4:	fb cf       	rjmp	.-10     	; 0x6cc <dtoa_prf+0x144>
 6d6:	fc 01       	movw	r30, r24
 6d8:	e2 0f       	add	r30, r18
 6da:	f1 1d       	adc	r31, r1
 6dc:	10 82       	st	Z, r1
 6de:	8e ef       	ldi	r24, 0xFE	; 254
 6e0:	9f ef       	ldi	r25, 0xFF	; 255
 6e2:	a6 c0       	rjmp	.+332    	; 0x830 <dtoa_prf+0x2a8>
 6e4:	21 e0       	ldi	r18, 0x01	; 1
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	91 11       	cpse	r25, r1
 6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <dtoa_prf+0x168>
 6ec:	20 e0       	ldi	r18, 0x00	; 0
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	16 16       	cp	r1, r22
 6f2:	17 06       	cpc	r1, r23
 6f4:	1c f4       	brge	.+6      	; 0x6fc <dtoa_prf+0x174>
 6f6:	fb 01       	movw	r30, r22
 6f8:	31 96       	adiw	r30, 0x01	; 1
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <dtoa_prf+0x178>
 6fc:	e1 e0       	ldi	r30, 0x01	; 1
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	2e 0f       	add	r18, r30
 702:	3f 1f       	adc	r19, r31
 704:	bb 20       	and	r11, r11
 706:	21 f0       	breq	.+8      	; 0x710 <dtoa_prf+0x188>
 708:	eb 2d       	mov	r30, r11
 70a:	f0 e0       	ldi	r31, 0x00	; 0
 70c:	31 96       	adiw	r30, 0x01	; 1
 70e:	02 c0       	rjmp	.+4      	; 0x714 <dtoa_prf+0x18c>
 710:	e0 e0       	ldi	r30, 0x00	; 0
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	2e 0f       	add	r18, r30
 716:	3f 1f       	adc	r19, r31
 718:	e1 2f       	mov	r30, r17
 71a:	f0 e0       	ldi	r31, 0x00	; 0
 71c:	2e 17       	cp	r18, r30
 71e:	3f 07       	cpc	r19, r31
 720:	1c f4       	brge	.+6      	; 0x728 <dtoa_prf+0x1a0>
 722:	12 1b       	sub	r17, r18
 724:	21 2f       	mov	r18, r17
 726:	01 c0       	rjmp	.+2      	; 0x72a <dtoa_prf+0x1a2>
 728:	20 e0       	ldi	r18, 0x00	; 0
 72a:	8e 2d       	mov	r24, r14
 72c:	88 71       	andi	r24, 0x18	; 24
 72e:	59 f4       	brne	.+22     	; 0x746 <dtoa_prf+0x1be>
 730:	f6 01       	movw	r30, r12
 732:	82 2f       	mov	r24, r18
 734:	30 e2       	ldi	r19, 0x20	; 32
 736:	88 23       	and	r24, r24
 738:	19 f0       	breq	.+6      	; 0x740 <dtoa_prf+0x1b8>
 73a:	31 93       	st	Z+, r19
 73c:	81 50       	subi	r24, 0x01	; 1
 73e:	fb cf       	rjmp	.-10     	; 0x736 <dtoa_prf+0x1ae>
 740:	c2 0e       	add	r12, r18
 742:	d1 1c       	adc	r13, r1
 744:	20 e0       	ldi	r18, 0x00	; 0
 746:	99 23       	and	r25, r25
 748:	29 f0       	breq	.+10     	; 0x754 <dtoa_prf+0x1cc>
 74a:	d6 01       	movw	r26, r12
 74c:	9c 93       	st	X, r25
 74e:	f6 01       	movw	r30, r12
 750:	31 96       	adiw	r30, 0x01	; 1
 752:	6f 01       	movw	r12, r30
 754:	51 11       	cpse	r21, r1
 756:	0b c0       	rjmp	.+22     	; 0x76e <dtoa_prf+0x1e6>
 758:	f6 01       	movw	r30, r12
 75a:	82 2f       	mov	r24, r18
 75c:	90 e3       	ldi	r25, 0x30	; 48
 75e:	88 23       	and	r24, r24
 760:	19 f0       	breq	.+6      	; 0x768 <dtoa_prf+0x1e0>
 762:	91 93       	st	Z+, r25
 764:	81 50       	subi	r24, 0x01	; 1
 766:	fb cf       	rjmp	.-10     	; 0x75e <dtoa_prf+0x1d6>
 768:	c2 0e       	add	r12, r18
 76a:	d1 1c       	adc	r13, r1
 76c:	20 e0       	ldi	r18, 0x00	; 0
 76e:	0f 2d       	mov	r16, r15
 770:	06 0f       	add	r16, r22
 772:	9a 81       	ldd	r25, Y+2	; 0x02
 774:	34 2f       	mov	r19, r20
 776:	30 71       	andi	r19, 0x10	; 16
 778:	44 ff       	sbrs	r20, 4
 77a:	03 c0       	rjmp	.+6      	; 0x782 <dtoa_prf+0x1fa>
 77c:	91 33       	cpi	r25, 0x31	; 49
 77e:	09 f4       	brne	.+2      	; 0x782 <dtoa_prf+0x1fa>
 780:	01 50       	subi	r16, 0x01	; 1
 782:	10 16       	cp	r1, r16
 784:	24 f4       	brge	.+8      	; 0x78e <dtoa_prf+0x206>
 786:	09 30       	cpi	r16, 0x09	; 9
 788:	18 f0       	brcs	.+6      	; 0x790 <dtoa_prf+0x208>
 78a:	08 e0       	ldi	r16, 0x08	; 8
 78c:	01 c0       	rjmp	.+2      	; 0x790 <dtoa_prf+0x208>
 78e:	01 e0       	ldi	r16, 0x01	; 1
 790:	ab 01       	movw	r20, r22
 792:	77 ff       	sbrs	r23, 7
 794:	02 c0       	rjmp	.+4      	; 0x79a <dtoa_prf+0x212>
 796:	40 e0       	ldi	r20, 0x00	; 0
 798:	50 e0       	ldi	r21, 0x00	; 0
 79a:	fb 01       	movw	r30, r22
 79c:	e4 1b       	sub	r30, r20
 79e:	f5 0b       	sbc	r31, r21
 7a0:	a1 e0       	ldi	r26, 0x01	; 1
 7a2:	b0 e0       	ldi	r27, 0x00	; 0
 7a4:	ac 0f       	add	r26, r28
 7a6:	bd 1f       	adc	r27, r29
 7a8:	ea 0f       	add	r30, r26
 7aa:	fb 1f       	adc	r31, r27
 7ac:	8e e2       	ldi	r24, 0x2E	; 46
 7ae:	a8 2e       	mov	r10, r24
 7b0:	4b 01       	movw	r8, r22
 7b2:	80 1a       	sub	r8, r16
 7b4:	91 08       	sbc	r9, r1
 7b6:	0b 2d       	mov	r16, r11
 7b8:	10 e0       	ldi	r17, 0x00	; 0
 7ba:	11 95       	neg	r17
 7bc:	01 95       	neg	r16
 7be:	11 09       	sbc	r17, r1
 7c0:	4f 3f       	cpi	r20, 0xFF	; 255
 7c2:	bf ef       	ldi	r27, 0xFF	; 255
 7c4:	5b 07       	cpc	r21, r27
 7c6:	21 f4       	brne	.+8      	; 0x7d0 <dtoa_prf+0x248>
 7c8:	d6 01       	movw	r26, r12
 7ca:	ac 92       	st	X, r10
 7cc:	11 96       	adiw	r26, 0x01	; 1
 7ce:	6d 01       	movw	r12, r26
 7d0:	64 17       	cp	r22, r20
 7d2:	75 07       	cpc	r23, r21
 7d4:	2c f0       	brlt	.+10     	; 0x7e0 <dtoa_prf+0x258>
 7d6:	84 16       	cp	r8, r20
 7d8:	95 06       	cpc	r9, r21
 7da:	14 f4       	brge	.+4      	; 0x7e0 <dtoa_prf+0x258>
 7dc:	81 81       	ldd	r24, Z+1	; 0x01
 7de:	01 c0       	rjmp	.+2      	; 0x7e2 <dtoa_prf+0x25a>
 7e0:	80 e3       	ldi	r24, 0x30	; 48
 7e2:	41 50       	subi	r20, 0x01	; 1
 7e4:	51 09       	sbc	r21, r1
 7e6:	31 96       	adiw	r30, 0x01	; 1
 7e8:	d6 01       	movw	r26, r12
 7ea:	11 96       	adiw	r26, 0x01	; 1
 7ec:	7d 01       	movw	r14, r26
 7ee:	40 17       	cp	r20, r16
 7f0:	51 07       	cpc	r21, r17
 7f2:	24 f0       	brlt	.+8      	; 0x7fc <dtoa_prf+0x274>
 7f4:	d6 01       	movw	r26, r12
 7f6:	8c 93       	st	X, r24
 7f8:	67 01       	movw	r12, r14
 7fa:	e2 cf       	rjmp	.-60     	; 0x7c0 <dtoa_prf+0x238>
 7fc:	64 17       	cp	r22, r20
 7fe:	75 07       	cpc	r23, r21
 800:	39 f4       	brne	.+14     	; 0x810 <dtoa_prf+0x288>
 802:	96 33       	cpi	r25, 0x36	; 54
 804:	20 f4       	brcc	.+8      	; 0x80e <dtoa_prf+0x286>
 806:	95 33       	cpi	r25, 0x35	; 53
 808:	19 f4       	brne	.+6      	; 0x810 <dtoa_prf+0x288>
 80a:	31 11       	cpse	r19, r1
 80c:	01 c0       	rjmp	.+2      	; 0x810 <dtoa_prf+0x288>
 80e:	81 e3       	ldi	r24, 0x31	; 49
 810:	f6 01       	movw	r30, r12
 812:	80 83       	st	Z, r24
 814:	f7 01       	movw	r30, r14
 816:	82 2f       	mov	r24, r18
 818:	90 e2       	ldi	r25, 0x20	; 32
 81a:	88 23       	and	r24, r24
 81c:	19 f0       	breq	.+6      	; 0x824 <dtoa_prf+0x29c>
 81e:	91 93       	st	Z+, r25
 820:	81 50       	subi	r24, 0x01	; 1
 822:	fb cf       	rjmp	.-10     	; 0x81a <dtoa_prf+0x292>
 824:	f7 01       	movw	r30, r14
 826:	e2 0f       	add	r30, r18
 828:	f1 1d       	adc	r31, r1
 82a:	10 82       	st	Z, r1
 82c:	80 e0       	ldi	r24, 0x00	; 0
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	29 96       	adiw	r28, 0x09	; 9
 832:	ec e0       	ldi	r30, 0x0C	; 12
 834:	fa c0       	rjmp	.+500    	; 0xa2a <__epilogue_restores__+0xc>

00000836 <__ftoa_engine>:
 836:	28 30       	cpi	r18, 0x08	; 8
 838:	08 f0       	brcs	.+2      	; 0x83c <__ftoa_engine+0x6>
 83a:	27 e0       	ldi	r18, 0x07	; 7
 83c:	33 27       	eor	r19, r19
 83e:	da 01       	movw	r26, r20
 840:	99 0f       	add	r25, r25
 842:	31 1d       	adc	r19, r1
 844:	87 fd       	sbrc	r24, 7
 846:	91 60       	ori	r25, 0x01	; 1
 848:	00 96       	adiw	r24, 0x00	; 0
 84a:	61 05       	cpc	r22, r1
 84c:	71 05       	cpc	r23, r1
 84e:	39 f4       	brne	.+14     	; 0x85e <__ftoa_engine+0x28>
 850:	32 60       	ori	r19, 0x02	; 2
 852:	2e 5f       	subi	r18, 0xFE	; 254
 854:	3d 93       	st	X+, r19
 856:	30 e3       	ldi	r19, 0x30	; 48
 858:	2a 95       	dec	r18
 85a:	e1 f7       	brne	.-8      	; 0x854 <__ftoa_engine+0x1e>
 85c:	08 95       	ret
 85e:	9f 3f       	cpi	r25, 0xFF	; 255
 860:	30 f0       	brcs	.+12     	; 0x86e <__stack+0xf>
 862:	80 38       	cpi	r24, 0x80	; 128
 864:	71 05       	cpc	r23, r1
 866:	61 05       	cpc	r22, r1
 868:	09 f0       	breq	.+2      	; 0x86c <__stack+0xd>
 86a:	3c 5f       	subi	r19, 0xFC	; 252
 86c:	3c 5f       	subi	r19, 0xFC	; 252
 86e:	3d 93       	st	X+, r19
 870:	91 30       	cpi	r25, 0x01	; 1
 872:	08 f0       	brcs	.+2      	; 0x876 <__stack+0x17>
 874:	80 68       	ori	r24, 0x80	; 128
 876:	91 1d       	adc	r25, r1
 878:	df 93       	push	r29
 87a:	cf 93       	push	r28
 87c:	1f 93       	push	r17
 87e:	0f 93       	push	r16
 880:	ff 92       	push	r15
 882:	ef 92       	push	r14
 884:	19 2f       	mov	r17, r25
 886:	98 7f       	andi	r25, 0xF8	; 248
 888:	96 95       	lsr	r25
 88a:	e9 2f       	mov	r30, r25
 88c:	96 95       	lsr	r25
 88e:	96 95       	lsr	r25
 890:	e9 0f       	add	r30, r25
 892:	ff 27       	eor	r31, r31
 894:	e2 55       	subi	r30, 0x52	; 82
 896:	ff 4f       	sbci	r31, 0xFF	; 255
 898:	99 27       	eor	r25, r25
 89a:	33 27       	eor	r19, r19
 89c:	ee 24       	eor	r14, r14
 89e:	ff 24       	eor	r15, r15
 8a0:	a7 01       	movw	r20, r14
 8a2:	e7 01       	movw	r28, r14
 8a4:	05 90       	lpm	r0, Z+
 8a6:	08 94       	sec
 8a8:	07 94       	ror	r0
 8aa:	28 f4       	brcc	.+10     	; 0x8b6 <__stack+0x57>
 8ac:	36 0f       	add	r19, r22
 8ae:	e7 1e       	adc	r14, r23
 8b0:	f8 1e       	adc	r15, r24
 8b2:	49 1f       	adc	r20, r25
 8b4:	51 1d       	adc	r21, r1
 8b6:	66 0f       	add	r22, r22
 8b8:	77 1f       	adc	r23, r23
 8ba:	88 1f       	adc	r24, r24
 8bc:	99 1f       	adc	r25, r25
 8be:	06 94       	lsr	r0
 8c0:	a1 f7       	brne	.-24     	; 0x8aa <__stack+0x4b>
 8c2:	05 90       	lpm	r0, Z+
 8c4:	07 94       	ror	r0
 8c6:	28 f4       	brcc	.+10     	; 0x8d2 <__stack+0x73>
 8c8:	e7 0e       	add	r14, r23
 8ca:	f8 1e       	adc	r15, r24
 8cc:	49 1f       	adc	r20, r25
 8ce:	56 1f       	adc	r21, r22
 8d0:	c1 1d       	adc	r28, r1
 8d2:	77 0f       	add	r23, r23
 8d4:	88 1f       	adc	r24, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	66 1f       	adc	r22, r22
 8da:	06 94       	lsr	r0
 8dc:	a1 f7       	brne	.-24     	; 0x8c6 <__stack+0x67>
 8de:	05 90       	lpm	r0, Z+
 8e0:	07 94       	ror	r0
 8e2:	28 f4       	brcc	.+10     	; 0x8ee <__stack+0x8f>
 8e4:	f8 0e       	add	r15, r24
 8e6:	49 1f       	adc	r20, r25
 8e8:	56 1f       	adc	r21, r22
 8ea:	c7 1f       	adc	r28, r23
 8ec:	d1 1d       	adc	r29, r1
 8ee:	88 0f       	add	r24, r24
 8f0:	99 1f       	adc	r25, r25
 8f2:	66 1f       	adc	r22, r22
 8f4:	77 1f       	adc	r23, r23
 8f6:	06 94       	lsr	r0
 8f8:	a1 f7       	brne	.-24     	; 0x8e2 <__stack+0x83>
 8fa:	05 90       	lpm	r0, Z+
 8fc:	07 94       	ror	r0
 8fe:	20 f4       	brcc	.+8      	; 0x908 <__stack+0xa9>
 900:	49 0f       	add	r20, r25
 902:	56 1f       	adc	r21, r22
 904:	c7 1f       	adc	r28, r23
 906:	d8 1f       	adc	r29, r24
 908:	99 0f       	add	r25, r25
 90a:	66 1f       	adc	r22, r22
 90c:	77 1f       	adc	r23, r23
 90e:	88 1f       	adc	r24, r24
 910:	06 94       	lsr	r0
 912:	a9 f7       	brne	.-22     	; 0x8fe <__stack+0x9f>
 914:	84 91       	lpm	r24, Z
 916:	10 95       	com	r17
 918:	17 70       	andi	r17, 0x07	; 7
 91a:	41 f0       	breq	.+16     	; 0x92c <__stack+0xcd>
 91c:	d6 95       	lsr	r29
 91e:	c7 95       	ror	r28
 920:	57 95       	ror	r21
 922:	47 95       	ror	r20
 924:	f7 94       	ror	r15
 926:	e7 94       	ror	r14
 928:	1a 95       	dec	r17
 92a:	c1 f7       	brne	.-16     	; 0x91c <__stack+0xbd>
 92c:	e4 e5       	ldi	r30, 0x54	; 84
 92e:	f0 e0       	ldi	r31, 0x00	; 0
 930:	68 94       	set
 932:	15 90       	lpm	r1, Z+
 934:	15 91       	lpm	r17, Z+
 936:	35 91       	lpm	r19, Z+
 938:	65 91       	lpm	r22, Z+
 93a:	95 91       	lpm	r25, Z+
 93c:	05 90       	lpm	r0, Z+
 93e:	7f e2       	ldi	r23, 0x2F	; 47
 940:	73 95       	inc	r23
 942:	e1 18       	sub	r14, r1
 944:	f1 0a       	sbc	r15, r17
 946:	43 0b       	sbc	r20, r19
 948:	56 0b       	sbc	r21, r22
 94a:	c9 0b       	sbc	r28, r25
 94c:	d0 09       	sbc	r29, r0
 94e:	c0 f7       	brcc	.-16     	; 0x940 <__stack+0xe1>
 950:	e1 0c       	add	r14, r1
 952:	f1 1e       	adc	r15, r17
 954:	43 1f       	adc	r20, r19
 956:	56 1f       	adc	r21, r22
 958:	c9 1f       	adc	r28, r25
 95a:	d0 1d       	adc	r29, r0
 95c:	7e f4       	brtc	.+30     	; 0x97c <__stack+0x11d>
 95e:	70 33       	cpi	r23, 0x30	; 48
 960:	11 f4       	brne	.+4      	; 0x966 <__stack+0x107>
 962:	8a 95       	dec	r24
 964:	e6 cf       	rjmp	.-52     	; 0x932 <__stack+0xd3>
 966:	e8 94       	clt
 968:	01 50       	subi	r16, 0x01	; 1
 96a:	30 f0       	brcs	.+12     	; 0x978 <__stack+0x119>
 96c:	08 0f       	add	r16, r24
 96e:	0a f4       	brpl	.+2      	; 0x972 <__stack+0x113>
 970:	00 27       	eor	r16, r16
 972:	02 17       	cp	r16, r18
 974:	08 f4       	brcc	.+2      	; 0x978 <__stack+0x119>
 976:	20 2f       	mov	r18, r16
 978:	23 95       	inc	r18
 97a:	02 2f       	mov	r16, r18
 97c:	7a 33       	cpi	r23, 0x3A	; 58
 97e:	28 f0       	brcs	.+10     	; 0x98a <__stack+0x12b>
 980:	79 e3       	ldi	r23, 0x39	; 57
 982:	7d 93       	st	X+, r23
 984:	2a 95       	dec	r18
 986:	e9 f7       	brne	.-6      	; 0x982 <__stack+0x123>
 988:	10 c0       	rjmp	.+32     	; 0x9aa <__stack+0x14b>
 98a:	7d 93       	st	X+, r23
 98c:	2a 95       	dec	r18
 98e:	89 f6       	brne	.-94     	; 0x932 <__stack+0xd3>
 990:	06 94       	lsr	r0
 992:	97 95       	ror	r25
 994:	67 95       	ror	r22
 996:	37 95       	ror	r19
 998:	17 95       	ror	r17
 99a:	17 94       	ror	r1
 99c:	e1 18       	sub	r14, r1
 99e:	f1 0a       	sbc	r15, r17
 9a0:	43 0b       	sbc	r20, r19
 9a2:	56 0b       	sbc	r21, r22
 9a4:	c9 0b       	sbc	r28, r25
 9a6:	d0 09       	sbc	r29, r0
 9a8:	98 f0       	brcs	.+38     	; 0x9d0 <__stack+0x171>
 9aa:	23 95       	inc	r18
 9ac:	7e 91       	ld	r23, -X
 9ae:	73 95       	inc	r23
 9b0:	7a 33       	cpi	r23, 0x3A	; 58
 9b2:	08 f0       	brcs	.+2      	; 0x9b6 <__stack+0x157>
 9b4:	70 e3       	ldi	r23, 0x30	; 48
 9b6:	7c 93       	st	X, r23
 9b8:	20 13       	cpse	r18, r16
 9ba:	b8 f7       	brcc	.-18     	; 0x9aa <__stack+0x14b>
 9bc:	7e 91       	ld	r23, -X
 9be:	70 61       	ori	r23, 0x10	; 16
 9c0:	7d 93       	st	X+, r23
 9c2:	30 f0       	brcs	.+12     	; 0x9d0 <__stack+0x171>
 9c4:	83 95       	inc	r24
 9c6:	71 e3       	ldi	r23, 0x31	; 49
 9c8:	7d 93       	st	X+, r23
 9ca:	70 e3       	ldi	r23, 0x30	; 48
 9cc:	2a 95       	dec	r18
 9ce:	e1 f7       	brne	.-8      	; 0x9c8 <__stack+0x169>
 9d0:	11 24       	eor	r1, r1
 9d2:	ef 90       	pop	r14
 9d4:	ff 90       	pop	r15
 9d6:	0f 91       	pop	r16
 9d8:	1f 91       	pop	r17
 9da:	cf 91       	pop	r28
 9dc:	df 91       	pop	r29
 9de:	99 27       	eor	r25, r25
 9e0:	87 fd       	sbrc	r24, 7
 9e2:	90 95       	com	r25
 9e4:	08 95       	ret

000009e6 <__prologue_saves__>:
 9e6:	2f 92       	push	r2
 9e8:	3f 92       	push	r3
 9ea:	4f 92       	push	r4
 9ec:	5f 92       	push	r5
 9ee:	6f 92       	push	r6
 9f0:	7f 92       	push	r7
 9f2:	8f 92       	push	r8
 9f4:	9f 92       	push	r9
 9f6:	af 92       	push	r10
 9f8:	bf 92       	push	r11
 9fa:	cf 92       	push	r12
 9fc:	df 92       	push	r13
 9fe:	ef 92       	push	r14
 a00:	ff 92       	push	r15
 a02:	0f 93       	push	r16
 a04:	1f 93       	push	r17
 a06:	cf 93       	push	r28
 a08:	df 93       	push	r29
 a0a:	cd b7       	in	r28, 0x3d	; 61
 a0c:	de b7       	in	r29, 0x3e	; 62
 a0e:	ca 1b       	sub	r28, r26
 a10:	db 0b       	sbc	r29, r27
 a12:	0f b6       	in	r0, 0x3f	; 63
 a14:	f8 94       	cli
 a16:	de bf       	out	0x3e, r29	; 62
 a18:	0f be       	out	0x3f, r0	; 63
 a1a:	cd bf       	out	0x3d, r28	; 61
 a1c:	09 94       	ijmp

00000a1e <__epilogue_restores__>:
 a1e:	2a 88       	ldd	r2, Y+18	; 0x12
 a20:	39 88       	ldd	r3, Y+17	; 0x11
 a22:	48 88       	ldd	r4, Y+16	; 0x10
 a24:	5f 84       	ldd	r5, Y+15	; 0x0f
 a26:	6e 84       	ldd	r6, Y+14	; 0x0e
 a28:	7d 84       	ldd	r7, Y+13	; 0x0d
 a2a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a2c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a2e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a30:	b9 84       	ldd	r11, Y+9	; 0x09
 a32:	c8 84       	ldd	r12, Y+8	; 0x08
 a34:	df 80       	ldd	r13, Y+7	; 0x07
 a36:	ee 80       	ldd	r14, Y+6	; 0x06
 a38:	fd 80       	ldd	r15, Y+5	; 0x05
 a3a:	0c 81       	ldd	r16, Y+4	; 0x04
 a3c:	1b 81       	ldd	r17, Y+3	; 0x03
 a3e:	aa 81       	ldd	r26, Y+2	; 0x02
 a40:	b9 81       	ldd	r27, Y+1	; 0x01
 a42:	ce 0f       	add	r28, r30
 a44:	d1 1d       	adc	r29, r1
 a46:	0f b6       	in	r0, 0x3f	; 63
 a48:	f8 94       	cli
 a4a:	de bf       	out	0x3e, r29	; 62
 a4c:	0f be       	out	0x3f, r0	; 63
 a4e:	cd bf       	out	0x3d, r28	; 61
 a50:	ed 01       	movw	r28, r26
 a52:	08 95       	ret

00000a54 <_exit>:
 a54:	f8 94       	cli

00000a56 <__stop_program>:
 a56:	ff cf       	rjmp	.-2      	; 0xa56 <__stop_program>
