
fw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000016e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000019a  00800060  000016e0  00001774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000194  008001fa  008001fa  0000190e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000190e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000196c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  000019a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b6f  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001038  00000000  00000000  0000475f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000022b2  00000000  00000000  00005797  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000608  00000000  00000000  00007a4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000799e  00000000  00000000  00008054  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001fb0  00000000  00000000  0000f9f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000119a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002d32  00000000  00000000  00011bba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	30 c0       	rjmp	.+96     	; 0x62 <__ctors_end>
       2:	00 00       	nop
       4:	4a c0       	rjmp	.+148    	; 0x9a <__bad_interrupt>
       6:	00 00       	nop
       8:	48 c0       	rjmp	.+144    	; 0x9a <__bad_interrupt>
       a:	00 00       	nop
       c:	46 c0       	rjmp	.+140    	; 0x9a <__bad_interrupt>
       e:	00 00       	nop
      10:	44 c0       	rjmp	.+136    	; 0x9a <__bad_interrupt>
      12:	00 00       	nop
      14:	42 c0       	rjmp	.+132    	; 0x9a <__bad_interrupt>
      16:	00 00       	nop
      18:	40 c0       	rjmp	.+128    	; 0x9a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	3e c0       	rjmp	.+124    	; 0x9a <__bad_interrupt>
      1e:	00 00       	nop
      20:	3c c0       	rjmp	.+120    	; 0x9a <__bad_interrupt>
      22:	00 00       	nop
      24:	3a c0       	rjmp	.+116    	; 0x9a <__bad_interrupt>
      26:	00 00       	nop
      28:	38 c0       	rjmp	.+112    	; 0x9a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	36 c0       	rjmp	.+108    	; 0x9a <__bad_interrupt>
      2e:	00 00       	nop
      30:	34 c0       	rjmp	.+104    	; 0x9a <__bad_interrupt>
      32:	00 00       	nop
      34:	32 c0       	rjmp	.+100    	; 0x9a <__bad_interrupt>
      36:	00 00       	nop
      38:	30 c0       	rjmp	.+96     	; 0x9a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	2e c0       	rjmp	.+92     	; 0x9a <__bad_interrupt>
      3e:	00 00       	nop
      40:	2c c0       	rjmp	.+88     	; 0x9a <__bad_interrupt>
      42:	00 00       	nop
      44:	2a c0       	rjmp	.+84     	; 0x9a <__bad_interrupt>
      46:	00 00       	nop
      48:	28 c0       	rjmp	.+80     	; 0x9a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	26 c0       	rjmp	.+76     	; 0x9a <__bad_interrupt>
      4e:	00 00       	nop
      50:	24 c0       	rjmp	.+72     	; 0x9a <__bad_interrupt>
      52:	00 00       	nop
      54:	20 06       	cpc	r2, r16
      56:	75 06       	cpc	r7, r21
      58:	86 06       	cpc	r8, r22
      5a:	89 06       	cpc	r8, r25
      5c:	8f 06       	cpc	r8, r31
      5e:	95 06       	cpc	r9, r21
      60:	9b 06       	cpc	r9, r27

00000062 <__ctors_end>:
      62:	11 24       	eor	r1, r1
      64:	1f be       	out	0x3f, r1	; 63
      66:	cf e5       	ldi	r28, 0x5F	; 95
      68:	d8 e0       	ldi	r29, 0x08	; 8
      6a:	de bf       	out	0x3e, r29	; 62
      6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_copy_data>:
      6e:	11 e0       	ldi	r17, 0x01	; 1
      70:	a0 e6       	ldi	r26, 0x60	; 96
      72:	b0 e0       	ldi	r27, 0x00	; 0
      74:	e0 ee       	ldi	r30, 0xE0	; 224
      76:	f6 e1       	ldi	r31, 0x16	; 22
      78:	02 c0       	rjmp	.+4      	; 0x7e <__do_copy_data+0x10>
      7a:	05 90       	lpm	r0, Z+
      7c:	0d 92       	st	X+, r0
      7e:	aa 3f       	cpi	r26, 0xFA	; 250
      80:	b1 07       	cpc	r27, r17
      82:	d9 f7       	brne	.-10     	; 0x7a <__do_copy_data+0xc>

00000084 <__do_clear_bss>:
      84:	23 e0       	ldi	r18, 0x03	; 3
      86:	aa ef       	ldi	r26, 0xFA	; 250
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
      8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
      8e:	ae 38       	cpi	r26, 0x8E	; 142
      90:	b2 07       	cpc	r27, r18
      92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
      94:	b4 d5       	rcall	.+2920   	; 0xbfe <main>
      96:	0c 94 6e 0b 	jmp	0x16dc	; 0x16dc <_exit>

0000009a <__bad_interrupt>:
      9a:	b2 cf       	rjmp	.-156    	; 0x0 <__vectors>

0000009c <buzzer_init>:
#include "buzzer.h"

void buzzer_init()
{
	BUZZER_DDR |= (1<<BUZZER_POS); // Set output
      9c:	d1 9a       	sbi	0x1a, 1	; 26
      9e:	08 95       	ret

000000a0 <buzzer_start>:
	// _delay_ms(5);
}

void buzzer_start()
{
	BUZZER_PORT |= (1 << BUZZER_POS); // Put 1 on BUZZER_POS of BUZZER_PORT
      a0:	d9 9a       	sbi	0x1b, 1	; 27
      a2:	08 95       	ret

000000a4 <buzzer_stop>:
}

void buzzer_stop()
{
	BUZZER_PORT &= ~(1 << BUZZER_POS); // Put 0 on BUZZER_POS of BUZZER_PORT
      a4:	d9 98       	cbi	0x1b, 1	; 27
      a6:	08 95       	ret

000000a8 <small_beep>:
}

void small_beep(uint16_t t_ms)
{
      a8:	cf 93       	push	r28
      aa:	df 93       	push	r29
	buzzer_start();
      ac:	ec 01       	movw	r28, r24
	for (uint16_t i = 0; i < t_ms; i+=10)
      ae:	f8 df       	rcall	.-16     	; 0xa0 <buzzer_start>
      b0:	20 97       	sbiw	r28, 0x00	; 0
      b2:	61 f0       	breq	.+24     	; 0xcc <small_beep+0x24>
      b4:	80 e0       	ldi	r24, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	ef e3       	ldi	r30, 0x3F	; 63
      ba:	fc e9       	ldi	r31, 0x9C	; 156
      bc:	31 97       	sbiw	r30, 0x01	; 1
      be:	f1 f7       	brne	.-4      	; 0xbc <small_beep+0x14>
      c0:	00 c0       	rjmp	.+0      	; 0xc2 <small_beep+0x1a>
      c2:	00 00       	nop
      c4:	0a 96       	adiw	r24, 0x0a	; 10
      c6:	8c 17       	cp	r24, r28
	{
		_delay_ms(10);
	}
	buzzer_stop();
      c8:	9d 07       	cpc	r25, r29
      ca:	b0 f3       	brcs	.-20     	; 0xb8 <small_beep+0x10>
      cc:	eb df       	rcall	.-42     	; 0xa4 <buzzer_stop>
      ce:	df 91       	pop	r29
      d0:	cf 91       	pop	r28
      d2:	08 95       	ret

000000d4 <EEPROM_Write>:

void EEPROM_Clear(void) {
	for (unsigned int i = 0; i < EEPROM_SIZE; i++) {
		EEPROM_Write(i, 0xFF); // 0xFF is the default erased value
	}
}
      d4:	e1 99       	sbic	0x1c, 1	; 28
      d6:	fe cf       	rjmp	.-4      	; 0xd4 <EEPROM_Write>
      d8:	9f bb       	out	0x1f, r25	; 31
      da:	8e bb       	out	0x1e, r24	; 30
      dc:	6d bb       	out	0x1d, r22	; 29
      de:	e2 9a       	sbi	0x1c, 2	; 28
      e0:	e1 9a       	sbi	0x1c, 1	; 28
      e2:	08 95       	ret

000000e4 <EEPROM_Read>:
      e4:	e1 99       	sbic	0x1c, 1	; 28
      e6:	fe cf       	rjmp	.-4      	; 0xe4 <EEPROM_Read>
      e8:	9f bb       	out	0x1f, r25	; 31
      ea:	8e bb       	out	0x1e, r24	; 30
      ec:	e0 9a       	sbi	0x1c, 0	; 28
      ee:	8d b3       	in	r24, 0x1d	; 29
      f0:	08 95       	ret

000000f2 <EEPROM_WriteString>:

void EEPROM_WriteString(unsigned int startAddress, const char* str) {
      f2:	0f 93       	push	r16
      f4:	1f 93       	push	r17
      f6:	cf 93       	push	r28
      f8:	df 93       	push	r29
      fa:	fb 01       	movw	r30, r22
	unsigned int i = 0;
	while (str[i] != '\0' && startAddress + i < EEPROM_SIZE) {
      fc:	60 81       	ld	r22, Z
      fe:	66 23       	and	r22, r22
     100:	a1 f0       	breq	.+40     	; 0x12a <EEPROM_WriteString+0x38>
     102:	81 15       	cp	r24, r1
     104:	24 e0       	ldi	r18, 0x04	; 4
     106:	92 07       	cpc	r25, r18
     108:	80 f4       	brcc	.+32     	; 0x12a <EEPROM_WriteString+0x38>
     10a:	8f 01       	movw	r16, r30
     10c:	0f 5f       	subi	r16, 0xFF	; 255
     10e:	1f 4f       	sbci	r17, 0xFF	; 255
     110:	ec 01       	movw	r28, r24
		EEPROM_Write(startAddress + i, str[i]);
     112:	ce 01       	movw	r24, r28
     114:	df df       	rcall	.-66     	; 0xd4 <EEPROM_Write>
	}
}

void EEPROM_WriteString(unsigned int startAddress, const char* str) {
	unsigned int i = 0;
	while (str[i] != '\0' && startAddress + i < EEPROM_SIZE) {
     116:	f8 01       	movw	r30, r16
     118:	61 91       	ld	r22, Z+
     11a:	8f 01       	movw	r16, r30
     11c:	66 23       	and	r22, r22
     11e:	29 f0       	breq	.+10     	; 0x12a <EEPROM_WriteString+0x38>
     120:	21 96       	adiw	r28, 0x01	; 1
     122:	c1 15       	cp	r28, r1
     124:	f4 e0       	ldi	r31, 0x04	; 4
     126:	df 07       	cpc	r29, r31
     128:	a1 f7       	brne	.-24     	; 0x112 <EEPROM_WriteString+0x20>
		EEPROM_Write(startAddress + i, str[i]);
		i++;
	}
}
     12a:	df 91       	pop	r29
     12c:	cf 91       	pop	r28
     12e:	1f 91       	pop	r17
     130:	0f 91       	pop	r16
     132:	08 95       	ret

00000134 <EEPROM_ReadString>:

void EEPROM_ReadString(unsigned int startAddress, char* buffer, unsigned int length) {
     134:	af 92       	push	r10
     136:	bf 92       	push	r11
     138:	cf 92       	push	r12
     13a:	df 92       	push	r13
     13c:	ef 92       	push	r14
     13e:	ff 92       	push	r15
     140:	0f 93       	push	r16
     142:	1f 93       	push	r17
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	6b 01       	movw	r12, r22
     14a:	7a 01       	movw	r14, r20
	for (unsigned int i = 0; i < length && (startAddress + i) < EEPROM_SIZE; i++) {
     14c:	41 15       	cp	r20, r1
     14e:	51 05       	cpc	r21, r1
     150:	b1 f0       	breq	.+44     	; 0x17e <EEPROM_ReadString+0x4a>
     152:	81 15       	cp	r24, r1
     154:	24 e0       	ldi	r18, 0x04	; 4
     156:	92 07       	cpc	r25, r18
     158:	90 f4       	brcc	.+36     	; 0x17e <EEPROM_ReadString+0x4a>
     15a:	5b 01       	movw	r10, r22
     15c:	8b 01       	movw	r16, r22
     15e:	04 0f       	add	r16, r20
     160:	15 1f       	adc	r17, r21
     162:	ec 01       	movw	r28, r24
		buffer[i] = EEPROM_Read(startAddress + i);
     164:	ce 01       	movw	r24, r28
     166:	be df       	rcall	.-132    	; 0xe4 <EEPROM_Read>
     168:	f5 01       	movw	r30, r10
     16a:	81 93       	st	Z+, r24
     16c:	5f 01       	movw	r10, r30
		i++;
	}
}

void EEPROM_ReadString(unsigned int startAddress, char* buffer, unsigned int length) {
	for (unsigned int i = 0; i < length && (startAddress + i) < EEPROM_SIZE; i++) {
     16e:	e0 17       	cp	r30, r16
     170:	f1 07       	cpc	r31, r17
     172:	29 f0       	breq	.+10     	; 0x17e <EEPROM_ReadString+0x4a>
     174:	21 96       	adiw	r28, 0x01	; 1
     176:	c1 15       	cp	r28, r1
     178:	f4 e0       	ldi	r31, 0x04	; 4
     17a:	df 07       	cpc	r29, r31
     17c:	99 f7       	brne	.-26     	; 0x164 <EEPROM_ReadString+0x30>
		buffer[i] = EEPROM_Read(startAddress + i);
	}
	buffer[length] = '\0';
     17e:	f6 01       	movw	r30, r12
     180:	ee 0d       	add	r30, r14
     182:	ff 1d       	adc	r31, r15
     184:	10 82       	st	Z, r1
}
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	1f 91       	pop	r17
     18c:	0f 91       	pop	r16
     18e:	ff 90       	pop	r15
     190:	ef 90       	pop	r14
     192:	df 90       	pop	r13
     194:	cf 90       	pop	r12
     196:	bf 90       	pop	r11
     198:	af 90       	pop	r10
     19a:	08 95       	ret

0000019c <keypad_init>:
	}
}

// Function to initialize the keypad port configuration
void keypad_init(void) {
	KEYPAD_PORT_DIR = 0xF0; // Set A0 to A3 as input, A4 to A7 as output
     19c:	80 ef       	ldi	r24, 0xF0	; 240
     19e:	87 bb       	out	0x17, r24	; 23
	KEYPAD_PORT_OUT = 0xFF; // Set all output pins high
     1a0:	8f ef       	ldi	r24, 0xFF	; 255
     1a2:	88 bb       	out	0x18, r24	; 24
     1a4:	08 95       	ret

000001a6 <scan_keypad>:
char scan_keypad(void) {
	unsigned char colStatus, rowStatus;

	// Wait until all keys are released
	do {
		KEYPAD_PORT_OUT = KEYPAD_PORT_OUT & 0x0F; // Clear output for rows
     1a6:	88 b3       	in	r24, 0x18	; 24
     1a8:	8f 70       	andi	r24, 0x0F	; 15
     1aa:	88 bb       	out	0x18, r24	; 24
		colStatus = KEYPAD_PORT_IN & 0x0F; // Read input for columns
     1ac:	86 b3       	in	r24, 0x16	; 22
	} while (colStatus != 0x0F); // Continue until all keys are released
     1ae:	8f 70       	andi	r24, 0x0F	; 15
     1b0:	8f 30       	cpi	r24, 0x0F	; 15
     1b2:	c9 f7       	brne	.-14     	; 0x1a6 <scan_keypad>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b4:	8a e0       	ldi	r24, 0x0A	; 10
     1b6:	8a 95       	dec	r24
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <scan_keypad+0x10>
     1ba:	00 c0       	rjmp	.+0      	; 0x1bc <scan_keypad+0x16>

	// Wait for a key press
	do {
		do {
			_delay_us(2); // Debounce delay
			colStatus = KEYPAD_PORT_IN & 0x0F; // Read input for columns
     1bc:	86 b3       	in	r24, 0x16	; 22
		} while (colStatus != 0x0F); // Wait for release
     1be:	8f 70       	andi	r24, 0x0F	; 15
     1c0:	8f 30       	cpi	r24, 0x0F	; 15
     1c2:	c1 f7       	brne	.-16     	; 0x1b4 <scan_keypad+0xe>
     1c4:	8a e0       	ldi	r24, 0x0A	; 10
     1c6:	8a 95       	dec	r24
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <scan_keypad+0x20>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <scan_keypad+0x26>
		_delay_us(2); // Debounce delay
		colStatus = KEYPAD_PORT_IN & 0x0F; // Read input again
     1cc:	86 b3       	in	r24, 0x16	; 22
	} while (colStatus != 0x0F); // Wait for release
     1ce:	8f 70       	andi	r24, 0x0F	; 15
     1d0:	8f 30       	cpi	r24, 0x0F	; 15
     1d2:	81 f7       	brne	.-32     	; 0x1b4 <scan_keypad+0xe>

	// Check each row to find which button is pressed
	while (1) {
		KEYPAD_PORT_OUT = 0xEF; // Activate first row
     1d4:	9f ee       	ldi	r25, 0xEF	; 239
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 0; // First row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xDF; // Activate second row
     1d6:	2f ed       	ldi	r18, 0xDF	; 223
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 1; // Second row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xBF; // Activate third row
     1d8:	3f eb       	ldi	r19, 0xBF	; 191
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 2; // Third row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0x7F; // Activate fourth row
     1da:	4f e7       	ldi	r20, 0x7F	; 127
		colStatus = KEYPAD_PORT_IN & 0x0F; // Read input again
	} while (colStatus != 0x0F); // Wait for release

	// Check each row to find which button is pressed
	while (1) {
		KEYPAD_PORT_OUT = 0xEF; // Activate first row
     1dc:	98 bb       	out	0x18, r25	; 24
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
     1de:	86 b3       	in	r24, 0x16	; 22
     1e0:	8f 70       	andi	r24, 0x0F	; 15
		if (colStatus != 0x0F) {
     1e2:	8f 30       	cpi	r24, 0x0F	; 15
     1e4:	89 f4       	brne	.+34     	; 0x208 <scan_keypad+0x62>
			rowStatus = 0; // First row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xDF; // Activate second row
     1e6:	28 bb       	out	0x18, r18	; 24
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
     1e8:	86 b3       	in	r24, 0x16	; 22
     1ea:	8f 70       	andi	r24, 0x0F	; 15
		if (colStatus != 0x0F) {
     1ec:	8f 30       	cpi	r24, 0x0F	; 15
     1ee:	71 f4       	brne	.+28     	; 0x20c <scan_keypad+0x66>
			rowStatus = 1; // Second row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xBF; // Activate third row
     1f0:	38 bb       	out	0x18, r19	; 24
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
     1f2:	86 b3       	in	r24, 0x16	; 22
     1f4:	8f 70       	andi	r24, 0x0F	; 15
		if (colStatus != 0x0F) {
     1f6:	8f 30       	cpi	r24, 0x0F	; 15
     1f8:	59 f4       	brne	.+22     	; 0x210 <scan_keypad+0x6a>
			rowStatus = 2; // Third row detected
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0x7F; // Activate fourth row
     1fa:	48 bb       	out	0x18, r20	; 24
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
     1fc:	86 b3       	in	r24, 0x16	; 22
     1fe:	8f 70       	andi	r24, 0x0F	; 15
		if (colStatus != 0x0F) {
     200:	8f 30       	cpi	r24, 0x0F	; 15
     202:	61 f3       	breq	.-40     	; 0x1dc <scan_keypad+0x36>
			rowStatus = 3; // Fourth row detected
     204:	93 e0       	ldi	r25, 0x03	; 3
     206:	05 c0       	rjmp	.+10     	; 0x212 <scan_keypad+0x6c>
	// Check each row to find which button is pressed
	while (1) {
		KEYPAD_PORT_OUT = 0xEF; // Activate first row
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 0; // First row detected
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	03 c0       	rjmp	.+6      	; 0x212 <scan_keypad+0x6c>
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xDF; // Activate second row
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 1; // Second row detected
     20c:	91 e0       	ldi	r25, 0x01	; 1
     20e:	01 c0       	rjmp	.+2      	; 0x212 <scan_keypad+0x6c>
			break; // Exit the loop
		}
		KEYPAD_PORT_OUT = 0xBF; // Activate third row
		colStatus = KEYPAD_PORT_IN & 0x0F; // Check input
		if (colStatus != 0x0F) {
			rowStatus = 2; // Third row detected
     210:	92 e0       	ldi	r25, 0x02	; 2
			break; // Exit the loop
		}
	}

	// Determine which key was pressed in the active row
	if (colStatus == 0x0E) {
     212:	8e 30       	cpi	r24, 0x0E	; 14
     214:	61 f4       	brne	.+24     	; 0x22e <scan_keypad+0x88>
		return keypad[rowStatus][0]; // First column
     216:	89 2f       	mov	r24, r25
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	fc 01       	movw	r30, r24
     21c:	ee 0f       	add	r30, r30
     21e:	ff 1f       	adc	r31, r31
     220:	8e 0f       	add	r24, r30
     222:	9f 1f       	adc	r25, r31
     224:	fc 01       	movw	r30, r24
     226:	e0 5a       	subi	r30, 0xA0	; 160
     228:	ff 4f       	sbci	r31, 0xFF	; 255
     22a:	80 81       	ld	r24, Z
     22c:	08 95       	ret
	}
	if (colStatus == 0x0D) {
     22e:	8d 30       	cpi	r24, 0x0D	; 13
     230:	61 f4       	brne	.+24     	; 0x24a <scan_keypad+0xa4>
		return keypad[rowStatus][1]; // Second column
     232:	89 2f       	mov	r24, r25
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	fc 01       	movw	r30, r24
     238:	ee 0f       	add	r30, r30
     23a:	ff 1f       	adc	r31, r31
     23c:	8e 0f       	add	r24, r30
     23e:	9f 1f       	adc	r25, r31
     240:	fc 01       	movw	r30, r24
     242:	e0 5a       	subi	r30, 0xA0	; 160
     244:	ff 4f       	sbci	r31, 0xFF	; 255
     246:	81 81       	ldd	r24, Z+1	; 0x01
     248:	08 95       	ret
	}
	if (colStatus == 0x0B) {
     24a:	8b 30       	cpi	r24, 0x0B	; 11
     24c:	61 f4       	brne	.+24     	; 0x266 <scan_keypad+0xc0>
		return keypad[rowStatus][2]; // Third column
     24e:	89 2f       	mov	r24, r25
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	fc 01       	movw	r30, r24
     254:	ee 0f       	add	r30, r30
     256:	ff 1f       	adc	r31, r31
     258:	8e 0f       	add	r24, r30
     25a:	9f 1f       	adc	r25, r31
     25c:	fc 01       	movw	r30, r24
     25e:	e0 5a       	subi	r30, 0xA0	; 160
     260:	ff 4f       	sbci	r31, 0xFF	; 255
     262:	82 81       	ldd	r24, Z+2	; 0x02
     264:	08 95       	ret
	}
	return keypad[rowStatus][3]; // Fourth column
     266:	89 2f       	mov	r24, r25
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	01 96       	adiw	r24, 0x01	; 1
     26c:	fc 01       	movw	r30, r24
     26e:	ee 0f       	add	r30, r30
     270:	ff 1f       	adc	r31, r31
     272:	8e 0f       	add	r24, r30
     274:	9f 1f       	adc	r25, r31
     276:	fc 01       	movw	r30, r24
     278:	e0 5a       	subi	r30, 0xA0	; 160
     27a:	ff 4f       	sbci	r31, 0xFF	; 255
     27c:	80 81       	ld	r24, Z
     27e:	08 95       	ret

00000280 <LCD_Command>:
}
void LCD_Number(unsigned int num) {
	char buffer[10];
	num_to_string(num,buffer);      // Convert number to string (base 10)
	LCD_String(buffer);          // Display the string
}
     280:	85 bb       	out	0x15, r24	; 21
     282:	95 98       	cbi	0x12, 5	; 18
     284:	96 98       	cbi	0x12, 6	; 18
     286:	97 9a       	sbi	0x12, 7	; 18
     288:	82 e0       	ldi	r24, 0x02	; 2
     28a:	8a 95       	dec	r24
     28c:	f1 f7       	brne	.-4      	; 0x28a <LCD_Command+0xa>
     28e:	00 c0       	rjmp	.+0      	; 0x290 <LCD_Command+0x10>
     290:	97 98       	cbi	0x12, 7	; 18
     292:	8f e6       	ldi	r24, 0x6F	; 111
     294:	97 e1       	ldi	r25, 0x17	; 23
     296:	01 97       	sbiw	r24, 0x01	; 1
     298:	f1 f7       	brne	.-4      	; 0x296 <LCD_Command+0x16>
     29a:	00 c0       	rjmp	.+0      	; 0x29c <LCD_Command+0x1c>
     29c:	00 00       	nop
     29e:	08 95       	ret

000002a0 <LCD_Char>:
     2a0:	85 bb       	out	0x15, r24	; 21
     2a2:	95 9a       	sbi	0x12, 5	; 18
     2a4:	96 98       	cbi	0x12, 6	; 18
     2a6:	97 9a       	sbi	0x12, 7	; 18
     2a8:	82 e0       	ldi	r24, 0x02	; 2
     2aa:	8a 95       	dec	r24
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <LCD_Char+0xa>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <LCD_Char+0x10>
     2b0:	97 98       	cbi	0x12, 7	; 18
     2b2:	8f ec       	ldi	r24, 0xCF	; 207
     2b4:	97 e0       	ldi	r25, 0x07	; 7
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <LCD_Char+0x16>
     2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_Char+0x1c>
     2bc:	00 00       	nop
     2be:	08 95       	ret

000002c0 <LCD_Init>:
     2c0:	8f ef       	ldi	r24, 0xFF	; 255
     2c2:	81 bb       	out	0x11, r24	; 17
     2c4:	84 bb       	out	0x14, r24	; 20
     2c6:	8f e3       	ldi	r24, 0x3F	; 63
     2c8:	9c e9       	ldi	r25, 0x9C	; 156
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <LCD_Init+0xa>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <LCD_Init+0x10>
     2d0:	00 00       	nop
     2d2:	88 e3       	ldi	r24, 0x38	; 56
     2d4:	d5 df       	rcall	.-86     	; 0x280 <LCD_Command>
     2d6:	8c e0       	ldi	r24, 0x0C	; 12
     2d8:	d3 df       	rcall	.-90     	; 0x280 <LCD_Command>
     2da:	86 e0       	ldi	r24, 0x06	; 6
     2dc:	d1 df       	rcall	.-94     	; 0x280 <LCD_Command>
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	cf df       	rcall	.-98     	; 0x280 <LCD_Command>
     2e2:	80 e8       	ldi	r24, 0x80	; 128
     2e4:	cd cf       	rjmp	.-102    	; 0x280 <LCD_Command>
     2e6:	08 95       	ret

000002e8 <LCD_String>:
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
     2ec:	ec 01       	movw	r28, r24
     2ee:	88 81       	ld	r24, Y
     2f0:	88 23       	and	r24, r24
     2f2:	29 f0       	breq	.+10     	; 0x2fe <LCD_String+0x16>
     2f4:	21 96       	adiw	r28, 0x01	; 1
     2f6:	d4 df       	rcall	.-88     	; 0x2a0 <LCD_Char>
     2f8:	89 91       	ld	r24, Y+
     2fa:	81 11       	cpse	r24, r1
     2fc:	fc cf       	rjmp	.-8      	; 0x2f6 <LCD_String+0xe>
     2fe:	df 91       	pop	r29
     300:	cf 91       	pop	r28
     302:	08 95       	ret

00000304 <LCD_String_xy>:
     304:	cf 93       	push	r28
     306:	df 93       	push	r29
     308:	ea 01       	movw	r28, r20
     30a:	81 11       	cpse	r24, r1
     30c:	07 c0       	rjmp	.+14     	; 0x31c <LCD_String_xy+0x18>
     30e:	60 31       	cpi	r22, 0x10	; 16
     310:	6c f4       	brge	.+26     	; 0x32c <LCD_String_xy+0x28>
     312:	86 2f       	mov	r24, r22
     314:	8f 70       	andi	r24, 0x0F	; 15
     316:	80 68       	ori	r24, 0x80	; 128
     318:	b3 df       	rcall	.-154    	; 0x280 <LCD_Command>
     31a:	08 c0       	rjmp	.+16     	; 0x32c <LCD_String_xy+0x28>
     31c:	81 30       	cpi	r24, 0x01	; 1
     31e:	31 f4       	brne	.+12     	; 0x32c <LCD_String_xy+0x28>
     320:	60 31       	cpi	r22, 0x10	; 16
     322:	24 f4       	brge	.+8      	; 0x32c <LCD_String_xy+0x28>
     324:	86 2f       	mov	r24, r22
     326:	8f 70       	andi	r24, 0x0F	; 15
     328:	80 6c       	ori	r24, 0xC0	; 192
     32a:	aa df       	rcall	.-172    	; 0x280 <LCD_Command>
     32c:	ce 01       	movw	r24, r28
     32e:	dc df       	rcall	.-72     	; 0x2e8 <LCD_String>
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <LCD_Clear>:


void LCD_Clear(void)
{
	LCD_Command (0x01);		/* clear display */
     336:	81 e0       	ldi	r24, 0x01	; 1
	LCD_Command (0x80);		/* cursor at home position */
     338:	a3 df       	rcall	.-186    	; 0x280 <LCD_Command>
     33a:	80 e8       	ldi	r24, 0x80	; 128
     33c:	a1 cf       	rjmp	.-190    	; 0x280 <LCD_Command>
     33e:	08 95       	ret

00000340 <ADC_Init>:
#include <util/delay.h>

#include "sensors.h"

void ADC_Init(void){
	DDRA = 0x00;	        /* Make ADC port as input */
     340:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;          /* Enable ADC, with freq/128  */
     342:	87 e8       	ldi	r24, 0x87	; 135
     344:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;           /* Vref: Avcc, ADC channel: 0 */
     346:	80 e4       	ldi	r24, 0x40	; 64
     348:	87 b9       	out	0x07, r24	; 7
     34a:	08 95       	ret

0000034c <ADC_Read>:
}

int ADC_Read(char channel)
{
	ADMUX = 0x40 | (channel & 0x07);   /* set input channel to read */
     34c:	87 70       	andi	r24, 0x07	; 7
     34e:	80 64       	ori	r24, 0x40	; 64
     350:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);               /* Start ADC conversion */
     352:	36 9a       	sbi	0x06, 6	; 6
	while (!(ADCSRA & (1<<ADIF)));     /* Wait until end of conversion by polling ADC interrupt flag */
     354:	34 9b       	sbis	0x06, 4	; 6
     356:	fe cf       	rjmp	.-4      	; 0x354 <ADC_Read+0x8>
	ADCSRA |= (1<<ADIF);               /* Clear interrupt flag */
     358:	34 9a       	sbi	0x06, 4	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     35a:	89 ef       	ldi	r24, 0xF9	; 249
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <ADC_Read+0x12>
     362:	00 c0       	rjmp	.+0      	; 0x364 <ADC_Read+0x18>
     364:	00 00       	nop
	_delay_ms(1);                      /* Wait a little bit */
	return ADCW;                       /* Return ADC word */
     366:	84 b1       	in	r24, 0x04	; 4
     368:	95 b1       	in	r25, 0x05	; 5
}
     36a:	08 95       	ret

0000036c <HCSR04Init>:

void HCSR04Init()
{
	
	// we're setting the trigger pin as output as it will generate ultrasonic sound wave
	US_DDR|=(1<<US_TRIG_POS);
     36c:	d6 9a       	sbi	0x1a, 6	; 26
     36e:	08 95       	ret

00000370 <HCSR04Trigger>:

void HCSR04Trigger()
{   // this function will generate ultrasonic sound wave for 15 microseconds
	//Send a 10uS pulse on trigger line
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     370:	de 9a       	sbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     372:	85 e0       	ldi	r24, 0x05	; 5
     374:	8a 95       	dec	r24
     376:	f1 f7       	brne	.-4      	; 0x374 <HCSR04Trigger+0x4>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     378:	de 98       	cbi	0x1b, 6	; 27
     37a:	08 95       	ret

0000037c <GetPulseWidth>:

	// Section - 1: the following lines of code before the section - 2 is checking if the ultrasonic is working or not
	// it check the echo pin for a certain amount of time. If there is no signal it means the sensor is not working or not connect properly
	for(i=0;i<600000;i++)
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     37c:	cf 99       	sbic	0x19, 7	; 25
     37e:	18 c0       	rjmp	.+48     	; 0x3b0 <GetPulseWidth+0x34>
     380:	81 e0       	ldi	r24, 0x01	; 1
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	a0 e0       	ldi	r26, 0x00	; 0
     386:	b0 e0       	ldi	r27, 0x00	; 0
     388:	cf 99       	sbic	0x19, 7	; 25
     38a:	0d c0       	rjmp	.+26     	; 0x3a6 <GetPulseWidth+0x2a>
	
	uint32_t i,result;

	// Section - 1: the following lines of code before the section - 2 is checking if the ultrasonic is working or not
	// it check the echo pin for a certain amount of time. If there is no signal it means the sensor is not working or not connect properly
	for(i=0;i<600000;i++)
     38c:	01 96       	adiw	r24, 0x01	; 1
     38e:	a1 1d       	adc	r26, r1
     390:	b1 1d       	adc	r27, r1
     392:	80 3c       	cpi	r24, 0xC0	; 192
     394:	27 e2       	ldi	r18, 0x27	; 39
     396:	92 07       	cpc	r25, r18
     398:	29 e0       	ldi	r18, 0x09	; 9
     39a:	a2 07       	cpc	r26, r18
     39c:	b1 05       	cpc	r27, r1
     39e:	a1 f7       	brne	.-24     	; 0x388 <GetPulseWidth+0xc>
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
     3a0:	8f ef       	ldi	r24, 0xFF	; 255
     3a2:	9f ef       	ldi	r25, 0xFF	; 255
     3a4:	08 95       	ret
		continue;	//Line is still low, so wait
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
     3a6:	80 3c       	cpi	r24, 0xC0	; 192
     3a8:	97 42       	sbci	r25, 0x27	; 39
     3aa:	a9 40       	sbci	r26, 0x09	; 9
     3ac:	b1 05       	cpc	r27, r1
     3ae:	c9 f1       	breq	.+114    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
	
	//High Edge Found
	
	// Section -2 : This section is all about preparing the timer for counting the time of the pulse. Timers in microcontrllers is used for timimg operation
	//Setup Timer1
	TCCR1A=0X00;
     3b0:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);	// This line sets the resolution of the timer. Maximum of how much value it should count.
     3b2:	82 e0       	ldi	r24, 0x02	; 2
     3b4:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;			// This line start the counter to start counting time
     3b6:	1d bc       	out	0x2d, r1	; 45
     3b8:	1c bc       	out	0x2c, r1	; 44

	// Section -3 : This section checks weather the there is any object or not
	for(i=0;i<600000;i++)                // the 600000 value is used randomly to denote a very small amount of time, almost 40 miliseconds
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3ba:	cf 9b       	sbis	0x19, 7	; 25
     3bc:	22 c0       	rjmp	.+68     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
		{
			if(TCNT1 > 60000) break; else continue;   // if the TCNT1 value gets higher than 60000 it means there is not object in the range of the sensor
     3be:	8c b5       	in	r24, 0x2c	; 44
     3c0:	9d b5       	in	r25, 0x2d	; 45
     3c2:	81 36       	cpi	r24, 0x61	; 97
     3c4:	9a 4e       	sbci	r25, 0xEA	; 234
     3c6:	e8 f4       	brcc	.+58     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	a0 e0       	ldi	r26, 0x00	; 0
     3ce:	b0 e0       	ldi	r27, 0x00	; 0
	TCNT1=0x00;			// This line start the counter to start counting time

	// Section -3 : This section checks weather the there is any object or not
	for(i=0;i<600000;i++)                // the 600000 value is used randomly to denote a very small amount of time, almost 40 miliseconds
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3d0:	cf 9b       	sbis	0x19, 7	; 25
     3d2:	12 c0       	rjmp	.+36     	; 0x3f8 <GetPulseWidth+0x7c>
		{
			if(TCNT1 > 60000) break; else continue;   // if the TCNT1 value gets higher than 60000 it means there is not object in the range of the sensor
     3d4:	2c b5       	in	r18, 0x2c	; 44
     3d6:	3d b5       	in	r19, 0x2d	; 45
     3d8:	21 36       	cpi	r18, 0x61	; 97
     3da:	3a 4e       	sbci	r19, 0xEA	; 234
     3dc:	68 f4       	brcc	.+26     	; 0x3f8 <GetPulseWidth+0x7c>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);	// This line sets the resolution of the timer. Maximum of how much value it should count.
	TCNT1=0x00;			// This line start the counter to start counting time

	// Section -3 : This section checks weather the there is any object or not
	for(i=0;i<600000;i++)                // the 600000 value is used randomly to denote a very small amount of time, almost 40 miliseconds
     3de:	01 96       	adiw	r24, 0x01	; 1
     3e0:	a1 1d       	adc	r26, r1
     3e2:	b1 1d       	adc	r27, r1
     3e4:	80 3c       	cpi	r24, 0xC0	; 192
     3e6:	27 e2       	ldi	r18, 0x27	; 39
     3e8:	92 07       	cpc	r25, r18
     3ea:	29 e0       	ldi	r18, 0x09	; 9
     3ec:	a2 07       	cpc	r26, r18
     3ee:	b1 05       	cpc	r27, r1
     3f0:	79 f7       	brne	.-34     	; 0x3d0 <GetPulseWidth+0x54>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
     3f2:	8e ef       	ldi	r24, 0xFE	; 254
     3f4:	9f ef       	ldi	r25, 0xFF	; 255
     3f6:	08 95       	ret
		}
		else
		break;
	}

	if(i==600000)
     3f8:	80 3c       	cpi	r24, 0xC0	; 192
     3fa:	97 42       	sbci	r25, 0x27	; 39
     3fc:	a9 40       	sbci	r26, 0x09	; 9
     3fe:	b1 05       	cpc	r27, r1
     400:	99 f0       	breq	.+38     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
	return US_NO_OBSTACLE;	//Indicates time out

	//Falling edge found

	result=TCNT1;          // microcontroller stores the the value of the counted pulse time in the TCNT1 register. So, we're returning this value to the
     402:	8c b5       	in	r24, 0x2c	; 44
     404:	9d b5       	in	r25, 0x2d	; 45
     406:	a0 e0       	ldi	r26, 0x00	; 0
     408:	b0 e0       	ldi	r27, 0x00	; 0
	// main function for utilizing it later

	//Stop Timer
	TCCR1B=0x00;
     40a:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     40c:	81 36       	cpi	r24, 0x61	; 97
     40e:	2a ee       	ldi	r18, 0xEA	; 234
     410:	92 07       	cpc	r25, r18
     412:	a1 05       	cpc	r26, r1
     414:	b1 05       	cpc	r27, r1
     416:	58 f4       	brcc	.+22     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
	return US_NO_OBSTACLE;	//No obstacle
	else
	return (result>>1);
     418:	b6 95       	lsr	r27
     41a:	a7 95       	ror	r26
     41c:	97 95       	ror	r25
     41e:	87 95       	ror	r24
     420:	08 95       	ret
		else
		break;		//High edge detected, so break.
	}

	if(i==600000)
	return US_ERROR;	//Indicates time out
     422:	8f ef       	ldi	r24, 0xFF	; 255
     424:	9f ef       	ldi	r25, 0xFF	; 255
     426:	08 95       	ret
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;	//Indicates time out
     428:	8e ef       	ldi	r24, 0xFE	; 254
     42a:	9f ef       	ldi	r25, 0xFF	; 255
     42c:	08 95       	ret

	//Stop Timer
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;	//No obstacle
     42e:	8e ef       	ldi	r24, 0xFE	; 254
     430:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     432:	08 95       	ret

00000434 <USART_init>:
#include "usart.h"
#include "lcd.h"
#include "micro_config.h"

void USART_init(unsigned int ubrr) {
	UBRRL = (unsigned char)ubrr;
     434:	89 b9       	out	0x09, r24	; 9
	UBRRH = (unsigned char)(ubrr >> 8);
     436:	90 bd       	out	0x20, r25	; 32
	UCSRB = (1 << RXEN) | (1 << TXEN);
     438:	88 e1       	ldi	r24, 0x18	; 24
     43a:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // Set UCSZ1 and UCSZ0 for 8-bit data
     43c:	86 e0       	ldi	r24, 0x06	; 6
     43e:	80 bd       	out	0x20, r24	; 32
     440:	08 95       	ret

00000442 <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	while(!(UCSRA &(1<<UDRE)));
     442:	5d 9b       	sbis	0x0b, 5	; 11
     444:	fe cf       	rjmp	.-4      	; 0x442 <USART_Transmit>
	UDR = data;
     446:	8c b9       	out	0x0c, r24	; 12
     448:	08 95       	ret

0000044a <UART_SendString>:
}

// ---- maybe adding SIZE parameter ---- //
void UART_SendString(unsigned char *str)
{
     44a:	0f 93       	push	r16
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	fc 01       	movw	r30, r24
	unsigned char j=0;
	
	while (str[j]!=0)		/* Send string till null */
     452:	80 81       	ld	r24, Z
     454:	88 23       	and	r24, r24
     456:	51 f0       	breq	.+20     	; 0x46c <UART_SendString+0x22>
     458:	8f 01       	movw	r16, r30
	{
		USART_Transmit(str[j]);
     45a:	c0 e0       	ldi	r28, 0x00	; 0
		j++;
     45c:	f2 df       	rcall	.-28     	; 0x442 <USART_Transmit>
// ---- maybe adding SIZE parameter ---- //
void UART_SendString(unsigned char *str)
{
	unsigned char j=0;
	
	while (str[j]!=0)		/* Send string till null */
     45e:	cf 5f       	subi	r28, 0xFF	; 255
     460:	f8 01       	movw	r30, r16
     462:	ec 0f       	add	r30, r28
     464:	f1 1d       	adc	r31, r1
     466:	80 81       	ld	r24, Z
     468:	81 11       	cpse	r24, r1
	{
		USART_Transmit(str[j]);
		j++;
	}
}
     46a:	f8 cf       	rjmp	.-16     	; 0x45c <UART_SendString+0x12>
     46c:	cf 91       	pop	r28
     46e:	1f 91       	pop	r17
     470:	0f 91       	pop	r16
     472:	08 95       	ret

00000474 <displayGuideMenu>:
			displayFirstMainMenu();
		}
		break;
		case NONE:
		if(choice == 1)
		attendInitSubeMenu = ATTEND_READY;
     474:	60 df       	rcall	.-320    	; 0x336 <LCD_Clear>
     476:	4e e6       	ldi	r20, 0x6E	; 110
     478:	50 e0       	ldi	r21, 0x00	; 0
     47a:	60 e0       	ldi	r22, 0x00	; 0
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	42 df       	rcall	.-380    	; 0x304 <LCD_String_xy>
     480:	4f e7       	ldi	r20, 0x7F	; 127
     482:	50 e0       	ldi	r21, 0x00	; 0
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	3d cf       	rjmp	.-390    	; 0x304 <LCD_String_xy>
     48a:	08 95       	ret

0000048c <displayFirstMainMenu>:
     48c:	54 df       	rcall	.-344    	; 0x336 <LCD_Clear>
     48e:	40 e9       	ldi	r20, 0x90	; 144
     490:	50 e0       	ldi	r21, 0x00	; 0
     492:	60 e0       	ldi	r22, 0x00	; 0
     494:	80 e0       	ldi	r24, 0x00	; 0
     496:	36 df       	rcall	.-404    	; 0x304 <LCD_String_xy>
     498:	4e e9       	ldi	r20, 0x9E	; 158
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	60 e0       	ldi	r22, 0x00	; 0
     49e:	81 e0       	ldi	r24, 0x01	; 1
     4a0:	31 cf       	rjmp	.-414    	; 0x304 <LCD_String_xy>
     4a2:	08 95       	ret

000004a4 <displaySecondMainMenu>:
     4a4:	48 df       	rcall	.-368    	; 0x336 <LCD_Clear>
     4a6:	4e ea       	ldi	r20, 0xAE	; 174
     4a8:	50 e0       	ldi	r21, 0x00	; 0
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	2a df       	rcall	.-428    	; 0x304 <LCD_String_xy>
     4b0:	4e eb       	ldi	r20, 0xBE	; 190
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	25 cf       	rjmp	.-438    	; 0x304 <LCD_String_xy>
     4ba:	08 95       	ret

000004bc <displayThirdMainMenu>:
     4bc:	3c df       	rcall	.-392    	; 0x336 <LCD_Clear>
     4be:	4c ec       	ldi	r20, 0xCC	; 204
     4c0:	50 e0       	ldi	r21, 0x00	; 0
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	1e df       	rcall	.-452    	; 0x304 <LCD_String_xy>
     4c8:	4b ed       	ldi	r20, 0xDB	; 219
     4ca:	50 e0       	ldi	r21, 0x00	; 0
     4cc:	60 e0       	ldi	r22, 0x00	; 0
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	19 cf       	rjmp	.-462    	; 0x304 <LCD_String_xy>
     4d2:	08 95       	ret

000004d4 <displayAttendInitMenu>:
     4d4:	30 df       	rcall	.-416    	; 0x336 <LCD_Clear>
     4d6:	4c ee       	ldi	r20, 0xEC	; 236
     4d8:	50 e0       	ldi	r21, 0x00	; 0
     4da:	60 e0       	ldi	r22, 0x00	; 0
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	12 df       	rcall	.-476    	; 0x304 <LCD_String_xy>
     4e0:	4d ef       	ldi	r20, 0xFD	; 253
     4e2:	50 e0       	ldi	r21, 0x00	; 0
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	0d cf       	rjmp	.-486    	; 0x304 <LCD_String_xy>
     4ea:	08 95       	ret

000004ec <displayStudentManagementMenu>:
     4ec:	24 df       	rcall	.-440    	; 0x336 <LCD_Clear>
     4ee:	4e e0       	ldi	r20, 0x0E	; 14
     4f0:	51 e0       	ldi	r21, 0x01	; 1
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	06 cf       	rjmp	.-500    	; 0x304 <LCD_String_xy>
     4f8:	08 95       	ret

000004fa <handleViewPresentStudents>:
     4fa:	ef 92       	push	r14
     4fc:	ff 92       	push	r15
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	cf 93       	push	r28
     504:	df 93       	push	r29
     506:	cd b7       	in	r28, 0x3d	; 61
     508:	de b7       	in	r29, 0x3e	; 62
     50a:	a0 97       	sbiw	r28, 0x20	; 32
     50c:	0f b6       	in	r0, 0x3f	; 63
     50e:	f8 94       	cli
     510:	de bf       	out	0x3e, r29	; 62
     512:	0f be       	out	0x3f, r0	; 63
     514:	cd bf       	out	0x3d, r28	; 61
     516:	0f df       	rcall	.-482    	; 0x336 <LCD_Clear>
     518:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <StudentCount+0x1>
     51c:	8f 93       	push	r24
     51e:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <StudentCount>
     522:	8f 93       	push	r24
     524:	8e e1       	ldi	r24, 0x1E	; 30
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	9f 93       	push	r25
     52a:	8f 93       	push	r24
     52c:	8e 01       	movw	r16, r28
     52e:	0f 5f       	subi	r16, 0xFF	; 255
     530:	1f 4f       	sbci	r17, 0xFF	; 255
     532:	1f 93       	push	r17
     534:	0f 93       	push	r16
     536:	fa d5       	rcall	.+3060   	; 0x112c <sprintf>
     538:	a8 01       	movw	r20, r16
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	e2 de       	rcall	.-572    	; 0x304 <LCD_String_xy>
     540:	2f ef       	ldi	r18, 0xFF	; 255
     542:	81 ee       	ldi	r24, 0xE1	; 225
     544:	94 e0       	ldi	r25, 0x04	; 4
     546:	21 50       	subi	r18, 0x01	; 1
     548:	80 40       	sbci	r24, 0x00	; 0
     54a:	90 40       	sbci	r25, 0x00	; 0
     54c:	e1 f7       	brne	.-8      	; 0x546 <handleViewPresentStudents+0x4c>
     54e:	00 c0       	rjmp	.+0      	; 0x550 <handleViewPresentStudents+0x56>
     550:	00 00       	nop
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <StudentCount>
     562:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <StudentCount+0x1>
     566:	89 2b       	or	r24, r25
     568:	31 f4       	brne	.+12     	; 0x576 <handleViewPresentStudents+0x7c>
     56a:	4b e2       	ldi	r20, 0x2B	; 43
     56c:	51 e0       	ldi	r21, 0x01	; 1
     56e:	60 e0       	ldi	r22, 0x00	; 0
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	c8 de       	rcall	.-624    	; 0x304 <LCD_String_xy>
     574:	3f c0       	rjmp	.+126    	; 0x5f4 <handleViewPresentStudents+0xfa>
     576:	48 e0       	ldi	r20, 0x08	; 8
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	be 01       	movw	r22, r28
     57c:	6f 5e       	subi	r22, 0xEF	; 239
     57e:	7f 4f       	sbci	r23, 0xFF	; 255
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	d7 dd       	rcall	.-1106   	; 0x134 <EEPROM_ReadString>
     586:	ae 01       	movw	r20, r28
     588:	4f 5e       	subi	r20, 0xEF	; 239
     58a:	5f 4f       	sbci	r21, 0xFF	; 255
     58c:	60 e0       	ldi	r22, 0x00	; 0
     58e:	81 e0       	ldi	r24, 0x01	; 1
     590:	b9 de       	rcall	.-654    	; 0x304 <LCD_String_xy>
     592:	00 e0       	ldi	r16, 0x00	; 0
     594:	10 e0       	ldi	r17, 0x00	; 0
     596:	e1 2c       	mov	r14, r1
     598:	f1 2c       	mov	r15, r1
     59a:	05 de       	rcall	.-1014   	; 0x1a6 <scan_keypad>
     59c:	89 33       	cpi	r24, 0x39	; 57
     59e:	51 f4       	brne	.+20     	; 0x5b4 <handleViewPresentStudents+0xba>
     5a0:	c8 01       	movw	r24, r16
     5a2:	01 96       	adiw	r24, 0x01	; 1
     5a4:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <StudentCount>
     5a8:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <StudentCount+0x1>
     5ac:	82 17       	cp	r24, r18
     5ae:	93 07       	cpc	r25, r19
     5b0:	64 f0       	brlt	.+24     	; 0x5ca <handleViewPresentStudents+0xd0>
     5b2:	0c c0       	rjmp	.+24     	; 0x5cc <handleViewPresentStudents+0xd2>
     5b4:	87 33       	cpi	r24, 0x37	; 55
     5b6:	31 f4       	brne	.+12     	; 0x5c4 <handleViewPresentStudents+0xca>
     5b8:	01 50       	subi	r16, 0x01	; 1
     5ba:	11 09       	sbc	r17, r1
     5bc:	3a f4       	brpl	.+14     	; 0x5cc <handleViewPresentStudents+0xd2>
     5be:	0e 2d       	mov	r16, r14
     5c0:	1f 2d       	mov	r17, r15
     5c2:	04 c0       	rjmp	.+8      	; 0x5cc <handleViewPresentStudents+0xd2>
     5c4:	8f 36       	cpi	r24, 0x6F	; 111
     5c6:	11 f4       	brne	.+4      	; 0x5cc <handleViewPresentStudents+0xd2>
     5c8:	15 c0       	rjmp	.+42     	; 0x5f4 <handleViewPresentStudents+0xfa>
     5ca:	8c 01       	movw	r16, r24
     5cc:	48 e0       	ldi	r20, 0x08	; 8
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	be 01       	movw	r22, r28
     5d2:	67 5e       	subi	r22, 0xE7	; 231
     5d4:	7f 4f       	sbci	r23, 0xFF	; 255
     5d6:	c8 01       	movw	r24, r16
     5d8:	88 0f       	add	r24, r24
     5da:	99 1f       	adc	r25, r25
     5dc:	88 0f       	add	r24, r24
     5de:	99 1f       	adc	r25, r25
     5e0:	88 0f       	add	r24, r24
     5e2:	99 1f       	adc	r25, r25
     5e4:	a7 dd       	rcall	.-1202   	; 0x134 <EEPROM_ReadString>
     5e6:	ae 01       	movw	r20, r28
     5e8:	47 5e       	subi	r20, 0xE7	; 231
     5ea:	5f 4f       	sbci	r21, 0xFF	; 255
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	89 de       	rcall	.-750    	; 0x304 <LCD_String_xy>
     5f2:	d3 cf       	rjmp	.-90     	; 0x59a <handleViewPresentStudents+0xa0>
     5f4:	a0 96       	adiw	r28, 0x20	; 32
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	f8 94       	cli
     5fa:	de bf       	out	0x3e, r29	; 62
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	cd bf       	out	0x3d, r28	; 61
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	1f 91       	pop	r17
     606:	0f 91       	pop	r16
     608:	ff 90       	pop	r15
     60a:	ef 90       	pop	r14
     60c:	08 95       	ret

0000060e <handleTemperatureMonitor>:
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
     616:	2a 97       	sbiw	r28, 0x0a	; 10
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	2f ef       	ldi	r18, 0xFF	; 255
     624:	81 ee       	ldi	r24, 0xE1	; 225
     626:	94 e0       	ldi	r25, 0x04	; 4
     628:	21 50       	subi	r18, 0x01	; 1
     62a:	80 40       	sbci	r24, 0x00	; 0
     62c:	90 40       	sbci	r25, 0x00	; 0
     62e:	e1 f7       	brne	.-8      	; 0x628 <handleTemperatureMonitor+0x1a>
     630:	00 c0       	rjmp	.+0      	; 0x632 <handleTemperatureMonitor+0x24>
     632:	00 00       	nop
     634:	45 de       	rcall	.-886    	; 0x2c0 <LCD_Init>
     636:	ef ef       	ldi	r30, 0xFF	; 255
     638:	f1 ee       	ldi	r31, 0xE1	; 225
     63a:	24 e0       	ldi	r18, 0x04	; 4
     63c:	e1 50       	subi	r30, 0x01	; 1
     63e:	f0 40       	sbci	r31, 0x00	; 0
     640:	20 40       	sbci	r18, 0x00	; 0
     642:	e1 f7       	brne	.-8      	; 0x63c <handleTemperatureMonitor+0x2e>
     644:	00 c0       	rjmp	.+0      	; 0x646 <handleTemperatureMonitor+0x38>
     646:	00 00       	nop
     648:	7b de       	rcall	.-778    	; 0x340 <ADC_Init>
     64a:	8f ef       	ldi	r24, 0xFF	; 255
     64c:	91 ee       	ldi	r25, 0xE1	; 225
     64e:	e4 e0       	ldi	r30, 0x04	; 4
     650:	81 50       	subi	r24, 0x01	; 1
     652:	90 40       	sbci	r25, 0x00	; 0
     654:	e0 40       	sbci	r30, 0x00	; 0
     656:	e1 f7       	brne	.-8      	; 0x650 <handleTemperatureMonitor+0x42>
     658:	00 c0       	rjmp	.+0      	; 0x65a <handleTemperatureMonitor+0x4c>
     65a:	00 00       	nop
     65c:	0f 2e       	mov	r0, r31
     65e:	ff ed       	ldi	r31, 0xDF	; 223
     660:	cf 2e       	mov	r12, r31
     662:	f0 2d       	mov	r31, r0
     664:	0f 2e       	mov	r0, r31
     666:	f8 e3       	ldi	r31, 0x38	; 56
     668:	ef 2e       	mov	r14, r31
     66a:	f1 e0       	ldi	r31, 0x01	; 1
     66c:	ff 2e       	mov	r15, r31
     66e:	f0 2d       	mov	r31, r0
     670:	8e 01       	movw	r16, r28
     672:	0f 5f       	subi	r16, 0xFF	; 255
     674:	1f 4f       	sbci	r17, 0xFF	; 255
     676:	0f 2e       	mov	r0, r31
     678:	fa e0       	ldi	r31, 0x0A	; 10
     67a:	df 2e       	mov	r13, r31
     67c:	f0 2d       	mov	r31, r0
     67e:	40 ec       	ldi	r20, 0xC0	; 192
     680:	50 e0       	ldi	r21, 0x00	; 0
     682:	60 e0       	ldi	r22, 0x00	; 0
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	3e de       	rcall	.-900    	; 0x304 <LCD_String_xy>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	60 de       	rcall	.-832    	; 0x34c <ADC_Read>
     68c:	bc 01       	movw	r22, r24
     68e:	99 0f       	add	r25, r25
     690:	88 0b       	sbc	r24, r24
     692:	99 0b       	sbc	r25, r25
     694:	56 d4       	rcall	.+2220   	; 0xf42 <__floatsisf>
     696:	26 ef       	ldi	r18, 0xF6	; 246
     698:	38 e2       	ldi	r19, 0x28	; 40
     69a:	4c e9       	ldi	r20, 0x9C	; 156
     69c:	50 e4       	ldi	r21, 0x40	; 64
     69e:	dd d4       	rcall	.+2490   	; 0x105a <__mulsf3>
     6a0:	1f 92       	push	r1
     6a2:	cf 92       	push	r12
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e2       	ldi	r20, 0x20	; 32
     6aa:	51 e4       	ldi	r21, 0x41	; 65
     6ac:	af d3       	rcall	.+1886   	; 0xe0c <__divsf3>
     6ae:	16 d4       	rcall	.+2092   	; 0xedc <__fixsfsi>
     6b0:	7f 93       	push	r23
     6b2:	6f 93       	push	r22
     6b4:	ff 92       	push	r15
     6b6:	ef 92       	push	r14
     6b8:	1f 93       	push	r17
     6ba:	0f 93       	push	r16
     6bc:	37 d5       	rcall	.+2670   	; 0x112c <sprintf>
     6be:	a8 01       	movw	r20, r16
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	1f de       	rcall	.-962    	; 0x304 <LCD_String_xy>
     6c6:	ff ef       	ldi	r31, 0xFF	; 255
     6c8:	23 ed       	ldi	r18, 0xD3	; 211
     6ca:	80 e3       	ldi	r24, 0x30	; 48
     6cc:	f1 50       	subi	r31, 0x01	; 1
     6ce:	20 40       	sbci	r18, 0x00	; 0
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	e1 f7       	brne	.-8      	; 0x6cc <handleTemperatureMonitor+0xbe>
     6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <handleTemperatureMonitor+0xc8>
     6d6:	00 00       	nop
     6d8:	f8 01       	movw	r30, r16
     6da:	2d 2d       	mov	r18, r13
     6dc:	11 92       	st	Z+, r1
     6de:	2a 95       	dec	r18
     6e0:	e9 f7       	brne	.-6      	; 0x6dc <handleTemperatureMonitor+0xce>
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	f8 94       	cli
     6e6:	de bf       	out	0x3e, r29	; 62
     6e8:	0f be       	out	0x3f, r0	; 63
     6ea:	cd bf       	out	0x3d, r28	; 61
     6ec:	c8 cf       	rjmp	.-112    	; 0x67e <handleTemperatureMonitor+0x70>

000006ee <handleRetrieveStudentData>:
     6ee:	1f 93       	push	r17
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
     6f8:	28 97       	sbiw	r28, 0x08	; 8
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	f8 94       	cli
     6fe:	de bf       	out	0x3e, r29	; 62
     700:	0f be       	out	0x3f, r0	; 63
     702:	cd bf       	out	0x3d, r28	; 61
     704:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <StudentCount>
     708:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <StudentCount+0x1>
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	11 f0       	breq	.+4      	; 0x714 <handleRetrieveStudentData+0x26>
     710:	6c f4       	brge	.+26     	; 0x72c <handleRetrieveStudentData+0x3e>
     712:	31 c0       	rjmp	.+98     	; 0x776 <handleRetrieveStudentData+0x88>
     714:	10 de       	rcall	.-992    	; 0x336 <LCD_Clear>
     716:	40 e4       	ldi	r20, 0x40	; 64
     718:	51 e0       	ldi	r21, 0x01	; 1
     71a:	60 e0       	ldi	r22, 0x00	; 0
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	f2 dd       	rcall	.-1052   	; 0x304 <LCD_String_xy>
     720:	4c e4       	ldi	r20, 0x4C	; 76
     722:	51 e0       	ldi	r21, 0x01	; 1
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	ed dd       	rcall	.-1062   	; 0x304 <LCD_String_xy>
     72a:	2b c0       	rjmp	.+86     	; 0x782 <handleRetrieveStudentData+0x94>
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	10 e0       	ldi	r17, 0x00	; 0
     732:	48 e0       	ldi	r20, 0x08	; 8
     734:	50 e0       	ldi	r21, 0x00	; 0
     736:	be 01       	movw	r22, r28
     738:	6f 5f       	subi	r22, 0xFF	; 255
     73a:	7f 4f       	sbci	r23, 0xFF	; 255
     73c:	88 0f       	add	r24, r24
     73e:	99 1f       	adc	r25, r25
     740:	88 0f       	add	r24, r24
     742:	99 1f       	adc	r25, r25
     744:	88 0f       	add	r24, r24
     746:	99 1f       	adc	r25, r25
     748:	f5 dc       	rcall	.-1558   	; 0x134 <EEPROM_ReadString>
     74a:	ce 01       	movw	r24, r28
     74c:	01 96       	adiw	r24, 0x01	; 1
     74e:	7d de       	rcall	.-774    	; 0x44a <UART_SendString>
     750:	2f ef       	ldi	r18, 0xFF	; 255
     752:	89 e6       	ldi	r24, 0x69	; 105
     754:	98 e1       	ldi	r25, 0x18	; 24
     756:	21 50       	subi	r18, 0x01	; 1
     758:	80 40       	sbci	r24, 0x00	; 0
     75a:	90 40       	sbci	r25, 0x00	; 0
     75c:	e1 f7       	brne	.-8      	; 0x756 <handleRetrieveStudentData+0x68>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <handleRetrieveStudentData+0x72>
     760:	00 00       	nop
     762:	1f 5f       	subi	r17, 0xFF	; 255
     764:	81 2f       	mov	r24, r17
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <StudentCount>
     76c:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <StudentCount+0x1>
     770:	82 17       	cp	r24, r18
     772:	93 07       	cpc	r25, r19
     774:	f4 f2       	brlt	.-68     	; 0x732 <handleRetrieveStudentData+0x44>
     776:	df dd       	rcall	.-1090   	; 0x336 <LCD_Clear>
     778:	49 e5       	ldi	r20, 0x59	; 89
     77a:	51 e0       	ldi	r21, 0x01	; 1
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	c1 dd       	rcall	.-1150   	; 0x304 <LCD_String_xy>
     782:	28 96       	adiw	r28, 0x08	; 8
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	f8 94       	cli
     788:	de bf       	out	0x3e, r29	; 62
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	cd bf       	out	0x3d, r28	; 61
     78e:	df 91       	pop	r29
     790:	cf 91       	pop	r28
     792:	1f 91       	pop	r17
     794:	08 95       	ret

00000796 <handleTrafficMonitor>:
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	cd b7       	in	r28, 0x3d	; 61
     79c:	de b7       	in	r29, 0x3e	; 62
     79e:	60 97       	sbiw	r28, 0x10	; 16
     7a0:	0f b6       	in	r0, 0x3f	; 63
     7a2:	f8 94       	cli
     7a4:	de bf       	out	0x3e, r29	; 62
     7a6:	0f be       	out	0x3f, r0	; 63
     7a8:	cd bf       	out	0x3d, r28	; 61
     7aa:	4f e5       	ldi	r20, 0x5F	; 95
     7ac:	51 e0       	ldi	r21, 0x01	; 1
     7ae:	60 e0       	ldi	r22, 0x00	; 0
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	a8 dd       	rcall	.-1200   	; 0x304 <LCD_String_xy>
     7b4:	cc 24       	eor	r12, r12
     7b6:	ca 94       	dec	r12
     7b8:	dd 24       	eor	r13, r13
     7ba:	da 94       	dec	r13
     7bc:	0f 2e       	mov	r0, r31
     7be:	f1 e9       	ldi	r31, 0x91	; 145
     7c0:	ef 2e       	mov	r14, r31
     7c2:	f1 e0       	ldi	r31, 0x01	; 1
     7c4:	ff 2e       	mov	r15, r31
     7c6:	f0 2d       	mov	r31, r0
     7c8:	8e 01       	movw	r16, r28
     7ca:	0f 5f       	subi	r16, 0xFF	; 255
     7cc:	1f 4f       	sbci	r17, 0xFF	; 255
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <handleTrafficMonitor+0x3c>
     7d0:	cd 2c       	mov	r12, r13
     7d2:	2f ef       	ldi	r18, 0xFF	; 255
     7d4:	81 ee       	ldi	r24, 0xE1	; 225
     7d6:	94 e0       	ldi	r25, 0x04	; 4
     7d8:	21 50       	subi	r18, 0x01	; 1
     7da:	80 40       	sbci	r24, 0x00	; 0
     7dc:	90 40       	sbci	r25, 0x00	; 0
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <handleTrafficMonitor+0x42>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <handleTrafficMonitor+0x4c>
     7e2:	00 00       	nop
     7e4:	c5 dd       	rcall	.-1142   	; 0x370 <HCSR04Trigger>
     7e6:	ca dd       	rcall	.-1132   	; 0x37c <GetPulseWidth>
     7e8:	8f 3f       	cpi	r24, 0xFF	; 255
     7ea:	2f ef       	ldi	r18, 0xFF	; 255
     7ec:	92 07       	cpc	r25, r18
     7ee:	71 f4       	brne	.+28     	; 0x80c <handleTrafficMonitor+0x76>
     7f0:	a2 dd       	rcall	.-1212   	; 0x336 <LCD_Clear>
     7f2:	88 e6       	ldi	r24, 0x68	; 104
     7f4:	91 e0       	ldi	r25, 0x01	; 1
     7f6:	78 dd       	rcall	.-1296   	; 0x2e8 <LCD_String>
     7f8:	8f ef       	ldi	r24, 0xFF	; 255
     7fa:	95 ea       	ldi	r25, 0xA5	; 165
     7fc:	2e e0       	ldi	r18, 0x0E	; 14
     7fe:	81 50       	subi	r24, 0x01	; 1
     800:	90 40       	sbci	r25, 0x00	; 0
     802:	20 40       	sbci	r18, 0x00	; 0
     804:	e1 f7       	brne	.-8      	; 0x7fe <handleTrafficMonitor+0x68>
     806:	00 c0       	rjmp	.+0      	; 0x808 <handleTrafficMonitor+0x72>
     808:	00 00       	nop
     80a:	e3 cf       	rjmp	.-58     	; 0x7d2 <handleTrafficMonitor+0x3c>
     80c:	8e 3f       	cpi	r24, 0xFE	; 254
     80e:	2f ef       	ldi	r18, 0xFF	; 255
     810:	92 07       	cpc	r25, r18
     812:	71 f4       	brne	.+28     	; 0x830 <handleTrafficMonitor+0x9a>
     814:	90 dd       	rcall	.-1248   	; 0x336 <LCD_Clear>
     816:	8c e7       	ldi	r24, 0x7C	; 124
     818:	91 e0       	ldi	r25, 0x01	; 1
     81a:	66 dd       	rcall	.-1332   	; 0x2e8 <LCD_String>
     81c:	8f ef       	ldi	r24, 0xFF	; 255
     81e:	95 ea       	ldi	r25, 0xA5	; 165
     820:	2e e0       	ldi	r18, 0x0E	; 14
     822:	81 50       	subi	r24, 0x01	; 1
     824:	90 40       	sbci	r25, 0x00	; 0
     826:	20 40       	sbci	r18, 0x00	; 0
     828:	e1 f7       	brne	.-8      	; 0x822 <handleTrafficMonitor+0x8c>
     82a:	00 c0       	rjmp	.+0      	; 0x82c <handleTrafficMonitor+0x96>
     82c:	00 00       	nop
     82e:	d1 cf       	rjmp	.-94     	; 0x7d2 <handleTrafficMonitor+0x3c>
     830:	bc 01       	movw	r22, r24
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	83 d3       	rcall	.+1798   	; 0xf3e <__floatunsisf>
     838:	26 e9       	ldi	r18, 0x96	; 150
     83a:	33 e4       	ldi	r19, 0x43	; 67
     83c:	4b e0       	ldi	r20, 0x0B	; 11
     83e:	5d e3       	ldi	r21, 0x3D	; 61
     840:	0c d4       	rcall	.+2072   	; 0x105a <__mulsf3>
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	40 e0       	ldi	r20, 0x00	; 0
     848:	5f e3       	ldi	r21, 0x3F	; 63
     84a:	07 d4       	rcall	.+2062   	; 0x105a <__mulsf3>
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	5f e3       	ldi	r21, 0x3F	; 63
     854:	77 d2       	rcall	.+1262   	; 0xd44 <__addsf3>
     856:	42 d3       	rcall	.+1668   	; 0xedc <__fixsfsi>
     858:	66 30       	cpi	r22, 0x06	; 6
     85a:	71 05       	cpc	r23, r1
     85c:	0c f4       	brge	.+2      	; 0x860 <__stack+0x1>
     85e:	d3 94       	inc	r13
     860:	dc 14       	cp	r13, r12
     862:	09 f4       	brne	.+2      	; 0x866 <__stack+0x7>
     864:	b5 cf       	rjmp	.-150    	; 0x7d0 <handleTrafficMonitor+0x3a>
     866:	1f 92       	push	r1
     868:	df 92       	push	r13
     86a:	ff 92       	push	r15
     86c:	ef 92       	push	r14
     86e:	1f 93       	push	r17
     870:	0f 93       	push	r16
     872:	5c d4       	rcall	.+2232   	; 0x112c <sprintf>
     874:	60 dd       	rcall	.-1344   	; 0x336 <LCD_Clear>
     876:	a8 01       	movw	r20, r16
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	43 dd       	rcall	.-1402   	; 0x304 <LCD_String_xy>
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	0f 90       	pop	r0
     886:	0f 90       	pop	r0
     888:	0f 90       	pop	r0
     88a:	cd 2c       	mov	r12, r13
     88c:	a2 cf       	rjmp	.-188    	; 0x7d2 <handleTrafficMonitor+0x3c>

0000088e <areEqual>:
     88e:	44 23       	and	r20, r20
     890:	d1 f0       	breq	.+52     	; 0x8c6 <areEqual+0x38>
     892:	fc 01       	movw	r30, r24
     894:	30 81       	ld	r19, Z
     896:	fb 01       	movw	r30, r22
     898:	20 81       	ld	r18, Z
     89a:	32 13       	cpse	r19, r18
     89c:	16 c0       	rjmp	.+44     	; 0x8ca <areEqual+0x3c>
     89e:	fc 01       	movw	r30, r24
     8a0:	31 96       	adiw	r30, 0x01	; 1
     8a2:	db 01       	movw	r26, r22
     8a4:	11 96       	adiw	r26, 0x01	; 1
     8a6:	41 50       	subi	r20, 0x01	; 1
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	4f 5f       	subi	r20, 0xFF	; 255
     8ac:	5f 4f       	sbci	r21, 0xFF	; 255
     8ae:	48 0f       	add	r20, r24
     8b0:	59 1f       	adc	r21, r25
     8b2:	04 c0       	rjmp	.+8      	; 0x8bc <areEqual+0x2e>
     8b4:	21 91       	ld	r18, Z+
     8b6:	9d 91       	ld	r25, X+
     8b8:	29 13       	cpse	r18, r25
     8ba:	09 c0       	rjmp	.+18     	; 0x8ce <areEqual+0x40>
     8bc:	e4 17       	cp	r30, r20
     8be:	f5 07       	cpc	r31, r21
     8c0:	c9 f7       	brne	.-14     	; 0x8b4 <areEqual+0x26>
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	08 95       	ret
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	08 95       	ret
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	08 95       	ret
     8ce:	80 e0       	ldi	r24, 0x00	; 0
     8d0:	08 95       	ret

000008d2 <handleSubmitCode>:
     8d2:	4f 92       	push	r4
     8d4:	5f 92       	push	r5
     8d6:	6f 92       	push	r6
     8d8:	7f 92       	push	r7
     8da:	bf 92       	push	r11
     8dc:	cf 92       	push	r12
     8de:	df 92       	push	r13
     8e0:	ef 92       	push	r14
     8e2:	ff 92       	push	r15
     8e4:	0f 93       	push	r16
     8e6:	1f 93       	push	r17
     8e8:	cf 93       	push	r28
     8ea:	df 93       	push	r29
     8ec:	cd b7       	in	r28, 0x3d	; 61
     8ee:	de b7       	in	r29, 0x3e	; 62
     8f0:	62 97       	sbiw	r28, 0x12	; 18
     8f2:	0f b6       	in	r0, 0x3f	; 63
     8f4:	f8 94       	cli
     8f6:	de bf       	out	0x3e, r29	; 62
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	cd bf       	out	0x3d, r28	; 61
     8fc:	1c dd       	rcall	.-1480   	; 0x336 <LCD_Clear>
     8fe:	40 e0       	ldi	r20, 0x00	; 0
     900:	50 e0       	ldi	r21, 0x00	; 0
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	fe dc       	rcall	.-1540   	; 0x304 <LCD_String_xy>
     908:	8b e9       	ldi	r24, 0x9B	; 155
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	ed dc       	rcall	.-1574   	; 0x2e8 <LCD_String>
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	50 e0       	ldi	r21, 0x00	; 0
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	f6 dc       	rcall	.-1556   	; 0x304 <LCD_String_xy>
     918:	8e 01       	movw	r16, r28
     91a:	0f 5f       	subi	r16, 0xFF	; 255
     91c:	1f 4f       	sbci	r17, 0xFF	; 255
     91e:	b1 2c       	mov	r11, r1
     920:	c1 2c       	mov	r12, r1
     922:	d1 2c       	mov	r13, r1
     924:	76 01       	movw	r14, r12
     926:	3f dc       	rcall	.-1922   	; 0x1a6 <scan_keypad>
     928:	8f 36       	cpi	r24, 0x6F	; 111
     92a:	49 f1       	breq	.+82     	; 0x97e <handleSubmitCode+0xac>
     92c:	cc 0c       	add	r12, r12
     92e:	dd 1c       	adc	r13, r13
     930:	ee 1c       	adc	r14, r14
     932:	ff 1c       	adc	r15, r15
     934:	26 01       	movw	r4, r12
     936:	37 01       	movw	r6, r14
     938:	44 0c       	add	r4, r4
     93a:	55 1c       	adc	r5, r5
     93c:	66 1c       	adc	r6, r6
     93e:	77 1c       	adc	r7, r7
     940:	44 0c       	add	r4, r4
     942:	55 1c       	adc	r5, r5
     944:	66 1c       	adc	r6, r6
     946:	77 1c       	adc	r7, r7
     948:	c4 0c       	add	r12, r4
     94a:	d5 1c       	adc	r13, r5
     94c:	e6 1c       	adc	r14, r6
     94e:	f7 1c       	adc	r15, r7
     950:	28 2f       	mov	r18, r24
     952:	08 2e       	mov	r0, r24
     954:	00 0c       	add	r0, r0
     956:	33 0b       	sbc	r19, r19
     958:	a9 01       	movw	r20, r18
     95a:	40 53       	subi	r20, 0x30	; 48
     95c:	51 09       	sbc	r21, r1
     95e:	05 2e       	mov	r0, r21
     960:	00 0c       	add	r0, r0
     962:	66 0b       	sbc	r22, r22
     964:	77 0b       	sbc	r23, r23
     966:	c4 0e       	add	r12, r20
     968:	d5 1e       	adc	r13, r21
     96a:	e6 1e       	adc	r14, r22
     96c:	f7 1e       	adc	r15, r23
     96e:	b3 94       	inc	r11
     970:	f8 01       	movw	r30, r16
     972:	81 93       	st	Z+, r24
     974:	8f 01       	movw	r16, r30
     976:	94 dc       	rcall	.-1752   	; 0x2a0 <LCD_Char>
     978:	f9 e0       	ldi	r31, 0x09	; 9
     97a:	bf 12       	cpse	r11, r31
     97c:	d4 cf       	rjmp	.-88     	; 0x926 <handleSubmitCode+0x54>
     97e:	fe 01       	movw	r30, r28
     980:	eb 0d       	add	r30, r11
     982:	f1 1d       	adc	r31, r1
     984:	11 82       	std	Z+1, r1	; 0x01
     986:	2f ef       	ldi	r18, 0xFF	; 255
     988:	83 ec       	ldi	r24, 0xC3	; 195
     98a:	99 e0       	ldi	r25, 0x09	; 9
     98c:	21 50       	subi	r18, 0x01	; 1
     98e:	80 40       	sbci	r24, 0x00	; 0
     990:	90 40       	sbci	r25, 0x00	; 0
     992:	e1 f7       	brne	.-8      	; 0x98c <handleSubmitCode+0xba>
     994:	00 c0       	rjmp	.+0      	; 0x996 <handleSubmitCode+0xc4>
     996:	00 00       	nop
     998:	d7 01       	movw	r26, r14
     99a:	c6 01       	movw	r24, r12
     99c:	81 5a       	subi	r24, 0xA1	; 161
     99e:	90 4e       	sbci	r25, 0xE0	; 224
     9a0:	a3 46       	sbci	r26, 0x63	; 99
     9a2:	b2 40       	sbci	r27, 0x02	; 2
     9a4:	8f 39       	cpi	r24, 0x9F	; 159
     9a6:	96 48       	sbci	r25, 0x86	; 134
     9a8:	a1 40       	sbci	r26, 0x01	; 1
     9aa:	b1 05       	cpc	r27, r1
     9ac:	08 f0       	brcs	.+2      	; 0x9b0 <handleSubmitCode+0xde>
     9ae:	78 c0       	rjmp	.+240    	; 0xaa0 <handleSubmitCode+0x1ce>
     9b0:	1a 8a       	std	Y+18, r1	; 0x12
     9b2:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <StudentCount>
     9b6:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <StudentCount+0x1>
     9ba:	12 16       	cp	r1, r18
     9bc:	13 06       	cpc	r1, r19
     9be:	0c f0       	brlt	.+2      	; 0x9c2 <handleSubmitCode+0xf0>
     9c0:	40 c0       	rjmp	.+128    	; 0xa42 <handleSubmitCode+0x170>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	10 e0       	ldi	r17, 0x00	; 0
     9c8:	48 e0       	ldi	r20, 0x08	; 8
     9ca:	50 e0       	ldi	r21, 0x00	; 0
     9cc:	be 01       	movw	r22, r28
     9ce:	66 5f       	subi	r22, 0xF6	; 246
     9d0:	7f 4f       	sbci	r23, 0xFF	; 255
     9d2:	88 0f       	add	r24, r24
     9d4:	99 1f       	adc	r25, r25
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	88 0f       	add	r24, r24
     9dc:	99 1f       	adc	r25, r25
     9de:	aa db       	rcall	.-2220   	; 0x134 <EEPROM_ReadString>
     9e0:	48 e0       	ldi	r20, 0x08	; 8
     9e2:	be 01       	movw	r22, r28
     9e4:	66 5f       	subi	r22, 0xF6	; 246
     9e6:	7f 4f       	sbci	r23, 0xFF	; 255
     9e8:	ce 01       	movw	r24, r28
     9ea:	01 96       	adiw	r24, 0x01	; 1
     9ec:	50 df       	rcall	.-352    	; 0x88e <areEqual>
     9ee:	88 23       	and	r24, r24
     9f0:	e9 f0       	breq	.+58     	; 0xa2c <handleSubmitCode+0x15a>
     9f2:	a1 dc       	rcall	.-1726   	; 0x336 <LCD_Clear>
     9f4:	53 db       	rcall	.-2394   	; 0x9c <buzzer_init>
     9f6:	ff ef       	ldi	r31, 0xFF	; 255
     9f8:	23 ed       	ldi	r18, 0xD3	; 211
     9fa:	80 e3       	ldi	r24, 0x30	; 48
     9fc:	f1 50       	subi	r31, 0x01	; 1
     9fe:	20 40       	sbci	r18, 0x00	; 0
     a00:	80 40       	sbci	r24, 0x00	; 0
     a02:	e1 f7       	brne	.-8      	; 0x9fc <handleSubmitCode+0x12a>
     a04:	00 c0       	rjmp	.+0      	; 0xa06 <handleSubmitCode+0x134>
     a06:	00 00       	nop
     a08:	84 ef       	ldi	r24, 0xF4	; 244
     a0a:	91 e0       	ldi	r25, 0x01	; 1
     a0c:	4d db       	rcall	.-2406   	; 0xa8 <small_beep>
     a0e:	4b ea       	ldi	r20, 0xAB	; 171
     a10:	51 e0       	ldi	r21, 0x01	; 1
     a12:	60 e0       	ldi	r22, 0x00	; 0
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	76 dc       	rcall	.-1812   	; 0x304 <LCD_String_xy>
     a18:	9f ef       	ldi	r25, 0xFF	; 255
     a1a:	e9 e6       	ldi	r30, 0x69	; 105
     a1c:	f8 e1       	ldi	r31, 0x18	; 24
     a1e:	91 50       	subi	r25, 0x01	; 1
     a20:	e0 40       	sbci	r30, 0x00	; 0
     a22:	f0 40       	sbci	r31, 0x00	; 0
     a24:	e1 f7       	brne	.-8      	; 0xa1e <handleSubmitCode+0x14c>
     a26:	00 c0       	rjmp	.+0      	; 0xa28 <handleSubmitCode+0x156>
     a28:	00 00       	nop
     a2a:	4e c0       	rjmp	.+156    	; 0xac8 <handleSubmitCode+0x1f6>
     a2c:	1f 5f       	subi	r17, 0xFF	; 255
     a2e:	81 2f       	mov	r24, r17
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <StudentCount>
     a36:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <StudentCount+0x1>
     a3a:	82 17       	cp	r24, r18
     a3c:	93 07       	cpc	r25, r19
     a3e:	0c f4       	brge	.+2      	; 0xa42 <handleSubmitCode+0x170>
     a40:	c3 cf       	rjmp	.-122    	; 0x9c8 <handleSubmitCode+0xf6>
     a42:	be 01       	movw	r22, r28
     a44:	6f 5f       	subi	r22, 0xFF	; 255
     a46:	7f 4f       	sbci	r23, 0xFF	; 255
     a48:	c9 01       	movw	r24, r18
     a4a:	88 0f       	add	r24, r24
     a4c:	99 1f       	adc	r25, r25
     a4e:	88 0f       	add	r24, r24
     a50:	99 1f       	adc	r25, r25
     a52:	88 0f       	add	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	4d db       	rcall	.-2406   	; 0xf2 <EEPROM_WriteString>
     a58:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <StudentCount>
     a5c:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <StudentCount+0x1>
     a60:	fc 01       	movw	r30, r24
     a62:	ee 0f       	add	r30, r30
     a64:	ff 1f       	adc	r31, r31
     a66:	ee 0f       	add	r30, r30
     a68:	ff 1f       	adc	r31, r31
     a6a:	e2 50       	subi	r30, 0x02	; 2
     a6c:	fe 4f       	sbci	r31, 0xFE	; 254
     a6e:	c0 82       	st	Z, r12
     a70:	d1 82       	std	Z+1, r13	; 0x01
     a72:	e2 82       	std	Z+2, r14	; 0x02
     a74:	f3 82       	std	Z+3, r15	; 0x03
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	90 93 fd 01 	sts	0x01FD, r25	; 0x8001fd <StudentCount+0x1>
     a7c:	80 93 fc 01 	sts	0x01FC, r24	; 0x8001fc <StudentCount>
     a80:	5a dc       	rcall	.-1868   	; 0x336 <LCD_Clear>
     a82:	4a eb       	ldi	r20, 0xBA	; 186
     a84:	51 e0       	ldi	r21, 0x01	; 1
     a86:	60 e0       	ldi	r22, 0x00	; 0
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	3c dc       	rcall	.-1928   	; 0x304 <LCD_String_xy>
     a8c:	2f ef       	ldi	r18, 0xFF	; 255
     a8e:	83 ed       	ldi	r24, 0xD3	; 211
     a90:	90 e3       	ldi	r25, 0x30	; 48
     a92:	21 50       	subi	r18, 0x01	; 1
     a94:	80 40       	sbci	r24, 0x00	; 0
     a96:	90 40       	sbci	r25, 0x00	; 0
     a98:	e1 f7       	brne	.-8      	; 0xa92 <handleSubmitCode+0x1c0>
     a9a:	00 c0       	rjmp	.+0      	; 0xa9c <handleSubmitCode+0x1ca>
     a9c:	00 00       	nop
     a9e:	14 c0       	rjmp	.+40     	; 0xac8 <handleSubmitCode+0x1f6>
     aa0:	4a dc       	rcall	.-1900   	; 0x336 <LCD_Clear>
     aa2:	49 ec       	ldi	r20, 0xC9	; 201
     aa4:	51 e0       	ldi	r21, 0x01	; 1
     aa6:	60 e0       	ldi	r22, 0x00	; 0
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	2c dc       	rcall	.-1960   	; 0x304 <LCD_String_xy>
     aac:	f7 da       	rcall	.-2578   	; 0x9c <buzzer_init>
     aae:	ef ef       	ldi	r30, 0xFF	; 255
     ab0:	f1 ee       	ldi	r31, 0xE1	; 225
     ab2:	24 e0       	ldi	r18, 0x04	; 4
     ab4:	e1 50       	subi	r30, 0x01	; 1
     ab6:	f0 40       	sbci	r31, 0x00	; 0
     ab8:	20 40       	sbci	r18, 0x00	; 0
     aba:	e1 f7       	brne	.-8      	; 0xab4 <handleSubmitCode+0x1e2>
     abc:	00 c0       	rjmp	.+0      	; 0xabe <handleSubmitCode+0x1ec>
     abe:	00 00       	nop
     ac0:	84 ef       	ldi	r24, 0xF4	; 244
     ac2:	91 e0       	ldi	r25, 0x01	; 1
     ac4:	f1 da       	rcall	.-2590   	; 0xa8 <small_beep>
     ac6:	ee da       	rcall	.-2596   	; 0xa4 <buzzer_stop>
     ac8:	62 96       	adiw	r28, 0x12	; 18
     aca:	0f b6       	in	r0, 0x3f	; 63
     acc:	f8 94       	cli
     ace:	de bf       	out	0x3e, r29	; 62
     ad0:	0f be       	out	0x3f, r0	; 63
     ad2:	cd bf       	out	0x3d, r28	; 61
     ad4:	df 91       	pop	r29
     ad6:	cf 91       	pop	r28
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	df 90       	pop	r13
     ae2:	cf 90       	pop	r12
     ae4:	bf 90       	pop	r11
     ae6:	7f 90       	pop	r7
     ae8:	6f 90       	pop	r6
     aea:	5f 90       	pop	r5
     aec:	4f 90       	pop	r4
     aee:	08 95       	ret

00000af0 <handleStudentManagement>:
		return -1;
	}
}

void handleStudentManagement(void)
{
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	cd b7       	in	r28, 0x3d	; 61
     afa:	de b7       	in	r29, 0x3e	; 62
     afc:	62 97       	sbiw	r28, 0x12	; 18
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	f8 94       	cli
     b02:	de bf       	out	0x3e, r29	; 62
     b04:	0f be       	out	0x3f, r0	; 63
     b06:	cd bf       	out	0x3d, r28	; 61
	char key;
	long int StudentNumber=0;
	LCD_String_xy(1, 0, NULL);
     b08:	40 e0       	ldi	r20, 0x00	; 0
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	60 e0       	ldi	r22, 0x00	; 0
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	f9 db       	rcall	.-2062   	; 0x304 <LCD_String_xy>
	char buffer[STUDENT_NUMBER_LENGTH+1];
	unsigned char index = 0;
     b12:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char chars = 0;
	while (chars < (STUDENT_NUMBER_LENGTH + 1))
     b14:	0b c0       	rjmp	.+22     	; 0xb2c <handleStudentManagement+0x3c>
	{
		key=scan_keypad();
		if(key!='o'){
			StudentNumber=StudentNumber*10 + (key-'0');
			buffer[index++] = key;
     b16:	01 e0       	ldi	r16, 0x01	; 1
     b18:	01 0f       	add	r16, r17
     b1a:	e1 e0       	ldi	r30, 0x01	; 1
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	ec 0f       	add	r30, r28
     b20:	fd 1f       	adc	r31, r29
     b22:	e1 0f       	add	r30, r17
     b24:	f1 1d       	adc	r31, r1
			LCD_Char(key);
     b26:	80 83       	st	Z, r24
	while (chars < (STUDENT_NUMBER_LENGTH + 1))
	{
		key=scan_keypad();
		if(key!='o'){
			StudentNumber=StudentNumber*10 + (key-'0');
			buffer[index++] = key;
     b28:	bb db       	rcall	.-2186   	; 0x2a0 <LCD_Char>
	char buffer[STUDENT_NUMBER_LENGTH+1];
	unsigned char index = 0;
	unsigned char chars = 0;
	while (chars < (STUDENT_NUMBER_LENGTH + 1))
	{
		key=scan_keypad();
     b2a:	10 2f       	mov	r17, r16
     b2c:	3c db       	rcall	.-2440   	; 0x1a6 <scan_keypad>
		if(key!='o'){
     b2e:	8f 36       	cpi	r24, 0x6F	; 111
     b30:	91 f7       	brne	.-28     	; 0xb16 <handleStudentManagement+0x26>
		}
		else{
			break;
		}
	}
	buffer[index] = '\0';
     b32:	fe 01       	movw	r30, r28
     b34:	e1 0f       	add	r30, r17
     b36:	f1 1d       	adc	r31, r1
     b38:	11 82       	std	Z+1, r1	; 0x01
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b3a:	2f ef       	ldi	r18, 0xFF	; 255
     b3c:	83 ec       	ldi	r24, 0xC3	; 195
     b3e:	99 e0       	ldi	r25, 0x09	; 9
     b40:	21 50       	subi	r18, 0x01	; 1
     b42:	80 40       	sbci	r24, 0x00	; 0
     b44:	90 40       	sbci	r25, 0x00	; 0
     b46:	e1 f7       	brne	.-8      	; 0xb40 <handleStudentManagement+0x50>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <handleStudentManagement+0x5a>
     b4a:	00 00       	nop
	_delay_ms(200);
	char temp[STUDENT_NUMBER_LENGTH+1];
	temp[STUDENT_NUMBER_LENGTH] = '\0';
     b4c:	1a 8a       	std	Y+18, r1	; 0x12
	for(unsigned char i = 0; i < StudentCount; i++)
     b4e:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <StudentCount>
     b52:	90 91 fd 01 	lds	r25, 0x01FD	; 0x8001fd <StudentCount+0x1>
     b56:	18 16       	cp	r1, r24
     b58:	19 06       	cpc	r1, r25
     b5a:	94 f5       	brge	.+100    	; 0xbc0 <handleStudentManagement+0xd0>
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	10 e0       	ldi	r17, 0x00	; 0
	{
		EEPROM_ReadString(i * STUDENT_NUMBER_LENGTH, temp, STUDENT_NUMBER_LENGTH);
     b62:	48 e0       	ldi	r20, 0x08	; 8
     b64:	50 e0       	ldi	r21, 0x00	; 0
     b66:	be 01       	movw	r22, r28
     b68:	66 5f       	subi	r22, 0xF6	; 246
     b6a:	7f 4f       	sbci	r23, 0xFF	; 255
     b6c:	88 0f       	add	r24, r24
     b6e:	99 1f       	adc	r25, r25
     b70:	88 0f       	add	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
     b78:	dd da       	rcall	.-2630   	; 0x134 <EEPROM_ReadString>
		if(areEqual(buffer, temp, STUDENT_NUMBER_LENGTH))
     b7a:	48 e0       	ldi	r20, 0x08	; 8
     b7c:	be 01       	movw	r22, r28
     b7e:	66 5f       	subi	r22, 0xF6	; 246
     b80:	7f 4f       	sbci	r23, 0xFF	; 255
     b82:	ce 01       	movw	r24, r28
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	83 de       	rcall	.-762    	; 0x88e <areEqual>
		{
			LCD_Clear();
     b88:	88 23       	and	r24, r24
			LCD_String_xy(0, 0, "Student Found!");
     b8a:	81 f0       	breq	.+32     	; 0xbac <handleStudentManagement+0xbc>
     b8c:	d4 db       	rcall	.-2136   	; 0x336 <LCD_Clear>
     b8e:	47 ed       	ldi	r20, 0xD7	; 215
     b90:	51 e0       	ldi	r21, 0x01	; 1
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	b6 db       	rcall	.-2196   	; 0x304 <LCD_String_xy>
     b98:	2f ef       	ldi	r18, 0xFF	; 255
     b9a:	89 e6       	ldi	r24, 0x69	; 105
     b9c:	98 e1       	ldi	r25, 0x18	; 24
     b9e:	21 50       	subi	r18, 0x01	; 1
     ba0:	80 40       	sbci	r24, 0x00	; 0
     ba2:	90 40       	sbci	r25, 0x00	; 0
     ba4:	e1 f7       	brne	.-8      	; 0xb9e <handleStudentManagement+0xae>
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <handleStudentManagement+0xb8>
     ba8:	00 00       	nop
	}
	buffer[index] = '\0';
	_delay_ms(200);
	char temp[STUDENT_NUMBER_LENGTH+1];
	temp[STUDENT_NUMBER_LENGTH] = '\0';
	for(unsigned char i = 0; i < StudentCount; i++)
     baa:	1e c0       	rjmp	.+60     	; 0xbe8 <handleStudentManagement+0xf8>
     bac:	1f 5f       	subi	r17, 0xFF	; 255
     bae:	81 2f       	mov	r24, r17
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <StudentCount>
     bb6:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <StudentCount+0x1>
			LCD_String_xy(0, 0, "Student Found!");
			_delay_ms(500);
			return;
		}
	}
	LCD_Clear();
     bba:	82 17       	cp	r24, r18
     bbc:	93 07       	cpc	r25, r19
	LCD_String_xy(0, 0, "Student");
     bbe:	8c f2       	brlt	.-94     	; 0xb62 <handleStudentManagement+0x72>
     bc0:	ba db       	rcall	.-2188   	; 0x336 <LCD_Clear>
     bc2:	46 ee       	ldi	r20, 0xE6	; 230
     bc4:	51 e0       	ldi	r21, 0x01	; 1
     bc6:	60 e0       	ldi	r22, 0x00	; 0
	LCD_String_xy(1, 0, "Not Found!");
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	9c db       	rcall	.-2248   	; 0x304 <LCD_String_xy>
     bcc:	4e ee       	ldi	r20, 0xEE	; 238
     bce:	51 e0       	ldi	r21, 0x01	; 1
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	97 db       	rcall	.-2258   	; 0x304 <LCD_String_xy>
     bd6:	2f ef       	ldi	r18, 0xFF	; 255
     bd8:	83 ed       	ldi	r24, 0xD3	; 211
     bda:	90 e3       	ldi	r25, 0x30	; 48
     bdc:	21 50       	subi	r18, 0x01	; 1
     bde:	80 40       	sbci	r24, 0x00	; 0
     be0:	90 40       	sbci	r25, 0x00	; 0
     be2:	e1 f7       	brne	.-8      	; 0xbdc <handleStudentManagement+0xec>
     be4:	00 c0       	rjmp	.+0      	; 0xbe6 <handleStudentManagement+0xf6>
	_delay_ms(1000);
	return;
}
     be6:	00 00       	nop
     be8:	62 96       	adiw	r28, 0x12	; 18
     bea:	0f b6       	in	r0, 0x3f	; 63
     bec:	f8 94       	cli
     bee:	de bf       	out	0x3e, r29	; 62
     bf0:	0f be       	out	0x3f, r0	; 63
     bf2:	cd bf       	out	0x3d, r28	; 61
     bf4:	df 91       	pop	r29
     bf6:	cf 91       	pop	r28
     bf8:	1f 91       	pop	r17
     bfa:	0f 91       	pop	r16
	}
	return 0;
}

void displayGuideMenu(void)
{
     bfc:	08 95       	ret

00000bfe <main>:
     bfe:	87 e6       	ldi	r24, 0x67	; 103
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	18 dc       	rcall	.-2000   	; 0x434 <USART_init>
     c04:	b3 db       	rcall	.-2202   	; 0x36c <HCSR04Init>
     c06:	5c db       	rcall	.-2376   	; 0x2c0 <LCD_Init>
     c08:	c9 da       	rcall	.-2670   	; 0x19c <keypad_init>
     c0a:	34 dc       	rcall	.-1944   	; 0x474 <displayGuideMenu>
     c0c:	cc da       	rcall	.-2664   	; 0x1a6 <scan_keypad>
     c0e:	3e dc       	rcall	.-1924   	; 0x48c <displayFirstMainMenu>
     c10:	c1 e0       	ldi	r28, 0x01	; 1
     c12:	d2 e0       	ldi	r29, 0x02	; 2
     c14:	03 e0       	ldi	r16, 0x03	; 3
     c16:	15 e0       	ldi	r17, 0x05	; 5
     c18:	c6 da       	rcall	.-2676   	; 0x1a6 <scan_keypad>
     c1a:	08 2e       	mov	r0, r24
     c1c:	00 0c       	add	r0, r0
     c1e:	99 0b       	sbc	r25, r25
     c20:	c0 97       	sbiw	r24, 0x30	; 48
     c22:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <choice+0x1>
     c26:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <choice>
     c2a:	e0 91 fb 01 	lds	r30, 0x01FB	; 0x8001fb <currentState>
     c2e:	4e 2f       	mov	r20, r30
     c30:	50 e0       	ldi	r21, 0x00	; 0
     c32:	47 30       	cpi	r20, 0x07	; 7
     c34:	51 05       	cpc	r21, r1
     c36:	80 f7       	brcc	.-32     	; 0xc18 <main+0x1a>
     c38:	fa 01       	movw	r30, r20
     c3a:	e6 5d       	subi	r30, 0xD6	; 214
     c3c:	ff 4f       	sbci	r31, 0xFF	; 255
     c3e:	70 c2       	rjmp	.+1248   	; 0x1120 <__tablejump2__>
     c40:	20 91 fa 01 	lds	r18, 0x01FA	; 0x8001fa <__data_end>
     c44:	21 30       	cpi	r18, 0x01	; 1
     c46:	f9 f0       	breq	.+62     	; 0xc86 <main+0x88>
     c48:	20 f0       	brcs	.+8      	; 0xc52 <main+0x54>
     c4a:	22 30       	cpi	r18, 0x02	; 2
     c4c:	09 f4       	brne	.+2      	; 0xc50 <main+0x52>
     c4e:	38 c0       	rjmp	.+112    	; 0xcc0 <main+0xc2>
     c50:	e3 cf       	rjmp	.-58     	; 0xc18 <main+0x1a>
     c52:	82 30       	cpi	r24, 0x02	; 2
     c54:	91 05       	cpc	r25, r1
     c56:	49 f0       	breq	.+18     	; 0xc6a <main+0x6c>
     c58:	89 30       	cpi	r24, 0x09	; 9
     c5a:	91 05       	cpc	r25, r1
     c5c:	81 f0       	breq	.+32     	; 0xc7e <main+0x80>
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	d9 f6       	brne	.-74     	; 0xc18 <main+0x1a>
     c62:	c0 93 fb 01 	sts	0x01FB, r28	; 0x8001fb <currentState>
     c66:	36 dc       	rcall	.-1940   	; 0x4d4 <displayAttendInitMenu>
     c68:	d7 cf       	rjmp	.-82     	; 0xc18 <main+0x1a>
     c6a:	d0 93 fb 01 	sts	0x01FB, r29	; 0x8001fb <currentState>
     c6e:	3e dc       	rcall	.-1924   	; 0x4ec <displayStudentManagementMenu>
     c70:	3f df       	rcall	.-386    	; 0xaf0 <handleStudentManagement>
     c72:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     c76:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     c7a:	08 dc       	rcall	.-2032   	; 0x48c <displayFirstMainMenu>
     c7c:	cd cf       	rjmp	.-102    	; 0xc18 <main+0x1a>
     c7e:	c0 93 fa 01 	sts	0x01FA, r28	; 0x8001fa <__data_end>
     c82:	10 dc       	rcall	.-2016   	; 0x4a4 <displaySecondMainMenu>
     c84:	c9 cf       	rjmp	.-110    	; 0xc18 <main+0x1a>
     c86:	84 30       	cpi	r24, 0x04	; 4
     c88:	91 05       	cpc	r25, r1
     c8a:	71 f0       	breq	.+28     	; 0xca8 <main+0xaa>
     c8c:	1c f4       	brge	.+6      	; 0xc94 <main+0x96>
     c8e:	03 97       	sbiw	r24, 0x03	; 3
     c90:	39 f0       	breq	.+14     	; 0xca0 <main+0xa2>
     c92:	c2 cf       	rjmp	.-124    	; 0xc18 <main+0x1a>
     c94:	87 30       	cpi	r24, 0x07	; 7
     c96:	91 05       	cpc	r25, r1
     c98:	59 f0       	breq	.+22     	; 0xcb0 <main+0xb2>
     c9a:	09 97       	sbiw	r24, 0x09	; 9
     c9c:	69 f0       	breq	.+26     	; 0xcb8 <main+0xba>
     c9e:	bc cf       	rjmp	.-136    	; 0xc18 <main+0x1a>
     ca0:	00 93 fb 01 	sts	0x01FB, r16	; 0x8001fb <currentState>
     ca4:	2a dc       	rcall	.-1964   	; 0x4fa <handleViewPresentStudents>
     ca6:	b8 cf       	rjmp	.-144    	; 0xc18 <main+0x1a>
     ca8:	84 e0       	ldi	r24, 0x04	; 4
     caa:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <currentState>
     cae:	af dc       	rcall	.-1698   	; 0x60e <handleTemperatureMonitor>
     cb0:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     cb4:	eb db       	rcall	.-2090   	; 0x48c <displayFirstMainMenu>
     cb6:	b0 cf       	rjmp	.-160    	; 0xc18 <main+0x1a>
     cb8:	d0 93 fa 01 	sts	0x01FA, r29	; 0x8001fa <__data_end>
     cbc:	ff db       	rcall	.-2050   	; 0x4bc <displayThirdMainMenu>
     cbe:	ac cf       	rjmp	.-168    	; 0xc18 <main+0x1a>
     cc0:	86 30       	cpi	r24, 0x06	; 6
     cc2:	91 05       	cpc	r25, r1
     cc4:	51 f0       	breq	.+20     	; 0xcda <main+0xdc>
     cc6:	87 30       	cpi	r24, 0x07	; 7
     cc8:	91 05       	cpc	r25, r1
     cca:	59 f0       	breq	.+22     	; 0xce2 <main+0xe4>
     ccc:	05 97       	sbiw	r24, 0x05	; 5
     cce:	09 f0       	breq	.+2      	; 0xcd2 <main+0xd4>
     cd0:	a3 cf       	rjmp	.-186    	; 0xc18 <main+0x1a>
     cd2:	10 93 fb 01 	sts	0x01FB, r17	; 0x8001fb <currentState>
     cd6:	0b dd       	rcall	.-1514   	; 0x6ee <handleRetrieveStudentData>
     cd8:	9f cf       	rjmp	.-194    	; 0xc18 <main+0x1a>
     cda:	86 e0       	ldi	r24, 0x06	; 6
     cdc:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <currentState>
     ce0:	5a dd       	rcall	.-1356   	; 0x796 <handleTrafficMonitor>
     ce2:	c0 93 fa 01 	sts	0x01FA, r28	; 0x8001fa <__data_end>
     ce6:	de db       	rcall	.-2116   	; 0x4a4 <displaySecondMainMenu>
     ce8:	97 cf       	rjmp	.-210    	; 0xc18 <main+0x1a>
     cea:	81 30       	cpi	r24, 0x01	; 1
     cec:	91 05       	cpc	r25, r1
     cee:	19 f0       	breq	.+6      	; 0xcf6 <main+0xf8>
     cf0:	02 97       	sbiw	r24, 0x02	; 2
     cf2:	31 f0       	breq	.+12     	; 0xd00 <main+0x102>
     cf4:	91 cf       	rjmp	.-222    	; 0xc18 <main+0x1a>
     cf6:	ed dd       	rcall	.-1062   	; 0x8d2 <handleSubmitCode>
     cf8:	c0 93 fb 01 	sts	0x01FB, r28	; 0x8001fb <currentState>
     cfc:	eb db       	rcall	.-2090   	; 0x4d4 <displayAttendInitMenu>
     cfe:	8c cf       	rjmp	.-232    	; 0xc18 <main+0x1a>
     d00:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d04:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     d08:	c1 db       	rcall	.-2174   	; 0x48c <displayFirstMainMenu>
     d0a:	86 cf       	rjmp	.-244    	; 0xc18 <main+0x1a>
     d0c:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d10:	83 cf       	rjmp	.-250    	; 0xc18 <main+0x1a>
     d12:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d16:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     d1a:	b8 db       	rcall	.-2192   	; 0x48c <displayFirstMainMenu>
     d1c:	7d cf       	rjmp	.-262    	; 0xc18 <main+0x1a>
     d1e:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d22:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     d26:	b2 db       	rcall	.-2204   	; 0x48c <displayFirstMainMenu>
     d28:	77 cf       	rjmp	.-274    	; 0xc18 <main+0x1a>
     d2a:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d2e:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     d32:	ac db       	rcall	.-2216   	; 0x48c <displayFirstMainMenu>
     d34:	71 cf       	rjmp	.-286    	; 0xc18 <main+0x1a>
     d36:	10 92 fb 01 	sts	0x01FB, r1	; 0x8001fb <currentState>
     d3a:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <__data_end>
     d3e:	a6 db       	rcall	.-2228   	; 0x48c <displayFirstMainMenu>
     d40:	6b cf       	rjmp	.-298    	; 0xc18 <main+0x1a>

00000d42 <__subsf3>:
     d42:	50 58       	subi	r21, 0x80	; 128

00000d44 <__addsf3>:
     d44:	bb 27       	eor	r27, r27
     d46:	aa 27       	eor	r26, r26
     d48:	0e d0       	rcall	.+28     	; 0xd66 <__addsf3x>
     d4a:	4d c1       	rjmp	.+666    	; 0xfe6 <__fp_round>
     d4c:	3e d1       	rcall	.+636    	; 0xfca <__fp_pscA>
     d4e:	30 f0       	brcs	.+12     	; 0xd5c <__addsf3+0x18>
     d50:	43 d1       	rcall	.+646    	; 0xfd8 <__fp_pscB>
     d52:	20 f0       	brcs	.+8      	; 0xd5c <__addsf3+0x18>
     d54:	31 f4       	brne	.+12     	; 0xd62 <__addsf3+0x1e>
     d56:	9f 3f       	cpi	r25, 0xFF	; 255
     d58:	11 f4       	brne	.+4      	; 0xd5e <__addsf3+0x1a>
     d5a:	1e f4       	brtc	.+6      	; 0xd62 <__addsf3+0x1e>
     d5c:	33 c1       	rjmp	.+614    	; 0xfc4 <__fp_nan>
     d5e:	0e f4       	brtc	.+2      	; 0xd62 <__addsf3+0x1e>
     d60:	e0 95       	com	r30
     d62:	e7 fb       	bst	r30, 7
     d64:	29 c1       	rjmp	.+594    	; 0xfb8 <__fp_inf>

00000d66 <__addsf3x>:
     d66:	e9 2f       	mov	r30, r25
     d68:	4f d1       	rcall	.+670    	; 0x1008 <__fp_split3>
     d6a:	80 f3       	brcs	.-32     	; 0xd4c <__addsf3+0x8>
     d6c:	ba 17       	cp	r27, r26
     d6e:	62 07       	cpc	r22, r18
     d70:	73 07       	cpc	r23, r19
     d72:	84 07       	cpc	r24, r20
     d74:	95 07       	cpc	r25, r21
     d76:	18 f0       	brcs	.+6      	; 0xd7e <__addsf3x+0x18>
     d78:	71 f4       	brne	.+28     	; 0xd96 <__addsf3x+0x30>
     d7a:	9e f5       	brtc	.+102    	; 0xde2 <__addsf3x+0x7c>
     d7c:	67 c1       	rjmp	.+718    	; 0x104c <__fp_zero>
     d7e:	0e f4       	brtc	.+2      	; 0xd82 <__addsf3x+0x1c>
     d80:	e0 95       	com	r30
     d82:	0b 2e       	mov	r0, r27
     d84:	ba 2f       	mov	r27, r26
     d86:	a0 2d       	mov	r26, r0
     d88:	0b 01       	movw	r0, r22
     d8a:	b9 01       	movw	r22, r18
     d8c:	90 01       	movw	r18, r0
     d8e:	0c 01       	movw	r0, r24
     d90:	ca 01       	movw	r24, r20
     d92:	a0 01       	movw	r20, r0
     d94:	11 24       	eor	r1, r1
     d96:	ff 27       	eor	r31, r31
     d98:	59 1b       	sub	r21, r25
     d9a:	99 f0       	breq	.+38     	; 0xdc2 <__addsf3x+0x5c>
     d9c:	59 3f       	cpi	r21, 0xF9	; 249
     d9e:	50 f4       	brcc	.+20     	; 0xdb4 <__addsf3x+0x4e>
     da0:	50 3e       	cpi	r21, 0xE0	; 224
     da2:	68 f1       	brcs	.+90     	; 0xdfe <__addsf3x+0x98>
     da4:	1a 16       	cp	r1, r26
     da6:	f0 40       	sbci	r31, 0x00	; 0
     da8:	a2 2f       	mov	r26, r18
     daa:	23 2f       	mov	r18, r19
     dac:	34 2f       	mov	r19, r20
     dae:	44 27       	eor	r20, r20
     db0:	58 5f       	subi	r21, 0xF8	; 248
     db2:	f3 cf       	rjmp	.-26     	; 0xd9a <__addsf3x+0x34>
     db4:	46 95       	lsr	r20
     db6:	37 95       	ror	r19
     db8:	27 95       	ror	r18
     dba:	a7 95       	ror	r26
     dbc:	f0 40       	sbci	r31, 0x00	; 0
     dbe:	53 95       	inc	r21
     dc0:	c9 f7       	brne	.-14     	; 0xdb4 <__addsf3x+0x4e>
     dc2:	7e f4       	brtc	.+30     	; 0xde2 <__addsf3x+0x7c>
     dc4:	1f 16       	cp	r1, r31
     dc6:	ba 0b       	sbc	r27, r26
     dc8:	62 0b       	sbc	r22, r18
     dca:	73 0b       	sbc	r23, r19
     dcc:	84 0b       	sbc	r24, r20
     dce:	ba f0       	brmi	.+46     	; 0xdfe <__addsf3x+0x98>
     dd0:	91 50       	subi	r25, 0x01	; 1
     dd2:	a1 f0       	breq	.+40     	; 0xdfc <__addsf3x+0x96>
     dd4:	ff 0f       	add	r31, r31
     dd6:	bb 1f       	adc	r27, r27
     dd8:	66 1f       	adc	r22, r22
     dda:	77 1f       	adc	r23, r23
     ddc:	88 1f       	adc	r24, r24
     dde:	c2 f7       	brpl	.-16     	; 0xdd0 <__addsf3x+0x6a>
     de0:	0e c0       	rjmp	.+28     	; 0xdfe <__addsf3x+0x98>
     de2:	ba 0f       	add	r27, r26
     de4:	62 1f       	adc	r22, r18
     de6:	73 1f       	adc	r23, r19
     de8:	84 1f       	adc	r24, r20
     dea:	48 f4       	brcc	.+18     	; 0xdfe <__addsf3x+0x98>
     dec:	87 95       	ror	r24
     dee:	77 95       	ror	r23
     df0:	67 95       	ror	r22
     df2:	b7 95       	ror	r27
     df4:	f7 95       	ror	r31
     df6:	9e 3f       	cpi	r25, 0xFE	; 254
     df8:	08 f0       	brcs	.+2      	; 0xdfc <__addsf3x+0x96>
     dfa:	b3 cf       	rjmp	.-154    	; 0xd62 <__addsf3+0x1e>
     dfc:	93 95       	inc	r25
     dfe:	88 0f       	add	r24, r24
     e00:	08 f0       	brcs	.+2      	; 0xe04 <__addsf3x+0x9e>
     e02:	99 27       	eor	r25, r25
     e04:	ee 0f       	add	r30, r30
     e06:	97 95       	ror	r25
     e08:	87 95       	ror	r24
     e0a:	08 95       	ret

00000e0c <__divsf3>:
     e0c:	0c d0       	rcall	.+24     	; 0xe26 <__divsf3x>
     e0e:	eb c0       	rjmp	.+470    	; 0xfe6 <__fp_round>
     e10:	e3 d0       	rcall	.+454    	; 0xfd8 <__fp_pscB>
     e12:	40 f0       	brcs	.+16     	; 0xe24 <__divsf3+0x18>
     e14:	da d0       	rcall	.+436    	; 0xfca <__fp_pscA>
     e16:	30 f0       	brcs	.+12     	; 0xe24 <__divsf3+0x18>
     e18:	21 f4       	brne	.+8      	; 0xe22 <__divsf3+0x16>
     e1a:	5f 3f       	cpi	r21, 0xFF	; 255
     e1c:	19 f0       	breq	.+6      	; 0xe24 <__divsf3+0x18>
     e1e:	cc c0       	rjmp	.+408    	; 0xfb8 <__fp_inf>
     e20:	51 11       	cpse	r21, r1
     e22:	15 c1       	rjmp	.+554    	; 0x104e <__fp_szero>
     e24:	cf c0       	rjmp	.+414    	; 0xfc4 <__fp_nan>

00000e26 <__divsf3x>:
     e26:	f0 d0       	rcall	.+480    	; 0x1008 <__fp_split3>
     e28:	98 f3       	brcs	.-26     	; 0xe10 <__divsf3+0x4>

00000e2a <__divsf3_pse>:
     e2a:	99 23       	and	r25, r25
     e2c:	c9 f3       	breq	.-14     	; 0xe20 <__divsf3+0x14>
     e2e:	55 23       	and	r21, r21
     e30:	b1 f3       	breq	.-20     	; 0xe1e <__divsf3+0x12>
     e32:	95 1b       	sub	r25, r21
     e34:	55 0b       	sbc	r21, r21
     e36:	bb 27       	eor	r27, r27
     e38:	aa 27       	eor	r26, r26
     e3a:	62 17       	cp	r22, r18
     e3c:	73 07       	cpc	r23, r19
     e3e:	84 07       	cpc	r24, r20
     e40:	38 f0       	brcs	.+14     	; 0xe50 <__divsf3_pse+0x26>
     e42:	9f 5f       	subi	r25, 0xFF	; 255
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	22 0f       	add	r18, r18
     e48:	33 1f       	adc	r19, r19
     e4a:	44 1f       	adc	r20, r20
     e4c:	aa 1f       	adc	r26, r26
     e4e:	a9 f3       	breq	.-22     	; 0xe3a <__divsf3_pse+0x10>
     e50:	33 d0       	rcall	.+102    	; 0xeb8 <__divsf3_pse+0x8e>
     e52:	0e 2e       	mov	r0, r30
     e54:	3a f0       	brmi	.+14     	; 0xe64 <__divsf3_pse+0x3a>
     e56:	e0 e8       	ldi	r30, 0x80	; 128
     e58:	30 d0       	rcall	.+96     	; 0xeba <__divsf3_pse+0x90>
     e5a:	91 50       	subi	r25, 0x01	; 1
     e5c:	50 40       	sbci	r21, 0x00	; 0
     e5e:	e6 95       	lsr	r30
     e60:	00 1c       	adc	r0, r0
     e62:	ca f7       	brpl	.-14     	; 0xe56 <__divsf3_pse+0x2c>
     e64:	29 d0       	rcall	.+82     	; 0xeb8 <__divsf3_pse+0x8e>
     e66:	fe 2f       	mov	r31, r30
     e68:	27 d0       	rcall	.+78     	; 0xeb8 <__divsf3_pse+0x8e>
     e6a:	66 0f       	add	r22, r22
     e6c:	77 1f       	adc	r23, r23
     e6e:	88 1f       	adc	r24, r24
     e70:	bb 1f       	adc	r27, r27
     e72:	26 17       	cp	r18, r22
     e74:	37 07       	cpc	r19, r23
     e76:	48 07       	cpc	r20, r24
     e78:	ab 07       	cpc	r26, r27
     e7a:	b0 e8       	ldi	r27, 0x80	; 128
     e7c:	09 f0       	breq	.+2      	; 0xe80 <__divsf3_pse+0x56>
     e7e:	bb 0b       	sbc	r27, r27
     e80:	80 2d       	mov	r24, r0
     e82:	bf 01       	movw	r22, r30
     e84:	ff 27       	eor	r31, r31
     e86:	93 58       	subi	r25, 0x83	; 131
     e88:	5f 4f       	sbci	r21, 0xFF	; 255
     e8a:	2a f0       	brmi	.+10     	; 0xe96 <__divsf3_pse+0x6c>
     e8c:	9e 3f       	cpi	r25, 0xFE	; 254
     e8e:	51 05       	cpc	r21, r1
     e90:	68 f0       	brcs	.+26     	; 0xeac <__divsf3_pse+0x82>
     e92:	92 c0       	rjmp	.+292    	; 0xfb8 <__fp_inf>
     e94:	dc c0       	rjmp	.+440    	; 0x104e <__fp_szero>
     e96:	5f 3f       	cpi	r21, 0xFF	; 255
     e98:	ec f3       	brlt	.-6      	; 0xe94 <__divsf3_pse+0x6a>
     e9a:	98 3e       	cpi	r25, 0xE8	; 232
     e9c:	dc f3       	brlt	.-10     	; 0xe94 <__divsf3_pse+0x6a>
     e9e:	86 95       	lsr	r24
     ea0:	77 95       	ror	r23
     ea2:	67 95       	ror	r22
     ea4:	b7 95       	ror	r27
     ea6:	f7 95       	ror	r31
     ea8:	9f 5f       	subi	r25, 0xFF	; 255
     eaa:	c9 f7       	brne	.-14     	; 0xe9e <__divsf3_pse+0x74>
     eac:	88 0f       	add	r24, r24
     eae:	91 1d       	adc	r25, r1
     eb0:	96 95       	lsr	r25
     eb2:	87 95       	ror	r24
     eb4:	97 f9       	bld	r25, 7
     eb6:	08 95       	ret
     eb8:	e1 e0       	ldi	r30, 0x01	; 1
     eba:	66 0f       	add	r22, r22
     ebc:	77 1f       	adc	r23, r23
     ebe:	88 1f       	adc	r24, r24
     ec0:	bb 1f       	adc	r27, r27
     ec2:	62 17       	cp	r22, r18
     ec4:	73 07       	cpc	r23, r19
     ec6:	84 07       	cpc	r24, r20
     ec8:	ba 07       	cpc	r27, r26
     eca:	20 f0       	brcs	.+8      	; 0xed4 <__divsf3_pse+0xaa>
     ecc:	62 1b       	sub	r22, r18
     ece:	73 0b       	sbc	r23, r19
     ed0:	84 0b       	sbc	r24, r20
     ed2:	ba 0b       	sbc	r27, r26
     ed4:	ee 1f       	adc	r30, r30
     ed6:	88 f7       	brcc	.-30     	; 0xeba <__divsf3_pse+0x90>
     ed8:	e0 95       	com	r30
     eda:	08 95       	ret

00000edc <__fixsfsi>:
     edc:	04 d0       	rcall	.+8      	; 0xee6 <__fixunssfsi>
     ede:	68 94       	set
     ee0:	b1 11       	cpse	r27, r1
     ee2:	b5 c0       	rjmp	.+362    	; 0x104e <__fp_szero>
     ee4:	08 95       	ret

00000ee6 <__fixunssfsi>:
     ee6:	98 d0       	rcall	.+304    	; 0x1018 <__fp_splitA>
     ee8:	88 f0       	brcs	.+34     	; 0xf0c <__fixunssfsi+0x26>
     eea:	9f 57       	subi	r25, 0x7F	; 127
     eec:	90 f0       	brcs	.+36     	; 0xf12 <__fixunssfsi+0x2c>
     eee:	b9 2f       	mov	r27, r25
     ef0:	99 27       	eor	r25, r25
     ef2:	b7 51       	subi	r27, 0x17	; 23
     ef4:	a0 f0       	brcs	.+40     	; 0xf1e <__fixunssfsi+0x38>
     ef6:	d1 f0       	breq	.+52     	; 0xf2c <__fixunssfsi+0x46>
     ef8:	66 0f       	add	r22, r22
     efa:	77 1f       	adc	r23, r23
     efc:	88 1f       	adc	r24, r24
     efe:	99 1f       	adc	r25, r25
     f00:	1a f0       	brmi	.+6      	; 0xf08 <__fixunssfsi+0x22>
     f02:	ba 95       	dec	r27
     f04:	c9 f7       	brne	.-14     	; 0xef8 <__fixunssfsi+0x12>
     f06:	12 c0       	rjmp	.+36     	; 0xf2c <__fixunssfsi+0x46>
     f08:	b1 30       	cpi	r27, 0x01	; 1
     f0a:	81 f0       	breq	.+32     	; 0xf2c <__fixunssfsi+0x46>
     f0c:	9f d0       	rcall	.+318    	; 0x104c <__fp_zero>
     f0e:	b1 e0       	ldi	r27, 0x01	; 1
     f10:	08 95       	ret
     f12:	9c c0       	rjmp	.+312    	; 0x104c <__fp_zero>
     f14:	67 2f       	mov	r22, r23
     f16:	78 2f       	mov	r23, r24
     f18:	88 27       	eor	r24, r24
     f1a:	b8 5f       	subi	r27, 0xF8	; 248
     f1c:	39 f0       	breq	.+14     	; 0xf2c <__fixunssfsi+0x46>
     f1e:	b9 3f       	cpi	r27, 0xF9	; 249
     f20:	cc f3       	brlt	.-14     	; 0xf14 <__fixunssfsi+0x2e>
     f22:	86 95       	lsr	r24
     f24:	77 95       	ror	r23
     f26:	67 95       	ror	r22
     f28:	b3 95       	inc	r27
     f2a:	d9 f7       	brne	.-10     	; 0xf22 <__fixunssfsi+0x3c>
     f2c:	3e f4       	brtc	.+14     	; 0xf3c <__fixunssfsi+0x56>
     f2e:	90 95       	com	r25
     f30:	80 95       	com	r24
     f32:	70 95       	com	r23
     f34:	61 95       	neg	r22
     f36:	7f 4f       	sbci	r23, 0xFF	; 255
     f38:	8f 4f       	sbci	r24, 0xFF	; 255
     f3a:	9f 4f       	sbci	r25, 0xFF	; 255
     f3c:	08 95       	ret

00000f3e <__floatunsisf>:
     f3e:	e8 94       	clt
     f40:	09 c0       	rjmp	.+18     	; 0xf54 <__floatsisf+0x12>

00000f42 <__floatsisf>:
     f42:	97 fb       	bst	r25, 7
     f44:	3e f4       	brtc	.+14     	; 0xf54 <__floatsisf+0x12>
     f46:	90 95       	com	r25
     f48:	80 95       	com	r24
     f4a:	70 95       	com	r23
     f4c:	61 95       	neg	r22
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	99 23       	and	r25, r25
     f56:	a9 f0       	breq	.+42     	; 0xf82 <__floatsisf+0x40>
     f58:	f9 2f       	mov	r31, r25
     f5a:	96 e9       	ldi	r25, 0x96	; 150
     f5c:	bb 27       	eor	r27, r27
     f5e:	93 95       	inc	r25
     f60:	f6 95       	lsr	r31
     f62:	87 95       	ror	r24
     f64:	77 95       	ror	r23
     f66:	67 95       	ror	r22
     f68:	b7 95       	ror	r27
     f6a:	f1 11       	cpse	r31, r1
     f6c:	f8 cf       	rjmp	.-16     	; 0xf5e <__floatsisf+0x1c>
     f6e:	fa f4       	brpl	.+62     	; 0xfae <__floatsisf+0x6c>
     f70:	bb 0f       	add	r27, r27
     f72:	11 f4       	brne	.+4      	; 0xf78 <__floatsisf+0x36>
     f74:	60 ff       	sbrs	r22, 0
     f76:	1b c0       	rjmp	.+54     	; 0xfae <__floatsisf+0x6c>
     f78:	6f 5f       	subi	r22, 0xFF	; 255
     f7a:	7f 4f       	sbci	r23, 0xFF	; 255
     f7c:	8f 4f       	sbci	r24, 0xFF	; 255
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	16 c0       	rjmp	.+44     	; 0xfae <__floatsisf+0x6c>
     f82:	88 23       	and	r24, r24
     f84:	11 f0       	breq	.+4      	; 0xf8a <__floatsisf+0x48>
     f86:	96 e9       	ldi	r25, 0x96	; 150
     f88:	11 c0       	rjmp	.+34     	; 0xfac <__floatsisf+0x6a>
     f8a:	77 23       	and	r23, r23
     f8c:	21 f0       	breq	.+8      	; 0xf96 <__floatsisf+0x54>
     f8e:	9e e8       	ldi	r25, 0x8E	; 142
     f90:	87 2f       	mov	r24, r23
     f92:	76 2f       	mov	r23, r22
     f94:	05 c0       	rjmp	.+10     	; 0xfa0 <__floatsisf+0x5e>
     f96:	66 23       	and	r22, r22
     f98:	71 f0       	breq	.+28     	; 0xfb6 <__floatsisf+0x74>
     f9a:	96 e8       	ldi	r25, 0x86	; 134
     f9c:	86 2f       	mov	r24, r22
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	2a f0       	brmi	.+10     	; 0xfae <__floatsisf+0x6c>
     fa4:	9a 95       	dec	r25
     fa6:	66 0f       	add	r22, r22
     fa8:	77 1f       	adc	r23, r23
     faa:	88 1f       	adc	r24, r24
     fac:	da f7       	brpl	.-10     	; 0xfa4 <__floatsisf+0x62>
     fae:	88 0f       	add	r24, r24
     fb0:	96 95       	lsr	r25
     fb2:	87 95       	ror	r24
     fb4:	97 f9       	bld	r25, 7
     fb6:	08 95       	ret

00000fb8 <__fp_inf>:
     fb8:	97 f9       	bld	r25, 7
     fba:	9f 67       	ori	r25, 0x7F	; 127
     fbc:	80 e8       	ldi	r24, 0x80	; 128
     fbe:	70 e0       	ldi	r23, 0x00	; 0
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	08 95       	ret

00000fc4 <__fp_nan>:
     fc4:	9f ef       	ldi	r25, 0xFF	; 255
     fc6:	80 ec       	ldi	r24, 0xC0	; 192
     fc8:	08 95       	ret

00000fca <__fp_pscA>:
     fca:	00 24       	eor	r0, r0
     fcc:	0a 94       	dec	r0
     fce:	16 16       	cp	r1, r22
     fd0:	17 06       	cpc	r1, r23
     fd2:	18 06       	cpc	r1, r24
     fd4:	09 06       	cpc	r0, r25
     fd6:	08 95       	ret

00000fd8 <__fp_pscB>:
     fd8:	00 24       	eor	r0, r0
     fda:	0a 94       	dec	r0
     fdc:	12 16       	cp	r1, r18
     fde:	13 06       	cpc	r1, r19
     fe0:	14 06       	cpc	r1, r20
     fe2:	05 06       	cpc	r0, r21
     fe4:	08 95       	ret

00000fe6 <__fp_round>:
     fe6:	09 2e       	mov	r0, r25
     fe8:	03 94       	inc	r0
     fea:	00 0c       	add	r0, r0
     fec:	11 f4       	brne	.+4      	; 0xff2 <__fp_round+0xc>
     fee:	88 23       	and	r24, r24
     ff0:	52 f0       	brmi	.+20     	; 0x1006 <__fp_round+0x20>
     ff2:	bb 0f       	add	r27, r27
     ff4:	40 f4       	brcc	.+16     	; 0x1006 <__fp_round+0x20>
     ff6:	bf 2b       	or	r27, r31
     ff8:	11 f4       	brne	.+4      	; 0xffe <__fp_round+0x18>
     ffa:	60 ff       	sbrs	r22, 0
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <__fp_round+0x20>
     ffe:	6f 5f       	subi	r22, 0xFF	; 255
    1000:	7f 4f       	sbci	r23, 0xFF	; 255
    1002:	8f 4f       	sbci	r24, 0xFF	; 255
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	08 95       	ret

00001008 <__fp_split3>:
    1008:	57 fd       	sbrc	r21, 7
    100a:	90 58       	subi	r25, 0x80	; 128
    100c:	44 0f       	add	r20, r20
    100e:	55 1f       	adc	r21, r21
    1010:	59 f0       	breq	.+22     	; 0x1028 <__fp_splitA+0x10>
    1012:	5f 3f       	cpi	r21, 0xFF	; 255
    1014:	71 f0       	breq	.+28     	; 0x1032 <__fp_splitA+0x1a>
    1016:	47 95       	ror	r20

00001018 <__fp_splitA>:
    1018:	88 0f       	add	r24, r24
    101a:	97 fb       	bst	r25, 7
    101c:	99 1f       	adc	r25, r25
    101e:	61 f0       	breq	.+24     	; 0x1038 <__fp_splitA+0x20>
    1020:	9f 3f       	cpi	r25, 0xFF	; 255
    1022:	79 f0       	breq	.+30     	; 0x1042 <__fp_splitA+0x2a>
    1024:	87 95       	ror	r24
    1026:	08 95       	ret
    1028:	12 16       	cp	r1, r18
    102a:	13 06       	cpc	r1, r19
    102c:	14 06       	cpc	r1, r20
    102e:	55 1f       	adc	r21, r21
    1030:	f2 cf       	rjmp	.-28     	; 0x1016 <__fp_split3+0xe>
    1032:	46 95       	lsr	r20
    1034:	f1 df       	rcall	.-30     	; 0x1018 <__fp_splitA>
    1036:	08 c0       	rjmp	.+16     	; 0x1048 <__fp_splitA+0x30>
    1038:	16 16       	cp	r1, r22
    103a:	17 06       	cpc	r1, r23
    103c:	18 06       	cpc	r1, r24
    103e:	99 1f       	adc	r25, r25
    1040:	f1 cf       	rjmp	.-30     	; 0x1024 <__fp_splitA+0xc>
    1042:	86 95       	lsr	r24
    1044:	71 05       	cpc	r23, r1
    1046:	61 05       	cpc	r22, r1
    1048:	08 94       	sec
    104a:	08 95       	ret

0000104c <__fp_zero>:
    104c:	e8 94       	clt

0000104e <__fp_szero>:
    104e:	bb 27       	eor	r27, r27
    1050:	66 27       	eor	r22, r22
    1052:	77 27       	eor	r23, r23
    1054:	cb 01       	movw	r24, r22
    1056:	97 f9       	bld	r25, 7
    1058:	08 95       	ret

0000105a <__mulsf3>:
    105a:	0b d0       	rcall	.+22     	; 0x1072 <__mulsf3x>
    105c:	c4 cf       	rjmp	.-120    	; 0xfe6 <__fp_round>
    105e:	b5 df       	rcall	.-150    	; 0xfca <__fp_pscA>
    1060:	28 f0       	brcs	.+10     	; 0x106c <__mulsf3+0x12>
    1062:	ba df       	rcall	.-140    	; 0xfd8 <__fp_pscB>
    1064:	18 f0       	brcs	.+6      	; 0x106c <__mulsf3+0x12>
    1066:	95 23       	and	r25, r21
    1068:	09 f0       	breq	.+2      	; 0x106c <__mulsf3+0x12>
    106a:	a6 cf       	rjmp	.-180    	; 0xfb8 <__fp_inf>
    106c:	ab cf       	rjmp	.-170    	; 0xfc4 <__fp_nan>
    106e:	11 24       	eor	r1, r1
    1070:	ee cf       	rjmp	.-36     	; 0x104e <__fp_szero>

00001072 <__mulsf3x>:
    1072:	ca df       	rcall	.-108    	; 0x1008 <__fp_split3>
    1074:	a0 f3       	brcs	.-24     	; 0x105e <__mulsf3+0x4>

00001076 <__mulsf3_pse>:
    1076:	95 9f       	mul	r25, r21
    1078:	d1 f3       	breq	.-12     	; 0x106e <__mulsf3+0x14>
    107a:	95 0f       	add	r25, r21
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	55 1f       	adc	r21, r21
    1080:	62 9f       	mul	r22, r18
    1082:	f0 01       	movw	r30, r0
    1084:	72 9f       	mul	r23, r18
    1086:	bb 27       	eor	r27, r27
    1088:	f0 0d       	add	r31, r0
    108a:	b1 1d       	adc	r27, r1
    108c:	63 9f       	mul	r22, r19
    108e:	aa 27       	eor	r26, r26
    1090:	f0 0d       	add	r31, r0
    1092:	b1 1d       	adc	r27, r1
    1094:	aa 1f       	adc	r26, r26
    1096:	64 9f       	mul	r22, r20
    1098:	66 27       	eor	r22, r22
    109a:	b0 0d       	add	r27, r0
    109c:	a1 1d       	adc	r26, r1
    109e:	66 1f       	adc	r22, r22
    10a0:	82 9f       	mul	r24, r18
    10a2:	22 27       	eor	r18, r18
    10a4:	b0 0d       	add	r27, r0
    10a6:	a1 1d       	adc	r26, r1
    10a8:	62 1f       	adc	r22, r18
    10aa:	73 9f       	mul	r23, r19
    10ac:	b0 0d       	add	r27, r0
    10ae:	a1 1d       	adc	r26, r1
    10b0:	62 1f       	adc	r22, r18
    10b2:	83 9f       	mul	r24, r19
    10b4:	a0 0d       	add	r26, r0
    10b6:	61 1d       	adc	r22, r1
    10b8:	22 1f       	adc	r18, r18
    10ba:	74 9f       	mul	r23, r20
    10bc:	33 27       	eor	r19, r19
    10be:	a0 0d       	add	r26, r0
    10c0:	61 1d       	adc	r22, r1
    10c2:	23 1f       	adc	r18, r19
    10c4:	84 9f       	mul	r24, r20
    10c6:	60 0d       	add	r22, r0
    10c8:	21 1d       	adc	r18, r1
    10ca:	82 2f       	mov	r24, r18
    10cc:	76 2f       	mov	r23, r22
    10ce:	6a 2f       	mov	r22, r26
    10d0:	11 24       	eor	r1, r1
    10d2:	9f 57       	subi	r25, 0x7F	; 127
    10d4:	50 40       	sbci	r21, 0x00	; 0
    10d6:	8a f0       	brmi	.+34     	; 0x10fa <__mulsf3_pse+0x84>
    10d8:	e1 f0       	breq	.+56     	; 0x1112 <__mulsf3_pse+0x9c>
    10da:	88 23       	and	r24, r24
    10dc:	4a f0       	brmi	.+18     	; 0x10f0 <__mulsf3_pse+0x7a>
    10de:	ee 0f       	add	r30, r30
    10e0:	ff 1f       	adc	r31, r31
    10e2:	bb 1f       	adc	r27, r27
    10e4:	66 1f       	adc	r22, r22
    10e6:	77 1f       	adc	r23, r23
    10e8:	88 1f       	adc	r24, r24
    10ea:	91 50       	subi	r25, 0x01	; 1
    10ec:	50 40       	sbci	r21, 0x00	; 0
    10ee:	a9 f7       	brne	.-22     	; 0x10da <__mulsf3_pse+0x64>
    10f0:	9e 3f       	cpi	r25, 0xFE	; 254
    10f2:	51 05       	cpc	r21, r1
    10f4:	70 f0       	brcs	.+28     	; 0x1112 <__mulsf3_pse+0x9c>
    10f6:	60 cf       	rjmp	.-320    	; 0xfb8 <__fp_inf>
    10f8:	aa cf       	rjmp	.-172    	; 0x104e <__fp_szero>
    10fa:	5f 3f       	cpi	r21, 0xFF	; 255
    10fc:	ec f3       	brlt	.-6      	; 0x10f8 <__mulsf3_pse+0x82>
    10fe:	98 3e       	cpi	r25, 0xE8	; 232
    1100:	dc f3       	brlt	.-10     	; 0x10f8 <__mulsf3_pse+0x82>
    1102:	86 95       	lsr	r24
    1104:	77 95       	ror	r23
    1106:	67 95       	ror	r22
    1108:	b7 95       	ror	r27
    110a:	f7 95       	ror	r31
    110c:	e7 95       	ror	r30
    110e:	9f 5f       	subi	r25, 0xFF	; 255
    1110:	c1 f7       	brne	.-16     	; 0x1102 <__mulsf3_pse+0x8c>
    1112:	fe 2b       	or	r31, r30
    1114:	88 0f       	add	r24, r24
    1116:	91 1d       	adc	r25, r1
    1118:	96 95       	lsr	r25
    111a:	87 95       	ror	r24
    111c:	97 f9       	bld	r25, 7
    111e:	08 95       	ret

00001120 <__tablejump2__>:
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	05 90       	lpm	r0, Z+
    1126:	f4 91       	lpm	r31, Z
    1128:	e0 2d       	mov	r30, r0
    112a:	09 94       	ijmp

0000112c <sprintf>:
    112c:	ae e0       	ldi	r26, 0x0E	; 14
    112e:	b0 e0       	ldi	r27, 0x00	; 0
    1130:	eb e9       	ldi	r30, 0x9B	; 155
    1132:	f8 e0       	ldi	r31, 0x08	; 8
    1134:	aa c2       	rjmp	.+1364   	; 0x168a <__prologue_saves__+0x1c>
    1136:	0d 89       	ldd	r16, Y+21	; 0x15
    1138:	1e 89       	ldd	r17, Y+22	; 0x16
    113a:	86 e0       	ldi	r24, 0x06	; 6
    113c:	8c 83       	std	Y+4, r24	; 0x04
    113e:	1a 83       	std	Y+2, r17	; 0x02
    1140:	09 83       	std	Y+1, r16	; 0x01
    1142:	8f ef       	ldi	r24, 0xFF	; 255
    1144:	9f e7       	ldi	r25, 0x7F	; 127
    1146:	9e 83       	std	Y+6, r25	; 0x06
    1148:	8d 83       	std	Y+5, r24	; 0x05
    114a:	ae 01       	movw	r20, r28
    114c:	47 5e       	subi	r20, 0xE7	; 231
    114e:	5f 4f       	sbci	r21, 0xFF	; 255
    1150:	6f 89       	ldd	r22, Y+23	; 0x17
    1152:	78 8d       	ldd	r23, Y+24	; 0x18
    1154:	ce 01       	movw	r24, r28
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	08 d0       	rcall	.+16     	; 0x116a <vfprintf>
    115a:	ef 81       	ldd	r30, Y+7	; 0x07
    115c:	f8 85       	ldd	r31, Y+8	; 0x08
    115e:	e0 0f       	add	r30, r16
    1160:	f1 1f       	adc	r31, r17
    1162:	10 82       	st	Z, r1
    1164:	2e 96       	adiw	r28, 0x0e	; 14
    1166:	e4 e0       	ldi	r30, 0x04	; 4
    1168:	ac c2       	rjmp	.+1368   	; 0x16c2 <__epilogue_restores__+0x1c>

0000116a <vfprintf>:
    116a:	ab e0       	ldi	r26, 0x0B	; 11
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	ea eb       	ldi	r30, 0xBA	; 186
    1170:	f8 e0       	ldi	r31, 0x08	; 8
    1172:	7d c2       	rjmp	.+1274   	; 0x166e <__prologue_saves__>
    1174:	6c 01       	movw	r12, r24
    1176:	7b 01       	movw	r14, r22
    1178:	8a 01       	movw	r16, r20
    117a:	fc 01       	movw	r30, r24
    117c:	17 82       	std	Z+7, r1	; 0x07
    117e:	16 82       	std	Z+6, r1	; 0x06
    1180:	83 81       	ldd	r24, Z+3	; 0x03
    1182:	81 ff       	sbrs	r24, 1
    1184:	bf c1       	rjmp	.+894    	; 0x1504 <vfprintf+0x39a>
    1186:	ce 01       	movw	r24, r28
    1188:	01 96       	adiw	r24, 0x01	; 1
    118a:	3c 01       	movw	r6, r24
    118c:	f6 01       	movw	r30, r12
    118e:	93 81       	ldd	r25, Z+3	; 0x03
    1190:	f7 01       	movw	r30, r14
    1192:	93 fd       	sbrc	r25, 3
    1194:	85 91       	lpm	r24, Z+
    1196:	93 ff       	sbrs	r25, 3
    1198:	81 91       	ld	r24, Z+
    119a:	7f 01       	movw	r14, r30
    119c:	88 23       	and	r24, r24
    119e:	09 f4       	brne	.+2      	; 0x11a2 <vfprintf+0x38>
    11a0:	ad c1       	rjmp	.+858    	; 0x14fc <vfprintf+0x392>
    11a2:	85 32       	cpi	r24, 0x25	; 37
    11a4:	39 f4       	brne	.+14     	; 0x11b4 <vfprintf+0x4a>
    11a6:	93 fd       	sbrc	r25, 3
    11a8:	85 91       	lpm	r24, Z+
    11aa:	93 ff       	sbrs	r25, 3
    11ac:	81 91       	ld	r24, Z+
    11ae:	7f 01       	movw	r14, r30
    11b0:	85 32       	cpi	r24, 0x25	; 37
    11b2:	21 f4       	brne	.+8      	; 0x11bc <vfprintf+0x52>
    11b4:	b6 01       	movw	r22, r12
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	c0 d1       	rcall	.+896    	; 0x153a <fputc>
    11ba:	e8 cf       	rjmp	.-48     	; 0x118c <vfprintf+0x22>
    11bc:	91 2c       	mov	r9, r1
    11be:	21 2c       	mov	r2, r1
    11c0:	31 2c       	mov	r3, r1
    11c2:	ff e1       	ldi	r31, 0x1F	; 31
    11c4:	f3 15       	cp	r31, r3
    11c6:	d8 f0       	brcs	.+54     	; 0x11fe <vfprintf+0x94>
    11c8:	8b 32       	cpi	r24, 0x2B	; 43
    11ca:	79 f0       	breq	.+30     	; 0x11ea <vfprintf+0x80>
    11cc:	38 f4       	brcc	.+14     	; 0x11dc <vfprintf+0x72>
    11ce:	80 32       	cpi	r24, 0x20	; 32
    11d0:	79 f0       	breq	.+30     	; 0x11f0 <vfprintf+0x86>
    11d2:	83 32       	cpi	r24, 0x23	; 35
    11d4:	a1 f4       	brne	.+40     	; 0x11fe <vfprintf+0x94>
    11d6:	23 2d       	mov	r18, r3
    11d8:	20 61       	ori	r18, 0x10	; 16
    11da:	1d c0       	rjmp	.+58     	; 0x1216 <vfprintf+0xac>
    11dc:	8d 32       	cpi	r24, 0x2D	; 45
    11de:	61 f0       	breq	.+24     	; 0x11f8 <vfprintf+0x8e>
    11e0:	80 33       	cpi	r24, 0x30	; 48
    11e2:	69 f4       	brne	.+26     	; 0x11fe <vfprintf+0x94>
    11e4:	23 2d       	mov	r18, r3
    11e6:	21 60       	ori	r18, 0x01	; 1
    11e8:	16 c0       	rjmp	.+44     	; 0x1216 <vfprintf+0xac>
    11ea:	83 2d       	mov	r24, r3
    11ec:	82 60       	ori	r24, 0x02	; 2
    11ee:	38 2e       	mov	r3, r24
    11f0:	e3 2d       	mov	r30, r3
    11f2:	e4 60       	ori	r30, 0x04	; 4
    11f4:	3e 2e       	mov	r3, r30
    11f6:	2a c0       	rjmp	.+84     	; 0x124c <vfprintf+0xe2>
    11f8:	f3 2d       	mov	r31, r3
    11fa:	f8 60       	ori	r31, 0x08	; 8
    11fc:	1d c0       	rjmp	.+58     	; 0x1238 <vfprintf+0xce>
    11fe:	37 fc       	sbrc	r3, 7
    1200:	2d c0       	rjmp	.+90     	; 0x125c <vfprintf+0xf2>
    1202:	20 ed       	ldi	r18, 0xD0	; 208
    1204:	28 0f       	add	r18, r24
    1206:	2a 30       	cpi	r18, 0x0A	; 10
    1208:	40 f0       	brcs	.+16     	; 0x121a <vfprintf+0xb0>
    120a:	8e 32       	cpi	r24, 0x2E	; 46
    120c:	b9 f4       	brne	.+46     	; 0x123c <vfprintf+0xd2>
    120e:	36 fc       	sbrc	r3, 6
    1210:	75 c1       	rjmp	.+746    	; 0x14fc <vfprintf+0x392>
    1212:	23 2d       	mov	r18, r3
    1214:	20 64       	ori	r18, 0x40	; 64
    1216:	32 2e       	mov	r3, r18
    1218:	19 c0       	rjmp	.+50     	; 0x124c <vfprintf+0xe2>
    121a:	36 fe       	sbrs	r3, 6
    121c:	06 c0       	rjmp	.+12     	; 0x122a <vfprintf+0xc0>
    121e:	8a e0       	ldi	r24, 0x0A	; 10
    1220:	98 9e       	mul	r9, r24
    1222:	20 0d       	add	r18, r0
    1224:	11 24       	eor	r1, r1
    1226:	92 2e       	mov	r9, r18
    1228:	11 c0       	rjmp	.+34     	; 0x124c <vfprintf+0xe2>
    122a:	ea e0       	ldi	r30, 0x0A	; 10
    122c:	2e 9e       	mul	r2, r30
    122e:	20 0d       	add	r18, r0
    1230:	11 24       	eor	r1, r1
    1232:	22 2e       	mov	r2, r18
    1234:	f3 2d       	mov	r31, r3
    1236:	f0 62       	ori	r31, 0x20	; 32
    1238:	3f 2e       	mov	r3, r31
    123a:	08 c0       	rjmp	.+16     	; 0x124c <vfprintf+0xe2>
    123c:	8c 36       	cpi	r24, 0x6C	; 108
    123e:	21 f4       	brne	.+8      	; 0x1248 <vfprintf+0xde>
    1240:	83 2d       	mov	r24, r3
    1242:	80 68       	ori	r24, 0x80	; 128
    1244:	38 2e       	mov	r3, r24
    1246:	02 c0       	rjmp	.+4      	; 0x124c <vfprintf+0xe2>
    1248:	88 36       	cpi	r24, 0x68	; 104
    124a:	41 f4       	brne	.+16     	; 0x125c <vfprintf+0xf2>
    124c:	f7 01       	movw	r30, r14
    124e:	93 fd       	sbrc	r25, 3
    1250:	85 91       	lpm	r24, Z+
    1252:	93 ff       	sbrs	r25, 3
    1254:	81 91       	ld	r24, Z+
    1256:	7f 01       	movw	r14, r30
    1258:	81 11       	cpse	r24, r1
    125a:	b3 cf       	rjmp	.-154    	; 0x11c2 <vfprintf+0x58>
    125c:	98 2f       	mov	r25, r24
    125e:	9f 7d       	andi	r25, 0xDF	; 223
    1260:	95 54       	subi	r25, 0x45	; 69
    1262:	93 30       	cpi	r25, 0x03	; 3
    1264:	28 f4       	brcc	.+10     	; 0x1270 <vfprintf+0x106>
    1266:	0c 5f       	subi	r16, 0xFC	; 252
    1268:	1f 4f       	sbci	r17, 0xFF	; 255
    126a:	9f e3       	ldi	r25, 0x3F	; 63
    126c:	99 83       	std	Y+1, r25	; 0x01
    126e:	0d c0       	rjmp	.+26     	; 0x128a <vfprintf+0x120>
    1270:	83 36       	cpi	r24, 0x63	; 99
    1272:	31 f0       	breq	.+12     	; 0x1280 <vfprintf+0x116>
    1274:	83 37       	cpi	r24, 0x73	; 115
    1276:	71 f0       	breq	.+28     	; 0x1294 <vfprintf+0x12a>
    1278:	83 35       	cpi	r24, 0x53	; 83
    127a:	09 f0       	breq	.+2      	; 0x127e <vfprintf+0x114>
    127c:	55 c0       	rjmp	.+170    	; 0x1328 <vfprintf+0x1be>
    127e:	20 c0       	rjmp	.+64     	; 0x12c0 <vfprintf+0x156>
    1280:	f8 01       	movw	r30, r16
    1282:	80 81       	ld	r24, Z
    1284:	89 83       	std	Y+1, r24	; 0x01
    1286:	0e 5f       	subi	r16, 0xFE	; 254
    1288:	1f 4f       	sbci	r17, 0xFF	; 255
    128a:	88 24       	eor	r8, r8
    128c:	83 94       	inc	r8
    128e:	91 2c       	mov	r9, r1
    1290:	53 01       	movw	r10, r6
    1292:	12 c0       	rjmp	.+36     	; 0x12b8 <vfprintf+0x14e>
    1294:	28 01       	movw	r4, r16
    1296:	f2 e0       	ldi	r31, 0x02	; 2
    1298:	4f 0e       	add	r4, r31
    129a:	51 1c       	adc	r5, r1
    129c:	f8 01       	movw	r30, r16
    129e:	a0 80       	ld	r10, Z
    12a0:	b1 80       	ldd	r11, Z+1	; 0x01
    12a2:	36 fe       	sbrs	r3, 6
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <vfprintf+0x142>
    12a6:	69 2d       	mov	r22, r9
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfprintf+0x146>
    12ac:	6f ef       	ldi	r22, 0xFF	; 255
    12ae:	7f ef       	ldi	r23, 0xFF	; 255
    12b0:	c5 01       	movw	r24, r10
    12b2:	38 d1       	rcall	.+624    	; 0x1524 <strnlen>
    12b4:	4c 01       	movw	r8, r24
    12b6:	82 01       	movw	r16, r4
    12b8:	f3 2d       	mov	r31, r3
    12ba:	ff 77       	andi	r31, 0x7F	; 127
    12bc:	3f 2e       	mov	r3, r31
    12be:	15 c0       	rjmp	.+42     	; 0x12ea <vfprintf+0x180>
    12c0:	28 01       	movw	r4, r16
    12c2:	22 e0       	ldi	r18, 0x02	; 2
    12c4:	42 0e       	add	r4, r18
    12c6:	51 1c       	adc	r5, r1
    12c8:	f8 01       	movw	r30, r16
    12ca:	a0 80       	ld	r10, Z
    12cc:	b1 80       	ldd	r11, Z+1	; 0x01
    12ce:	36 fe       	sbrs	r3, 6
    12d0:	03 c0       	rjmp	.+6      	; 0x12d8 <vfprintf+0x16e>
    12d2:	69 2d       	mov	r22, r9
    12d4:	70 e0       	ldi	r23, 0x00	; 0
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <vfprintf+0x172>
    12d8:	6f ef       	ldi	r22, 0xFF	; 255
    12da:	7f ef       	ldi	r23, 0xFF	; 255
    12dc:	c5 01       	movw	r24, r10
    12de:	17 d1       	rcall	.+558    	; 0x150e <strnlen_P>
    12e0:	4c 01       	movw	r8, r24
    12e2:	f3 2d       	mov	r31, r3
    12e4:	f0 68       	ori	r31, 0x80	; 128
    12e6:	3f 2e       	mov	r3, r31
    12e8:	82 01       	movw	r16, r4
    12ea:	33 fc       	sbrc	r3, 3
    12ec:	19 c0       	rjmp	.+50     	; 0x1320 <vfprintf+0x1b6>
    12ee:	82 2d       	mov	r24, r2
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	88 16       	cp	r8, r24
    12f4:	99 06       	cpc	r9, r25
    12f6:	a0 f4       	brcc	.+40     	; 0x1320 <vfprintf+0x1b6>
    12f8:	b6 01       	movw	r22, r12
    12fa:	80 e2       	ldi	r24, 0x20	; 32
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	1d d1       	rcall	.+570    	; 0x153a <fputc>
    1300:	2a 94       	dec	r2
    1302:	f5 cf       	rjmp	.-22     	; 0x12ee <vfprintf+0x184>
    1304:	f5 01       	movw	r30, r10
    1306:	37 fc       	sbrc	r3, 7
    1308:	85 91       	lpm	r24, Z+
    130a:	37 fe       	sbrs	r3, 7
    130c:	81 91       	ld	r24, Z+
    130e:	5f 01       	movw	r10, r30
    1310:	b6 01       	movw	r22, r12
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	12 d1       	rcall	.+548    	; 0x153a <fputc>
    1316:	21 10       	cpse	r2, r1
    1318:	2a 94       	dec	r2
    131a:	21 e0       	ldi	r18, 0x01	; 1
    131c:	82 1a       	sub	r8, r18
    131e:	91 08       	sbc	r9, r1
    1320:	81 14       	cp	r8, r1
    1322:	91 04       	cpc	r9, r1
    1324:	79 f7       	brne	.-34     	; 0x1304 <vfprintf+0x19a>
    1326:	e1 c0       	rjmp	.+450    	; 0x14ea <vfprintf+0x380>
    1328:	84 36       	cpi	r24, 0x64	; 100
    132a:	11 f0       	breq	.+4      	; 0x1330 <vfprintf+0x1c6>
    132c:	89 36       	cpi	r24, 0x69	; 105
    132e:	39 f5       	brne	.+78     	; 0x137e <vfprintf+0x214>
    1330:	f8 01       	movw	r30, r16
    1332:	37 fe       	sbrs	r3, 7
    1334:	07 c0       	rjmp	.+14     	; 0x1344 <vfprintf+0x1da>
    1336:	60 81       	ld	r22, Z
    1338:	71 81       	ldd	r23, Z+1	; 0x01
    133a:	82 81       	ldd	r24, Z+2	; 0x02
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	0c 5f       	subi	r16, 0xFC	; 252
    1340:	1f 4f       	sbci	r17, 0xFF	; 255
    1342:	08 c0       	rjmp	.+16     	; 0x1354 <vfprintf+0x1ea>
    1344:	60 81       	ld	r22, Z
    1346:	71 81       	ldd	r23, Z+1	; 0x01
    1348:	07 2e       	mov	r0, r23
    134a:	00 0c       	add	r0, r0
    134c:	88 0b       	sbc	r24, r24
    134e:	99 0b       	sbc	r25, r25
    1350:	0e 5f       	subi	r16, 0xFE	; 254
    1352:	1f 4f       	sbci	r17, 0xFF	; 255
    1354:	f3 2d       	mov	r31, r3
    1356:	ff 76       	andi	r31, 0x6F	; 111
    1358:	3f 2e       	mov	r3, r31
    135a:	97 ff       	sbrs	r25, 7
    135c:	09 c0       	rjmp	.+18     	; 0x1370 <vfprintf+0x206>
    135e:	90 95       	com	r25
    1360:	80 95       	com	r24
    1362:	70 95       	com	r23
    1364:	61 95       	neg	r22
    1366:	7f 4f       	sbci	r23, 0xFF	; 255
    1368:	8f 4f       	sbci	r24, 0xFF	; 255
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	f0 68       	ori	r31, 0x80	; 128
    136e:	3f 2e       	mov	r3, r31
    1370:	2a e0       	ldi	r18, 0x0A	; 10
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	a3 01       	movw	r20, r6
    1376:	1d d1       	rcall	.+570    	; 0x15b2 <__ultoa_invert>
    1378:	88 2e       	mov	r8, r24
    137a:	86 18       	sub	r8, r6
    137c:	44 c0       	rjmp	.+136    	; 0x1406 <vfprintf+0x29c>
    137e:	85 37       	cpi	r24, 0x75	; 117
    1380:	31 f4       	brne	.+12     	; 0x138e <vfprintf+0x224>
    1382:	23 2d       	mov	r18, r3
    1384:	2f 7e       	andi	r18, 0xEF	; 239
    1386:	b2 2e       	mov	r11, r18
    1388:	2a e0       	ldi	r18, 0x0A	; 10
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	25 c0       	rjmp	.+74     	; 0x13d8 <vfprintf+0x26e>
    138e:	93 2d       	mov	r25, r3
    1390:	99 7f       	andi	r25, 0xF9	; 249
    1392:	b9 2e       	mov	r11, r25
    1394:	8f 36       	cpi	r24, 0x6F	; 111
    1396:	c1 f0       	breq	.+48     	; 0x13c8 <vfprintf+0x25e>
    1398:	18 f4       	brcc	.+6      	; 0x13a0 <vfprintf+0x236>
    139a:	88 35       	cpi	r24, 0x58	; 88
    139c:	79 f0       	breq	.+30     	; 0x13bc <vfprintf+0x252>
    139e:	ae c0       	rjmp	.+348    	; 0x14fc <vfprintf+0x392>
    13a0:	80 37       	cpi	r24, 0x70	; 112
    13a2:	19 f0       	breq	.+6      	; 0x13aa <vfprintf+0x240>
    13a4:	88 37       	cpi	r24, 0x78	; 120
    13a6:	21 f0       	breq	.+8      	; 0x13b0 <vfprintf+0x246>
    13a8:	a9 c0       	rjmp	.+338    	; 0x14fc <vfprintf+0x392>
    13aa:	e9 2f       	mov	r30, r25
    13ac:	e0 61       	ori	r30, 0x10	; 16
    13ae:	be 2e       	mov	r11, r30
    13b0:	b4 fe       	sbrs	r11, 4
    13b2:	0d c0       	rjmp	.+26     	; 0x13ce <vfprintf+0x264>
    13b4:	fb 2d       	mov	r31, r11
    13b6:	f4 60       	ori	r31, 0x04	; 4
    13b8:	bf 2e       	mov	r11, r31
    13ba:	09 c0       	rjmp	.+18     	; 0x13ce <vfprintf+0x264>
    13bc:	34 fe       	sbrs	r3, 4
    13be:	0a c0       	rjmp	.+20     	; 0x13d4 <vfprintf+0x26a>
    13c0:	29 2f       	mov	r18, r25
    13c2:	26 60       	ori	r18, 0x06	; 6
    13c4:	b2 2e       	mov	r11, r18
    13c6:	06 c0       	rjmp	.+12     	; 0x13d4 <vfprintf+0x26a>
    13c8:	28 e0       	ldi	r18, 0x08	; 8
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	05 c0       	rjmp	.+10     	; 0x13d8 <vfprintf+0x26e>
    13ce:	20 e1       	ldi	r18, 0x10	; 16
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <vfprintf+0x26e>
    13d4:	20 e1       	ldi	r18, 0x10	; 16
    13d6:	32 e0       	ldi	r19, 0x02	; 2
    13d8:	f8 01       	movw	r30, r16
    13da:	b7 fe       	sbrs	r11, 7
    13dc:	07 c0       	rjmp	.+14     	; 0x13ec <vfprintf+0x282>
    13de:	60 81       	ld	r22, Z
    13e0:	71 81       	ldd	r23, Z+1	; 0x01
    13e2:	82 81       	ldd	r24, Z+2	; 0x02
    13e4:	93 81       	ldd	r25, Z+3	; 0x03
    13e6:	0c 5f       	subi	r16, 0xFC	; 252
    13e8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ea:	06 c0       	rjmp	.+12     	; 0x13f8 <vfprintf+0x28e>
    13ec:	60 81       	ld	r22, Z
    13ee:	71 81       	ldd	r23, Z+1	; 0x01
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	0e 5f       	subi	r16, 0xFE	; 254
    13f6:	1f 4f       	sbci	r17, 0xFF	; 255
    13f8:	a3 01       	movw	r20, r6
    13fa:	db d0       	rcall	.+438    	; 0x15b2 <__ultoa_invert>
    13fc:	88 2e       	mov	r8, r24
    13fe:	86 18       	sub	r8, r6
    1400:	fb 2d       	mov	r31, r11
    1402:	ff 77       	andi	r31, 0x7F	; 127
    1404:	3f 2e       	mov	r3, r31
    1406:	36 fe       	sbrs	r3, 6
    1408:	0d c0       	rjmp	.+26     	; 0x1424 <vfprintf+0x2ba>
    140a:	23 2d       	mov	r18, r3
    140c:	2e 7f       	andi	r18, 0xFE	; 254
    140e:	a2 2e       	mov	r10, r18
    1410:	89 14       	cp	r8, r9
    1412:	58 f4       	brcc	.+22     	; 0x142a <vfprintf+0x2c0>
    1414:	34 fe       	sbrs	r3, 4
    1416:	0b c0       	rjmp	.+22     	; 0x142e <vfprintf+0x2c4>
    1418:	32 fc       	sbrc	r3, 2
    141a:	09 c0       	rjmp	.+18     	; 0x142e <vfprintf+0x2c4>
    141c:	83 2d       	mov	r24, r3
    141e:	8e 7e       	andi	r24, 0xEE	; 238
    1420:	a8 2e       	mov	r10, r24
    1422:	05 c0       	rjmp	.+10     	; 0x142e <vfprintf+0x2c4>
    1424:	b8 2c       	mov	r11, r8
    1426:	a3 2c       	mov	r10, r3
    1428:	03 c0       	rjmp	.+6      	; 0x1430 <vfprintf+0x2c6>
    142a:	b8 2c       	mov	r11, r8
    142c:	01 c0       	rjmp	.+2      	; 0x1430 <vfprintf+0x2c6>
    142e:	b9 2c       	mov	r11, r9
    1430:	a4 fe       	sbrs	r10, 4
    1432:	0f c0       	rjmp	.+30     	; 0x1452 <vfprintf+0x2e8>
    1434:	fe 01       	movw	r30, r28
    1436:	e8 0d       	add	r30, r8
    1438:	f1 1d       	adc	r31, r1
    143a:	80 81       	ld	r24, Z
    143c:	80 33       	cpi	r24, 0x30	; 48
    143e:	21 f4       	brne	.+8      	; 0x1448 <vfprintf+0x2de>
    1440:	9a 2d       	mov	r25, r10
    1442:	99 7e       	andi	r25, 0xE9	; 233
    1444:	a9 2e       	mov	r10, r25
    1446:	09 c0       	rjmp	.+18     	; 0x145a <vfprintf+0x2f0>
    1448:	a2 fe       	sbrs	r10, 2
    144a:	06 c0       	rjmp	.+12     	; 0x1458 <vfprintf+0x2ee>
    144c:	b3 94       	inc	r11
    144e:	b3 94       	inc	r11
    1450:	04 c0       	rjmp	.+8      	; 0x145a <vfprintf+0x2f0>
    1452:	8a 2d       	mov	r24, r10
    1454:	86 78       	andi	r24, 0x86	; 134
    1456:	09 f0       	breq	.+2      	; 0x145a <vfprintf+0x2f0>
    1458:	b3 94       	inc	r11
    145a:	a3 fc       	sbrc	r10, 3
    145c:	10 c0       	rjmp	.+32     	; 0x147e <vfprintf+0x314>
    145e:	a0 fe       	sbrs	r10, 0
    1460:	06 c0       	rjmp	.+12     	; 0x146e <vfprintf+0x304>
    1462:	b2 14       	cp	r11, r2
    1464:	80 f4       	brcc	.+32     	; 0x1486 <vfprintf+0x31c>
    1466:	28 0c       	add	r2, r8
    1468:	92 2c       	mov	r9, r2
    146a:	9b 18       	sub	r9, r11
    146c:	0d c0       	rjmp	.+26     	; 0x1488 <vfprintf+0x31e>
    146e:	b2 14       	cp	r11, r2
    1470:	58 f4       	brcc	.+22     	; 0x1488 <vfprintf+0x31e>
    1472:	b6 01       	movw	r22, r12
    1474:	80 e2       	ldi	r24, 0x20	; 32
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	60 d0       	rcall	.+192    	; 0x153a <fputc>
    147a:	b3 94       	inc	r11
    147c:	f8 cf       	rjmp	.-16     	; 0x146e <vfprintf+0x304>
    147e:	b2 14       	cp	r11, r2
    1480:	18 f4       	brcc	.+6      	; 0x1488 <vfprintf+0x31e>
    1482:	2b 18       	sub	r2, r11
    1484:	02 c0       	rjmp	.+4      	; 0x148a <vfprintf+0x320>
    1486:	98 2c       	mov	r9, r8
    1488:	21 2c       	mov	r2, r1
    148a:	a4 fe       	sbrs	r10, 4
    148c:	0f c0       	rjmp	.+30     	; 0x14ac <vfprintf+0x342>
    148e:	b6 01       	movw	r22, r12
    1490:	80 e3       	ldi	r24, 0x30	; 48
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	52 d0       	rcall	.+164    	; 0x153a <fputc>
    1496:	a2 fe       	sbrs	r10, 2
    1498:	16 c0       	rjmp	.+44     	; 0x14c6 <vfprintf+0x35c>
    149a:	a1 fc       	sbrc	r10, 1
    149c:	03 c0       	rjmp	.+6      	; 0x14a4 <vfprintf+0x33a>
    149e:	88 e7       	ldi	r24, 0x78	; 120
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	02 c0       	rjmp	.+4      	; 0x14a8 <vfprintf+0x33e>
    14a4:	88 e5       	ldi	r24, 0x58	; 88
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	b6 01       	movw	r22, r12
    14aa:	0c c0       	rjmp	.+24     	; 0x14c4 <vfprintf+0x35a>
    14ac:	8a 2d       	mov	r24, r10
    14ae:	86 78       	andi	r24, 0x86	; 134
    14b0:	51 f0       	breq	.+20     	; 0x14c6 <vfprintf+0x35c>
    14b2:	a1 fe       	sbrs	r10, 1
    14b4:	02 c0       	rjmp	.+4      	; 0x14ba <vfprintf+0x350>
    14b6:	8b e2       	ldi	r24, 0x2B	; 43
    14b8:	01 c0       	rjmp	.+2      	; 0x14bc <vfprintf+0x352>
    14ba:	80 e2       	ldi	r24, 0x20	; 32
    14bc:	a7 fc       	sbrc	r10, 7
    14be:	8d e2       	ldi	r24, 0x2D	; 45
    14c0:	b6 01       	movw	r22, r12
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	3a d0       	rcall	.+116    	; 0x153a <fputc>
    14c6:	89 14       	cp	r8, r9
    14c8:	30 f4       	brcc	.+12     	; 0x14d6 <vfprintf+0x36c>
    14ca:	b6 01       	movw	r22, r12
    14cc:	80 e3       	ldi	r24, 0x30	; 48
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	34 d0       	rcall	.+104    	; 0x153a <fputc>
    14d2:	9a 94       	dec	r9
    14d4:	f8 cf       	rjmp	.-16     	; 0x14c6 <vfprintf+0x35c>
    14d6:	8a 94       	dec	r8
    14d8:	f3 01       	movw	r30, r6
    14da:	e8 0d       	add	r30, r8
    14dc:	f1 1d       	adc	r31, r1
    14de:	80 81       	ld	r24, Z
    14e0:	b6 01       	movw	r22, r12
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	2a d0       	rcall	.+84     	; 0x153a <fputc>
    14e6:	81 10       	cpse	r8, r1
    14e8:	f6 cf       	rjmp	.-20     	; 0x14d6 <vfprintf+0x36c>
    14ea:	22 20       	and	r2, r2
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <vfprintf+0x386>
    14ee:	4e ce       	rjmp	.-868    	; 0x118c <vfprintf+0x22>
    14f0:	b6 01       	movw	r22, r12
    14f2:	80 e2       	ldi	r24, 0x20	; 32
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	21 d0       	rcall	.+66     	; 0x153a <fputc>
    14f8:	2a 94       	dec	r2
    14fa:	f7 cf       	rjmp	.-18     	; 0x14ea <vfprintf+0x380>
    14fc:	f6 01       	movw	r30, r12
    14fe:	86 81       	ldd	r24, Z+6	; 0x06
    1500:	97 81       	ldd	r25, Z+7	; 0x07
    1502:	02 c0       	rjmp	.+4      	; 0x1508 <vfprintf+0x39e>
    1504:	8f ef       	ldi	r24, 0xFF	; 255
    1506:	9f ef       	ldi	r25, 0xFF	; 255
    1508:	2b 96       	adiw	r28, 0x0b	; 11
    150a:	e2 e1       	ldi	r30, 0x12	; 18
    150c:	cc c0       	rjmp	.+408    	; 0x16a6 <__epilogue_restores__>

0000150e <strnlen_P>:
    150e:	fc 01       	movw	r30, r24
    1510:	05 90       	lpm	r0, Z+
    1512:	61 50       	subi	r22, 0x01	; 1
    1514:	70 40       	sbci	r23, 0x00	; 0
    1516:	01 10       	cpse	r0, r1
    1518:	d8 f7       	brcc	.-10     	; 0x1510 <strnlen_P+0x2>
    151a:	80 95       	com	r24
    151c:	90 95       	com	r25
    151e:	8e 0f       	add	r24, r30
    1520:	9f 1f       	adc	r25, r31
    1522:	08 95       	ret

00001524 <strnlen>:
    1524:	fc 01       	movw	r30, r24
    1526:	61 50       	subi	r22, 0x01	; 1
    1528:	70 40       	sbci	r23, 0x00	; 0
    152a:	01 90       	ld	r0, Z+
    152c:	01 10       	cpse	r0, r1
    152e:	d8 f7       	brcc	.-10     	; 0x1526 <strnlen+0x2>
    1530:	80 95       	com	r24
    1532:	90 95       	com	r25
    1534:	8e 0f       	add	r24, r30
    1536:	9f 1f       	adc	r25, r31
    1538:	08 95       	ret

0000153a <fputc>:
    153a:	0f 93       	push	r16
    153c:	1f 93       	push	r17
    153e:	cf 93       	push	r28
    1540:	df 93       	push	r29
    1542:	fb 01       	movw	r30, r22
    1544:	23 81       	ldd	r18, Z+3	; 0x03
    1546:	21 fd       	sbrc	r18, 1
    1548:	03 c0       	rjmp	.+6      	; 0x1550 <fputc+0x16>
    154a:	8f ef       	ldi	r24, 0xFF	; 255
    154c:	9f ef       	ldi	r25, 0xFF	; 255
    154e:	2c c0       	rjmp	.+88     	; 0x15a8 <fputc+0x6e>
    1550:	22 ff       	sbrs	r18, 2
    1552:	16 c0       	rjmp	.+44     	; 0x1580 <fputc+0x46>
    1554:	46 81       	ldd	r20, Z+6	; 0x06
    1556:	57 81       	ldd	r21, Z+7	; 0x07
    1558:	24 81       	ldd	r18, Z+4	; 0x04
    155a:	35 81       	ldd	r19, Z+5	; 0x05
    155c:	42 17       	cp	r20, r18
    155e:	53 07       	cpc	r21, r19
    1560:	44 f4       	brge	.+16     	; 0x1572 <fputc+0x38>
    1562:	a0 81       	ld	r26, Z
    1564:	b1 81       	ldd	r27, Z+1	; 0x01
    1566:	9d 01       	movw	r18, r26
    1568:	2f 5f       	subi	r18, 0xFF	; 255
    156a:	3f 4f       	sbci	r19, 0xFF	; 255
    156c:	31 83       	std	Z+1, r19	; 0x01
    156e:	20 83       	st	Z, r18
    1570:	8c 93       	st	X, r24
    1572:	26 81       	ldd	r18, Z+6	; 0x06
    1574:	37 81       	ldd	r19, Z+7	; 0x07
    1576:	2f 5f       	subi	r18, 0xFF	; 255
    1578:	3f 4f       	sbci	r19, 0xFF	; 255
    157a:	37 83       	std	Z+7, r19	; 0x07
    157c:	26 83       	std	Z+6, r18	; 0x06
    157e:	14 c0       	rjmp	.+40     	; 0x15a8 <fputc+0x6e>
    1580:	8b 01       	movw	r16, r22
    1582:	ec 01       	movw	r28, r24
    1584:	fb 01       	movw	r30, r22
    1586:	00 84       	ldd	r0, Z+8	; 0x08
    1588:	f1 85       	ldd	r31, Z+9	; 0x09
    158a:	e0 2d       	mov	r30, r0
    158c:	09 95       	icall
    158e:	89 2b       	or	r24, r25
    1590:	e1 f6       	brne	.-72     	; 0x154a <fputc+0x10>
    1592:	d8 01       	movw	r26, r16
    1594:	16 96       	adiw	r26, 0x06	; 6
    1596:	8d 91       	ld	r24, X+
    1598:	9c 91       	ld	r25, X
    159a:	17 97       	sbiw	r26, 0x07	; 7
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	17 96       	adiw	r26, 0x07	; 7
    15a0:	9c 93       	st	X, r25
    15a2:	8e 93       	st	-X, r24
    15a4:	16 97       	sbiw	r26, 0x06	; 6
    15a6:	ce 01       	movw	r24, r28
    15a8:	df 91       	pop	r29
    15aa:	cf 91       	pop	r28
    15ac:	1f 91       	pop	r17
    15ae:	0f 91       	pop	r16
    15b0:	08 95       	ret

000015b2 <__ultoa_invert>:
    15b2:	fa 01       	movw	r30, r20
    15b4:	aa 27       	eor	r26, r26
    15b6:	28 30       	cpi	r18, 0x08	; 8
    15b8:	51 f1       	breq	.+84     	; 0x160e <__ultoa_invert+0x5c>
    15ba:	20 31       	cpi	r18, 0x10	; 16
    15bc:	81 f1       	breq	.+96     	; 0x161e <__ultoa_invert+0x6c>
    15be:	e8 94       	clt
    15c0:	6f 93       	push	r22
    15c2:	6e 7f       	andi	r22, 0xFE	; 254
    15c4:	6e 5f       	subi	r22, 0xFE	; 254
    15c6:	7f 4f       	sbci	r23, 0xFF	; 255
    15c8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	af 4f       	sbci	r26, 0xFF	; 255
    15ce:	b1 e0       	ldi	r27, 0x01	; 1
    15d0:	3e d0       	rcall	.+124    	; 0x164e <__ultoa_invert+0x9c>
    15d2:	b4 e0       	ldi	r27, 0x04	; 4
    15d4:	3c d0       	rcall	.+120    	; 0x164e <__ultoa_invert+0x9c>
    15d6:	67 0f       	add	r22, r23
    15d8:	78 1f       	adc	r23, r24
    15da:	89 1f       	adc	r24, r25
    15dc:	9a 1f       	adc	r25, r26
    15de:	a1 1d       	adc	r26, r1
    15e0:	68 0f       	add	r22, r24
    15e2:	79 1f       	adc	r23, r25
    15e4:	8a 1f       	adc	r24, r26
    15e6:	91 1d       	adc	r25, r1
    15e8:	a1 1d       	adc	r26, r1
    15ea:	6a 0f       	add	r22, r26
    15ec:	71 1d       	adc	r23, r1
    15ee:	81 1d       	adc	r24, r1
    15f0:	91 1d       	adc	r25, r1
    15f2:	a1 1d       	adc	r26, r1
    15f4:	20 d0       	rcall	.+64     	; 0x1636 <__ultoa_invert+0x84>
    15f6:	09 f4       	brne	.+2      	; 0x15fa <__ultoa_invert+0x48>
    15f8:	68 94       	set
    15fa:	3f 91       	pop	r19
    15fc:	2a e0       	ldi	r18, 0x0A	; 10
    15fe:	26 9f       	mul	r18, r22
    1600:	11 24       	eor	r1, r1
    1602:	30 19       	sub	r19, r0
    1604:	30 5d       	subi	r19, 0xD0	; 208
    1606:	31 93       	st	Z+, r19
    1608:	de f6       	brtc	.-74     	; 0x15c0 <__ultoa_invert+0xe>
    160a:	cf 01       	movw	r24, r30
    160c:	08 95       	ret
    160e:	46 2f       	mov	r20, r22
    1610:	47 70       	andi	r20, 0x07	; 7
    1612:	40 5d       	subi	r20, 0xD0	; 208
    1614:	41 93       	st	Z+, r20
    1616:	b3 e0       	ldi	r27, 0x03	; 3
    1618:	0f d0       	rcall	.+30     	; 0x1638 <__ultoa_invert+0x86>
    161a:	c9 f7       	brne	.-14     	; 0x160e <__ultoa_invert+0x5c>
    161c:	f6 cf       	rjmp	.-20     	; 0x160a <__ultoa_invert+0x58>
    161e:	46 2f       	mov	r20, r22
    1620:	4f 70       	andi	r20, 0x0F	; 15
    1622:	40 5d       	subi	r20, 0xD0	; 208
    1624:	4a 33       	cpi	r20, 0x3A	; 58
    1626:	18 f0       	brcs	.+6      	; 0x162e <__ultoa_invert+0x7c>
    1628:	49 5d       	subi	r20, 0xD9	; 217
    162a:	31 fd       	sbrc	r19, 1
    162c:	40 52       	subi	r20, 0x20	; 32
    162e:	41 93       	st	Z+, r20
    1630:	02 d0       	rcall	.+4      	; 0x1636 <__ultoa_invert+0x84>
    1632:	a9 f7       	brne	.-22     	; 0x161e <__ultoa_invert+0x6c>
    1634:	ea cf       	rjmp	.-44     	; 0x160a <__ultoa_invert+0x58>
    1636:	b4 e0       	ldi	r27, 0x04	; 4
    1638:	a6 95       	lsr	r26
    163a:	97 95       	ror	r25
    163c:	87 95       	ror	r24
    163e:	77 95       	ror	r23
    1640:	67 95       	ror	r22
    1642:	ba 95       	dec	r27
    1644:	c9 f7       	brne	.-14     	; 0x1638 <__ultoa_invert+0x86>
    1646:	00 97       	sbiw	r24, 0x00	; 0
    1648:	61 05       	cpc	r22, r1
    164a:	71 05       	cpc	r23, r1
    164c:	08 95       	ret
    164e:	9b 01       	movw	r18, r22
    1650:	ac 01       	movw	r20, r24
    1652:	0a 2e       	mov	r0, r26
    1654:	06 94       	lsr	r0
    1656:	57 95       	ror	r21
    1658:	47 95       	ror	r20
    165a:	37 95       	ror	r19
    165c:	27 95       	ror	r18
    165e:	ba 95       	dec	r27
    1660:	c9 f7       	brne	.-14     	; 0x1654 <__ultoa_invert+0xa2>
    1662:	62 0f       	add	r22, r18
    1664:	73 1f       	adc	r23, r19
    1666:	84 1f       	adc	r24, r20
    1668:	95 1f       	adc	r25, r21
    166a:	a0 1d       	adc	r26, r0
    166c:	08 95       	ret

0000166e <__prologue_saves__>:
    166e:	2f 92       	push	r2
    1670:	3f 92       	push	r3
    1672:	4f 92       	push	r4
    1674:	5f 92       	push	r5
    1676:	6f 92       	push	r6
    1678:	7f 92       	push	r7
    167a:	8f 92       	push	r8
    167c:	9f 92       	push	r9
    167e:	af 92       	push	r10
    1680:	bf 92       	push	r11
    1682:	cf 92       	push	r12
    1684:	df 92       	push	r13
    1686:	ef 92       	push	r14
    1688:	ff 92       	push	r15
    168a:	0f 93       	push	r16
    168c:	1f 93       	push	r17
    168e:	cf 93       	push	r28
    1690:	df 93       	push	r29
    1692:	cd b7       	in	r28, 0x3d	; 61
    1694:	de b7       	in	r29, 0x3e	; 62
    1696:	ca 1b       	sub	r28, r26
    1698:	db 0b       	sbc	r29, r27
    169a:	0f b6       	in	r0, 0x3f	; 63
    169c:	f8 94       	cli
    169e:	de bf       	out	0x3e, r29	; 62
    16a0:	0f be       	out	0x3f, r0	; 63
    16a2:	cd bf       	out	0x3d, r28	; 61
    16a4:	09 94       	ijmp

000016a6 <__epilogue_restores__>:
    16a6:	2a 88       	ldd	r2, Y+18	; 0x12
    16a8:	39 88       	ldd	r3, Y+17	; 0x11
    16aa:	48 88       	ldd	r4, Y+16	; 0x10
    16ac:	5f 84       	ldd	r5, Y+15	; 0x0f
    16ae:	6e 84       	ldd	r6, Y+14	; 0x0e
    16b0:	7d 84       	ldd	r7, Y+13	; 0x0d
    16b2:	8c 84       	ldd	r8, Y+12	; 0x0c
    16b4:	9b 84       	ldd	r9, Y+11	; 0x0b
    16b6:	aa 84       	ldd	r10, Y+10	; 0x0a
    16b8:	b9 84       	ldd	r11, Y+9	; 0x09
    16ba:	c8 84       	ldd	r12, Y+8	; 0x08
    16bc:	df 80       	ldd	r13, Y+7	; 0x07
    16be:	ee 80       	ldd	r14, Y+6	; 0x06
    16c0:	fd 80       	ldd	r15, Y+5	; 0x05
    16c2:	0c 81       	ldd	r16, Y+4	; 0x04
    16c4:	1b 81       	ldd	r17, Y+3	; 0x03
    16c6:	aa 81       	ldd	r26, Y+2	; 0x02
    16c8:	b9 81       	ldd	r27, Y+1	; 0x01
    16ca:	ce 0f       	add	r28, r30
    16cc:	d1 1d       	adc	r29, r1
    16ce:	0f b6       	in	r0, 0x3f	; 63
    16d0:	f8 94       	cli
    16d2:	de bf       	out	0x3e, r29	; 62
    16d4:	0f be       	out	0x3f, r0	; 63
    16d6:	cd bf       	out	0x3d, r28	; 61
    16d8:	ed 01       	movw	r28, r26
    16da:	08 95       	ret

000016dc <_exit>:
    16dc:	f8 94       	cli

000016de <__stop_program>:
    16de:	ff cf       	rjmp	.-2      	; 0x16de <__stop_program>
